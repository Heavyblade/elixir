<svg height="4050" style="font-family: 'Ubuntu'; font-size: 1; font-weight: 900;" viewBox="0 0 240.0 400" width="3150" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
	<text fill="#FFFFFFFF" x="0.0" y="0"># == Schema Information # # Table name: rubric_comments # #  id                       :integer          not null, primary key #  user_activity_attempt_id :integer #  rubric_id                :integer #  author_id                :integer #  comment                  :text             not null # class RubricComment &lt; ActiveRecord::Base belongs_to :author, class_name: User.name belongs_to :user_activi</text>
	<text fill="#FFFFFFFF" x="0.0" y="1">ty_attempt belongs_to :rubric validates :author, presence: true validates :user_activity_attempt_id, presence: true validates :rubric, presence: true validates :comment, presence: true end class Task extend ActiveModel::Naming include ActiveModel::Conversion attr_accessor :user, :model, :method, :args, :identifier, :rval def self.get_status(identifier) # TODO: Query memcached to see if task has be</text>
	<text fill="#FFFFFFFF" x="0.0" y="2">en processed yet. Remember, these expire. #       Returned not_found, queued, started, completed, failed. #       Also, return what the task returned or the exception information. end def initialize(user, model, method, *args) self.identifier = SecureRandom.uuid self.user = user self.model = model self.method = method self.args = args self.rval = nil raise "ERROR TasK: model must have a value" if </text>
	<text fill="#FFFFFFFF" x="0.0" y="3">self.model.nil? raise "ERROR Task: method not found (#{self.method.to_s})" if self.method.nil? || !self.model.respond_to?(self.method) # TODO: Add task as queued to memcached end def run # TODO: This method should catch exception and update the cache. On exception, should we write something to a table? Sherlock.temp_whodunnit(self.user) do # TODO: Update the cache to show a status of started self.</text>
	<text fill="#FFFFFFFF" x="0.0" y="4">rval = (self.args.nil?) ? self.model.send(self.method) : self.model.send(self.method, *self.args) # TODO: Update the cache to show completed/failed end self.rval end end # == Schema Information # # Table name: rubric_criteria # #  id             :integer          not null, primary key #  title          :string(255)      not null #  description    :text #  maximum_points :integer          not null </text>
	<text fill="#FFFFFFFF" x="0.0" y="5">#  rubric_id      :integer          not null #  created_at     :datetime #  updated_at     :datetime # class RubricCriterium &lt; ActiveRecord::Base validates  :rubric, presence: true validates :title, presence: true belongs_to :rubric, inverse_of: :rubric_criteria has_many   :rubric_rules,  -&gt;{order("position")}, dependent: :destroy, inverse_of: :rubric_criterium has_many   :user_rules, through: :ru</text>
	<text fill="#FFFFFFFF" x="0.0" y="6">bric_rules, inverse_of: :rubric_criterium accepts_nested_attributes_for :rubric_rules, allow_destroy: true def get_maximun_rule_points self.rubric_rules.order("points desc").first end end # == Schema Information # # Table name: notification_subscriptions # #  id           :integer          not null, primary key #  user_id      :integer          not null #  subject_id   :integer          not null #</text>
	<text fill="#FFFFFFFF" x="0.0" y="7">  subject_type :string(255)      not null #  event_type   :string(255)      not null #  active       :boolean          default(TRUE), not null #  created_at   :datetime #  updated_at   :datetime # class NotificationSubscription &lt; ActiveRecord::Base belongs_to :user belongs_to :subject, polymorphic: true scope :active, -&gt; { where(active: true) } scope :inactive, -&gt; { where(active: false) } end # ==</text>
	<text fill="#FFFFFFFF" x="0.0" y="8"> Schema Information # # Table name: competencies # #  id                    :integer          not null, primary key #  name                  :string(255)      not null #  ancestry              :string(255) #  created_at            :datetime         not null #  updated_at            :datetime         not null #  competency_library_id :integer          not null #  ancestry_depth        :integer     </text>
	<text fill="#FFFFFFFF" x="0.0" y="9">     default(0) #  children_count        :integer          default(0), not null #  description           :text #  version_number        :integer          default(1), not null #  ancestor_id           :integer #  published             :boolean          default(FALSE), not null #  identifier            :string(255)      not null #  owner_institution_id  :integer          not null #  mastery_score   </text>
	<text fill="#FFFFFFFF" x="0.0" y="10">      :integer          default(80), not null # require 'csv' class Competency &lt; ActiveRecord::Base # This needs to be before InstitutionSecured so that the owner gets set properly before_create :add_competency_library include InstitutionSecured include Versioned has_ancestry(:cache_depth =&gt; true) acts_as_taggable_on :tags belongs_to :competency_library, :inverse_of =&gt; :competencies has_many :comp</text>
	<text fill="#FFFFFFFF" x="0.0" y="11">etency_programs, :inverse_of =&gt; :competency, :dependent =&gt; :destroy has_many :programs, :through =&gt; :competency_programs has_many :competency_objectives, :inverse_of =&gt; :competency, :dependent =&gt; :destroy has_many :learning_objectives, :through =&gt; :competency_objectives has_many :user_competencies, :inverse_of =&gt; :competency, :dependent =&gt; :destroy has_many :users, -&gt; { includes :user_competencies</text>
	<text fill="#FFFFFFFF" x="0.0" y="12"> }, :through =&gt; :user_competencies # validates_each :name, :description, :updated_at, :ancestry, :competency_library_id, on: :update do |record, attr, _value| #   if record.active? &amp;&amp; record.changed.include?(attr.to_s) #     record.errors.add(:attr, "cannot modify #{attr} if competency is active") #   end # end validates_presence_of :description validates :name, length: { maximum: 100 } scope :lea</text>
	<text fill="#FFFFFFFF" x="0.0" y="13">ves, -&gt; { where(:children_count =&gt; 0) } scope :with_ids, -&gt;(ids){ where(id: ids) } scope :excludes_competencies_with_ids, -&gt;(ids){ where.not(id: ids) } after_create :ensure_institution_acl # Have to do destroy this way because Rails does the dependents before a before_destroy. # Since we want to check for associations, we have to do it first. def destroy if user_competencies.count &gt; 0 errors.add(:</text>
	<text fill="#FFFFFFFF" x="0.0" y="14">base, :user_competency_count) false else super end end def permitted?(user, action) allowed = case action when Right::DRAFT, Right::PUBLISH # Draft and pubish only allowed at the library level false else true end raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") unless allowed super(user, action) end def create_draft! raise DraftError.new("FATAL ER</text>
	<text fill="#FFFFFFFF" x="0.0" y="15">ROR: You must implement create draft at the CompetencyLibrary level!") end # Override this if publish has side effects. Be sure to call super for the attribute to be updated. def publish! raise DraftError.new("FATAL ERROR: You must publish at the CompetencyLibrary level!") end # Override InstitutionSecured to set owner to always be same as library. This is called before create. # This depends on a</text>
	<text fill="#FFFFFFFF" x="0.0" y="16">lways having a library def set_owner_institution_before_create self.owner_institution_id ||= self.competency_library.owner_institution_id end def sub_competencies descendants.select { |next_topic| next_topic.children.size == 0 } end def update_children_count! self.children_count = self.children.count self.save! end def leaf_competencies self.subtree.where(children_count: 0) end def leaf? self.chil</text>
	<text fill="#FFFFFFFF" x="0.0" y="17">dren_count == 0 end def available_learning_objectives learning_objectives.latest_versions.is_published end def import_csv(data) row_map = {} row_count = 2  # 2 because we're skipping the header # column 0 is competency ID # column 1 is competency name # column 2 is competency description # column 3 is row number of parent competency.  Rows with empty parent cell will be parented to #   CompetencyL</text>
	<text fill="#FFFFFFFF" x="0.0" y="18">ibrary's root # column 4 is competency mastery score csv_data = CSV.parse(data, headers: true, skip_blanks: true) # make sure file starts with header, which we require so we can do some row counting raise "CSV file doesn't have a valid header row" unless %w(ID Name Description Parent\ Row Mastery\ Score) == csv_data.headers.compact Competency.transaction do csv_data.each do |row| comp_id = Integer</text>
	<text fill="#FFFFFFFF" x="0.0" y="19">(row[0].to_s) if row[0] comp_name = row[1] comp_desc = row[2] comp_parent_row = row[3] comp_mastery_score = row[4] || 80 if row_map.has_key? comp_parent_row parent_id = row_map[comp_parent_row] elsif !comp_parent_row.nil? raise "Parent row doesn't exist for row #{row_count}" else parent_id = self.id end attrs = {name: comp_name, description: comp_desc, parent_id: parent_id, mastery_score: comp_mas</text>
	<text fill="#FFFFFFFF" x="0.0" y="20">tery_score} if comp_id == nil competency = Competency.create!(attrs) else raise "Row #{row_count} references competency ID #{comp_id}, which is not a descendant of this competency." unless self.subtree_ids.include?(comp_id) competency = Competency.update(comp_id, attrs) end row_map[row_count.to_s] = competency.id row_count += 1 end end self.reload self.subtree.each &amp;:update_children_count! end def</text>
	<text fill="#FFFFFFFF" x="0.0" y="21"> export_csv row_map = {} row_count = 2 csv_string = CSV.generate do |csv| csv &lt;&lt; ['ID', 'Name', 'Description', 'Parent Row', 'Mastery Score'] # note that oder matters, you want ancestors before their descendants Competency.sort_by_ancestry(self.descendants).each do |e| row_id = row_map[e.parent_id] unless e.parent_id == self.id csv &lt;&lt; [e.id, e.name, e.description, row_id, e.mastery_score] row_map[</text>
	<text fill="#FFFFFFFF" x="0.0" y="22">e.id] = row_count row_count += 1 end end return csv_string end def update_learning_objective_weights(weights) Competency.transaction(requires_new: true) do # Only update if all the weights are provided cos = self.competency_objectives.where(learning_objective_id: weights.map { |w| w[:id] }) if cos.sort == self.competency_objectives.sort self.competency_objectives.each do |co| w = weights.find { |i</text>
	<text fill="#FFFFFFFF" x="0.0" y="23">| i[:id] == co.learning_objective_id } co.update!(weight: w[:weight]) end end end weights end def learning_activities LearningActivity.joins(:learning_activity_learning_objectives).where(learning_activity_learning_objectives: { learning_objective: learning_objectives }).all end protected def add_competency_library self.competency_library_id ||= self.parent.competency_library_id self.owner_institut</text>
	<text fill="#FFFFFFFF" x="0.0" y="24">ion_id ||= self.parent.owner_institution_id end # After create, make sure we have the same ACL as the library def ensure_institution_acl self.competency_library.institution_ids.each { |cl_id| self.grant_institution_access(cl_id) } end # DO NOT EVER CALL THIS METHOD DIRECTLY!!! Always called from library. def grant_institution_access(institution_id) super do LearningObjective.unscoped do self.learn</text>
	<text fill="#FFFFFFFF" x="0.0" y="25">ing_objectives.each { |lo| lo.grant_institution_access(institution_id) } end end end # DO NOT EVER CALL THIS METHOD DIRECTLY!!! Always called from library. def remove_institution_access(institution_id) super do LearningObjective.unscoped do self.learning_objectives.each { |lo| lo.remove_institution_access(institution_id) } end end end end # == Schema Information # # Table name: user_activity_attri</text>
	<text fill="#FFFFFFFF" x="0.0" y="26">butes # #  id               :integer          not null, primary key #  key              :string(255)      not null #  value            :string(255)      not null #  user_activity_id :integer          not null #  created_at       :datetime #  updated_at       :datetime # class UserActivityAttribute &lt; ActiveRecord::Base belongs_to :user_activity, inverse_of: :user_activitity_attributes end # == Sche</text>
	<text fill="#FFFFFFFF" x="0.0" y="27">ma Information # # Table name: notes # #  id           :integer          not null, primary key #  user_id      :integer          not null #  editor_id    :integer #  published    :boolean          default(FALSE), not null #  published_at :datetime #  body         :text             not null #  created_at   :datetime #  updated_at   :datetime #  student_id   :integer          not null # class Note &lt;</text>
	<text fill="#FFFFFFFF" x="0.0" y="28"> ActiveRecord::Base belongs_to :user                        # Author belongs_to :student, class_name: User   # Student belongs_to :editor, class_name: User    # Editor scope :is_published, -&gt; { where(published: true) } scope :is_draft,     -&gt; { where(published: false) } scope :order_by_draft_first, -&gt;{order("published asc, updated_at desc")} before_save :set_published_at # TODO: do something with </text>
	<text fill="#FFFFFFFF" x="0.0" y="29">ransack here # We will need one of these def permitted?(user, action) allowed = case action when Right::UPDATE if self.user.eql?(user) !self.published?  # if user is the author, can only update if not published else self.published? &amp;&amp; user.has_rights?(Right::MANAGE, 'notes')    # If user is not the author, then can only edit if published end when Right::READ # The the user is not the author, than </text>
	<text fill="#FFFFFFFF" x="0.0" y="30">you can only see the published ones. self.user.eql?(user) || self.published? else # Default is to allow. Overide if you want different true end raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") unless allowed allowed end def publish! unless self.published? self.published = true self.save! end self end protected def set_published_at if self.publishe</text>
	<text fill="#FFFFFFFF" x="0.0" y="31">d_changed? &amp;&amp; self.published_change == [false, true] self.published_at = Time.current end end end # == Schema Information # # Table name: webex_meeting_participants # #  id               :integer          not null, primary key #  user_id          :integer #  webex_meeting_id :integer #  role             :string #  created_at       :datetime         not null #  updated_at       :datetime         no</text>
	<text fill="#FFFFFFFF" x="0.0" y="32">t null # class WebexMeetingParticipant &lt; ActiveRecord::Base validates :user, presence: true validates :webex_meeting, presence: true validates :role, presence: true belongs_to :user belongs_to :webex_meeting after_save -&gt; { send_notification(:meeting_created) }, if: :is_student? after_destroy -&gt; { send_notification(:meeting_cancelled) }, if: :is_student? after_destroy -&gt; { send_email }, if: :is_st</text>
	<text fill="#FFFFFFFF" x="0.0" y="33">udent? scope :instructors, lambda { where(role: Role::INSTRUCTOR) } scope :students, lambda { where(role: Role::STUDENT) } def is_student? self.role == Role::STUDENT end private def send_notification(event) notification = Notifications::WebexNotification.new(self, event) notification.permitted?(current_user, Right::CREATE) if current_user notification.send(:create_notification) end def send_email </text>
	<text fill="#FFFFFFFF" x="0.0" y="34">options = self.webex_meeting.mail_options.merge("student_id": self.user_id) MailWorker.perform_async("WebexCancellationMailer", options) end end # == Schema Information # # Table name: activity_scores # #  id                       :integer          not null, primary key #  user_activity_id         :integer #  score                    :integer #  instructor_override      :boolean #  instructor_id  </text>
	<text fill="#FFFFFFFF" x="0.0" y="35">          :integer #  created_at               :datetime #  updated_at               :datetime #  maximum_score            :integer          not null #  program_id               :integer #  curriculum_id            :integer #  learning_objective_id    :integer #  learning_activity_id     :integer #  student_response         :text #  cohort_id                :integer #  scored_at                :da</text>
	<text fill="#FFFFFFFF" x="0.0" y="36">tetime #  user_activity_attempt_id :integer # class ActivityScore &lt; ActiveRecord::Base belongs_to :user_activity_attempt, inverse_of: :activity_scores #these are all optional, but we'd really like to have them. belongs_to :learning_objective belongs_to :program belongs_to :curriculum belongs_to :learning_activity belongs_to :cohort belongs_to :instructor, class_name: User.name has_many :activity_s</text>
	<text fill="#FFFFFFFF" x="0.0" y="37">core_attributes, inverse_of: :activity_score, dependent: :destroy has_many :activity_score_comments, -&gt;{order("created_at DESC")}, dependent: :destroy validates_numericality_of :score, :only_integer =&gt; true, :greater_than_or_equal_to =&gt; 0 validates_numericality_of :maximum_score, :greater_than =&gt; 0, :only_integer =&gt; true default_value_for :maximum_score, 100 validates_presence_of :score, :maximum_</text>
	<text fill="#FFFFFFFF" x="0.0" y="38">score validate :score_less_than_max_score validates_presence_of :user_activity_attempt_id validates_presence_of :instructor_id, :if =&gt; :instructor_override, :message =&gt; "must be included if instructor_override is true" validates_presence_of :scored_at default_value_for :scored_at do Time.current end # Want this so we can create a score without triggering the callbacks attr_accessor :skip_score_per</text>
	<text fill="#FFFFFFFF" x="0.0" y="39">culating after_save :update_attempt_state_and_times, unless: :skip_score_perculating def student_score Rational(score, maximum_score) || Rational(0) end def student_score_i (self.student_score * 100).to_i end def score_f (self.student_score * 100).to_f.round(2) end def self.last_score_for_student_on_cohort(student_id, cohort_id) # Needed due performance issues and the lack of functionality of the </text>
	<text fill="#FFFFFFFF" x="0.0" y="40">unescoped method # that allow default scopes to be applied in joins joins = %{INNER JOIN user_activity_attempts ON user_activity_attempts.id = activity_scores.user_activity_attempt_id INNER JOIN user_activities ON user_activities.id = user_activity_attempts.user_activity_id INNER JOIN learning_activities ON learning_activities.id = user_activities.learning_activity_id INNER JOIN learning_activity_</text>
	<text fill="#FFFFFFFF" x="0.0" y="41">learning_objectives ON learning_activity_learning_objectives.learning_activity_id =learning_activities.id INNER JOIN learning_objectives ON learning_objectives.id = learning_activity_learning_objectives.learning_objective_id INNER JOIN user_objectives ON user_objectives.learning_objective_id = learning_objectives.id INNER JOIN learning_plan_contexts ON learning_plan_contexts.user_objective_id = us</text>
	<text fill="#FFFFFFFF" x="0.0" y="42">er_objectives .id } self.joins(joins) .where(learning_plan_contexts: {cohort_id: cohort_id}, user_activities: {student_id: student_id}) .order("activity_scores.created_at desc") .limit(1) .distinct end protected def update_attempt_state_and_times #DE2743. Need to reload user_activity_attempt. Strange behavior due to inverse_of ?? # self.user_activity_attempt.reload.update_state_and_time_from_score</text>
	<text fill="#FFFFFFFF" x="0.0" y="43">s self.user_activity_attempt.update_state_and_time_from_scores end def score_less_than_max_score errors.add(:score, 'score cannot be greater than maximum_score') if score &amp;&amp; maximum_score &amp;&amp; score &gt; maximum_score end end class DoNotRunInProduction def initialize if Rails.env.production? puts "************************************************************" puts "*                                     </text>
	<text fill="#FFFFFFFF" x="0.0" y="44">                     *" puts "* THIS FILE SHOULD NOT BE RUN IN A PRODUCTION ENVIRONMENT  *" puts "*                                                          *" puts "************************************************************" raise "DO NOT RUN IN #{Rails.env}" end end end# == Schema Information # # Table name: webex_credentials # #  id                                    :integer          not nul</text>
	<text fill="#FFFFFFFF" x="0.0" y="45">l, primary key #  username                              :string           not null #  encrypted_password                    :string           not null #  encrypted_password_iv                 :string           not null #  encrypted_default_meeting_password    :string           not null #  encrypted_default_meeting_password_iv :string           not null #  instructor_id                         :int</text>
	<text fill="#FFFFFFFF" x="0.0" y="46">eger          not null #  created_at                            :datetime         not null #  updated_at                            :datetime         not null # class WebexCredential &lt; ActiveRecord::Base belongs_to :instructor, class_name: User.name validates  :username, :password, :instructor, :default_meeting_password, presence: true attr_encrypted :password, key: "UjAxhGcmie7qtz2NYwpyEqu4A+1XTy</text>
	<text fill="#FFFFFFFF" x="0.0" y="47">iSlV8PAV1aqTc=", encode: true, encode_iv: true, encode_salt: true attr_encrypted :default_meeting_password, key: "UjAxhGcmie7qtz2NYwpyEqu4A+1XTyiSlV8PAV1aqTc=", encode: true, encode_iv: true, encode_salt: true end # Encoding: utf-8 # # == Schema Information # # Table name: curriculums_learning_objectives # #  id                    :integer          not null, primary key #  curriculum_id         :i</text>
	<text fill="#FFFFFFFF" x="0.0" y="48">nteger          not null #  learning_objective_id :integer          not null #  position              :integer #  updated_at            :datetime #  created_at            :datetime #  weight                :integer          default(1), not null # class CurriculumsLearningObjective &lt; ActiveRecord::Base belongs_to :curriculum, inverse_of: :curriculums_learning_objectives belongs_to :learning_objecti</text>
	<text fill="#FFFFFFFF" x="0.0" y="49">ve, inverse_of: :curriculums_learning_objectives acts_as_list :scope =&gt; :curriculum validates_presence_of :curriculum, :learning_objective validates :learning_objective_id, uniqueness: {scope: :curriculum_id} validates :curriculum_id, uniqueness: {scope: :learning_objective_id} validate :verify_learning_objective_active validates_numericality_of :weight, :only_integer =&gt; true, :allow_nil =&gt; false,</text>
	<text fill="#FFFFFFFF" x="0.0" y="50"> :greater_than_or_equal_to =&gt; 0, :message =&gt; "must be a non-negative integer" after_create :copy_acl protected # Ensure the LO has the same ACL as me def copy_acl self.curriculum.copy_acl(self.learning_objective) end def verify_learning_objective_active if weight_changed? &amp;&amp; !self.learning_objective.active? errors.add(:weight, "Can't be updated") end end end # == Schema Information # # Table name:</text>
	<text fill="#FFFFFFFF" x="0.0" y="51"> posts # #  id         :integer          not null, primary key #  user_id    :integer          not null #  topic_id   :integer          not null #  blocked    :boolean          default(FALSE) #  edited     :boolean          default(FALSE) #  body       :text             not null #  created_at :datetime #  updated_at :datetime #  ancestry   :string(255) # class Post &lt; ActiveRecord::Base has_ancestr</text>
	<text fill="#FFFFFFFF" x="0.0" y="52">y belongs_to :user belongs_to :topic validates :user, presence: true validates :topic, presence: true validates :body, presence: true validate :ability_to_post before_update :set_edited, :prevent_update scope :not_blocked, -&gt; { where(blocked: false) } scope :is_blocked,  -&gt; { where(blocked: true) } scope :by_user, lambda { |user| where(user_id: user.id) } default_scope { order('created_at ASC') } </text>
	<text fill="#FFFFFFFF" x="0.0" y="53"># TODO: Users will want an avatar. Perhaps we use Gravatar? # TODO: Add the ability to add attachments def permitted?(user, action) # TODO: Handle the moderator allowed = user.authorized!(Right::READ, self.topic) &amp;&amp; case action when Right::UPDATE false when Right::DELETE user.id.eql?(self.user_id) &amp;&amp; !self.blocked? when Right::CREATE user.authorized!(Right::READ, self.topic) else true end raise Pe</text>
	<text fill="#FFFFFFFF" x="0.0" y="54">rmittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") unless allowed allowed end def ability_to_post if self.topic errors.add(:base, "Topic is no longer valid to post") unless self.topic.able_to_post? end end private def set_edited self.edited = true if self.body_changed? end def prevent_update errors.add(:base, "Posts are not allowed to update") false end end</text>
	<text fill="#FFFFFFFF" x="0.0" y="55"> # == Schema Information # # Table name: cohort_users # #  id                     :integer          not null, primary key #  user_id                :integer          not null #  cohort_id              :integer          not null #  role                   :string(50)       not null #  active                 :boolean          not null #  started_on             :date             not null #  drc_accomm</text>
	<text fill="#FFFFFFFF" x="0.0" y="56">odation      :integer          default(100), not null #  hours_per_week         :integer #  updated_at             :datetime #  created_at             :datetime #  progress_num           :integer          default(0) #  progress_den           :integer          default(1) #  aggregate_score_num    :integer          default(0) #  aggregate_score_den    :integer          default(1) #  percentage_score</text>
	<text fill="#FFFFFFFF" x="0.0" y="57">_num   :integer          default(0) #  percentage_score_den   :integer          default(1) #  mastered_objective_num :integer          default(0) #  duration_seconds       :inte</text>
	<text fill="#F2D2D4FF" x="106.2" y="57">g</text>
	<text fill="#EEC3C5FF" x="106.8" y="57">e</text>
	<text fill="#E6A5A8FF" x="107.39999999999999" y="57">r</text>
	<text fill="#DD878CFF" x="108.0" y="57">  </text>
	<text fill="#D5696FFF" x="109.2" y="57"> </text>
	<text fill="#CD4B52FF" x="109.8" y="57">       default</text>
	<text fill="#DD878CFF" x="118.19999999999999" y="57">(0)</text>
	<text fill="#EEC3C5FF" x="120.0" y="57">, </text>
	<text fill="#F7E1E2FF" x="121.19999999999999" y="57">n</text>
	<text fill="#FFFFFFFF" x="121.8" y="57">ot null #  ends_on                :date #  mastered_activities    :integer          default(0), not null #  in_progress_activities :integer          default(0), not null #  available_activities   :</text>
	<text fill="#FFFFFFFF" x="0.0" y="58">integer          default(0), not null #  at_risk_activities     :integer          default(0), not null #  last_accessed_at       :datetime #  mastered_objectives    :inte</text>
	<text fill="#FBF0F1FF" x="102.0" y="58">g</text>
	<text fill="#EEC3C5FF" x="102.6" y="58">e</text>
	<text fill="#DD878CFF" x="103.2" y="58">r</text>
	<text fill="#D5696FFF" x="103.8" y="58"> </text>
	<text fill="#CD4B52FF" x="104.39999999999999" y="58"> </text>
	<text fill="#C01E27FF" x="105.0" y="58"> </text>
	<text fill="#BC1019FF" x="105.6" y="58">       default(0), not null </text>
	<text fill="#C83C43FF" x="122.39999999999999" y="58">#</text>
	<text fill="#CD4B52FF" x="123.0" y="58"> </text>
	<text fill="#DD878CFF" x="123.6" y="58"> </text>
	<text fill="#E2969AFF" x="124.19999999999999" y="58">i</text>
	<text fill="#EEC3C5FF" x="124.8" y="58">n</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="58">_progress_objectives :integer          default(0), not null #  available_objectives   :integer          default(0), not null #  at_risk_objectives     :integer          default(0), not null #</text>
	<text fill="#FFFFFFFF" x="0.0" y="59"> class CohortInstructor &lt; CohortUser skip_callback :validate, :before, :set_proper_starts_on_date skip_callback :validate, :before, :set_proper_ends_on_date include A</text>
	<text fill="#EEC3C5FF" x="99.6" y="59">s</text>
	<text fill="#DD878CFF" x="100.2" y="59">y</text>
	<text fill="#D15A60FF" x="100.8" y="59">n</text>
	<text fill="#C42D35FF" x="101.39999999999999" y="59">c</text>
	<text fill="#BC1019FF" x="102.0" y="59"> after_initialize :set_proper_role def m</text>
	<text fill="#C42D35FF" x="126.0" y="59">y</text>
	<text fill="#D5696FFF" x="126.6" y="59">_</text>
	<text fill="#E2969AFF" x="127.19999999999999" y="59">s</text>
	<text fill="#EEC3C5FF" x="127.8" y="59">t</text>
	<text fill="#FFFFFFFF" x="128.4" y="59">udents_without_activity_since(period = 7.days.ago) CohortUser.joins(:user, :cohort).students.active .where(:cohort_id =&gt; self.cohort_id) .where("users.current_sign_in_at &lt;= ?", period) .</text>
	<text fill="#FFFFFFFF" x="0.0" y="60">where("users.active = ?", true) .where("cohorts.ends_on &gt;= ?", Date.current) end def my_user_activities_to_grade_since(period = 5.days.ago) UserActivity.where(stu</text>
	<text fill="#F2D2D4FF" x="97.2" y="60">d</text>
	<text fill="#DD878CFF" x="97.8" y="60">e</text>
	<text fill="#CD4B52FF" x="98.39999999999999" y="60">n</text>
	<text fill="#BC1019FF" x="99.0" y="60">t_id: self.cohort.students.map { |s| s.id }) .wher</text>
	<text fill="#CD4B52FF" x="129.0" y="60">e</text>
	<text fill="#DD878CFF" x="129.6" y="60">(</text>
	<text fill="#F2D2D4FF" x="130.2" y="60">l</text>
	<text fill="#FFFFFFFF" x="130.79999999999998" y="60">earning_activity_id: self.cohort.curriculum_activities.map { |la| la.id }) .where(state: 'awaiting_instructor_grading') .where("completed_at &lt;= ?", period) end def notify_instructor_</text>
	<text fill="#FFFFFFFF" x="0.0" y="61">inactivity(period) self.my_user_activities_to_grade_since(period.days.ago).each do |ua| next if already_notified?("awaiting_grading", ua, 1.day.ago) notify( "</text>
	<text fill="#FBF0F1FF" x="94.8" y="61">a</text>
	<text fill="#E6A5A8FF" x="95.39999999999999" y="61">w</text>
	<text fill="#D5696FFF" x="96.0" y="61">a</text>
	<text fill="#C01E27FF" x="96.6" y="61">i</text>
	<text fill="#BC1019FF" x="97.2" y="61">ting_grading", { :student_name  =&gt; ua.student.full_name,</text>
	<text fill="#C01E27FF" x="130.79999999999998" y="61"> </text>
	<text fill="#D15A60FF" x="131.4" y="61">:</text>
	<text fill="#E6A5A8FF" x="132.0" y="61">a</text>
	<text fill="#FBF0F1FF" x="132.6" y="61">c</text>
	<text fill="#FFFFFFFF" x="133.2" y="61">tivity_name =&gt; ua.learning_activity.description, :completed_at =&gt; ua.completed_at.strftime("%Y-%m-%d") }, ua.class.name.underscore, ua.id ) end true end def notify_student_inacti</text>
	<text fill="#FFFFFFFF" x="0.0" y="62">vity(period) self.my_students_without_activity_since(period.days.ago).each do |student| next if already_notified?("inactive_students", student, period.days</text>
	<text fill="#FBF0F1FF" x="93.0" y="62">.</text>
	<text fill="#E6A5A8FF" x="93.6" y="62">a</text>
	<text fill="#D15A60FF" x="94.2" y="62">g</text>
	<text fill="#BC1019FF" x="94.8" y="62">o) notify( "inactive_students", { :student_name  =&gt; student.user</text>
	<text fill="#CD4B52FF" x="133.2" y="62">.</text>
	<text fill="#E2969AFF" x="133.79999999999998" y="62">f</text>
	<text fill="#FBF0F1FF" x="134.4" y="62">u</text>
	<text fill="#FFFFFFFF" x="135.0" y="62">ll_name, :days          =&gt; student.user.current_sign_in_at.strftime("%Y-%m-%d"), }, student.class.name.underscore, student.id ) end true end protected def set_proper_role self</text>
	<text fill="#FFFFFFFF" x="0.0" y="63">.role = CohortUser::COHORT_ROLES[:instructor] end def already_notified?(event, student, period) user.notifications.where({ :event          =&gt; event, :sub</text>
	<text fill="#EAB4B7FF" x="91.8" y="63">j</text>
	<text fill="#D5696FFF" x="92.39999999999999" y="63">e</text>
	<text fill="#BC1019FF" x="93.0" y="63">ct_class  =&gt; student</text>
	<text fill="#C42D35FF" x="105.0" y="63">.</text>
	<text fill="#CD4B52FF" x="105.6" y="63">c</text>
	<text fill="#D5696FFF" x="106.2" y="63">l</text>
	<text fill="#DD878CFF" x="106.8" y="63">a</text>
	<text fill="#E2969AFF" x="107.39999999999999" y="63">s</text>
	<text fill="#EEC3C5FF" x="108.0" y="63">s.name.</text>
	<text fill="#E6A5A8FF" x="112.2" y="63">u</text>
	<text fill="#DD878CFF" x="112.8" y="63">n</text>
	<text fill="#D9787DFF" x="113.39999999999999" y="63">d</text>
	<text fill="#CD4B52FF" x="114.0" y="63">e</text>
	<text fill="#C01E27FF" x="114.6" y="63">r</text>
	<text fill="#BC1019FF" x="115.19999999999999" y="63">score, :subject_id     =&gt; student</text>
	<text fill="#D15A60FF" x="135.0" y="63">.</text>
	<text fill="#E6A5A8FF" x="135.6" y="63">i</text>
	<text fill="#FBF0F1FF" x="136.2" y="63">d</text>
	<text fill="#FFFFFFFF" x="136.79999999999998" y="63"> }).where("created_at &gt; ?", period).any? end def notify(event, options, subject_class, subject_id) user.notifications.create!({ :event          =&gt; event, :template_name  =&gt;</text>
	<text fill="#FFFFFFFF" x="0.0" y="64"> "instructor", :options        =&gt; options, :read_at        =&gt; nil, :subject_class  =&gt; subject_class, :subject_id     =&gt; subject_id }) end end # == Sch</text>
	<text fill="#F7E1E2FF" x="90.0" y="64">e</text>
	<text fill="#D9787DFF" x="90.6" y="64">m</text>
	<text fill="#C42D35FF" x="91.2" y="64">a</text>
	<text fill="#BC1019FF" x="91.8" y="64"> Information # #</text>
	<text fill="#C42D35FF" x="101.39999999999999" y="64"> </text>
	<text fill="#D15A60FF" x="102.0" y="64">T</text>
	<text fill="#DD878CFF" x="102.6" y="64">a</text>
	<text fill="#EAB4B7FF" x="103.2" y="64">b</text>
	<text fill="#F2D2D4FF" x="103.8" y="64">l</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="64">e name: addresses </text>
	<text fill="#F7E1E2FF" x="115.19999999999999" y="64">#</text>
	<text fill="#E6A5A8FF" x="115.8" y="64"> </text>
	<text fill="#D5696FFF" x="116.39999999999999" y="64">#</text>
	<text fill="#C42D35FF" x="117.0" y="64"> </text>
	<text fill="#BC1019FF" x="117.6" y="64"> id              :integer      </text>
	<text fill="#C01E27FF" x="136.2" y="64"> </text>
	<text fill="#D5696FFF" x="136.79999999999998" y="64"> </text>
	<text fill="#F2D2D4FF" x="137.4" y="64"> </text>
	<text fill="#FFFFFFFF" x="138.0" y="64"> not null, primary key #  user_id         :integer #  city            :string(255) #  address1        :string(255) #  address2        :string(255) #  state_province  :str</text>
	<text fill="#FFFFFFFF" x="0.0" y="65">ing(255) #  zip_postal_code :string(255) #  created_at      :datetime #  updated_at      :datetime # class Address &lt; ActiveRecord::Base belongs_to :</text>
	<text fill="#EAB4B7FF" x="88.8" y="65">u</text>
	<text fill="#D15A60FF" x="89.39999999999999" y="65">s</text>
	<text fill="#BC1019FF" x="90.0" y="65">er validates :a</text>
	<text fill="#CD4B52FF" x="99.0" y="65">d</text>
	<text fill="#DD878CFF" x="99.6" y="65">d</text>
	<text fill="#EAB4B7FF" x="100.2" y="65">r</text>
	<text fill="#FBF0F1FF" x="100.8" y="65">e</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="65">ss1, length: { maximum: 100</text>
	<text fill="#F2D2D4FF" x="117.6" y="65"> </text>
	<text fill="#E2969AFF" x="118.19999999999999" y="65">}</text>
	<text fill="#C42D35FF" x="118.8" y="65">,</text>
	<text fill="#BC1019FF" x="119.39999999999999" y="65"> format: { with: /\A[a-zA-z0-9\</text>
	<text fill="#C83C43FF" x="138.0" y="65">s</text>
	<text fill="#E6A5A8FF" x="138.6" y="65">\</text>
	<text fill="#FFFFFFFF" x="139.2" y="65">-#&amp;'.]+\z/ }, allow_blank: true validates :address2, length: { maximum: 100 }, format: { with: /\A[a-zA-z0-9\s\-#&amp;'.]+\z/ }, allow_blank: true validates :city, length: </text>
	<text fill="#FFFFFFFF" x="0.0" y="66">{ maximum: 50 }, format: { with: /\A[a-zA-z0-9\s\-#&amp;'.]+\z/ }, allow_blank: true validates :zip_postal_code, format: {with: /\A\d{5}([\-]?\d{4})?\</text>
	<text fill="#E6A5A8FF" x="87.6" y="66">z</text>
	<text fill="#C42D35FF" x="88.2" y="66">/</text>
	<text fill="#BC1019FF" x="88.8" y="66"> }, allow_bla</text>
	<text fill="#C83C43FF" x="96.6" y="66">n</text>
	<text fill="#D9787DFF" x="97.2" y="66">k</text>
	<text fill="#EEC3C5FF" x="97.8" y="66">:</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="66"> true def self.nested_address_error</text>
	<text fill="#F2D2D4FF" x="119.39999999999999" y="66">_</text>
	<text fill="#D5696FFF" x="120.0" y="66">m</text>
	<text fill="#C01E27FF" x="120.6" y="66">a</text>
	<text fill="#BC1019FF" x="121.19999999999999" y="66">p { :"address.address1" =&gt; :ad</text>
	<text fill="#C42D35FF" x="139.2" y="66">d</text>
	<text fill="#DD878CFF" x="139.79999999999998" y="66">r</text>
	<text fill="#FBF0F1FF" x="140.4" y="66">e</text>
	<text fill="#FFFFFFFF" x="141.0" y="66">ss1, :"address.address2" =&gt; :address2, :"address.city" =&gt; :city, :"address.state_province" =&gt; :state_province, :"address.zip_postal_code" =&gt; :zip_postal_code } end e</text>
	<text fill="#FFFFFFFF" x="0.0" y="67">nd # == Schema Information # # Table name: topics # #  id                        :integer          not null, primary key #  user_id            </text>
	<text fill="#FBF0F1FF" x="85.8" y="67"> </text>
	<text fill="#DD878CFF" x="86.39999999999999" y="67"> </text>
	<text fill="#C01E27FF" x="87.0" y="67"> </text>
	<text fill="#BC1019FF" x="87.6" y="67">    :integer</text>
	<text fill="#D15A60FF" x="94.8" y="67"> </text>
	<text fill="#E6A5A8FF" x="95.39999999999999" y="67"> </text>
	<text fill="#F7E1E2FF" x="96.0" y="67"> </text>
	<text fill="#FFFFFFFF" x="96.6" y="67">       not null #  subject              </text>
	<text fill="#FBF0F1FF" x="120.6" y="67"> </text>
	<text fill="#DD878CFF" x="121.19999999999999" y="67"> </text>
	<text fill="#C01E27FF" x="121.8" y="67"> </text>
	<text fill="#BC1019FF" x="122.39999999999999" y="67">  :string(255)      not null #</text>
	<text fill="#C01E27FF" x="140.4" y="67"> </text>
	<text fill="#DD878CFF" x="141.0" y="67"> </text>
	<text fill="#FBF0F1FF" x="141.6" y="67">b</text>
	<text fill="#FFFFFFFF" x="142.2" y="67">ody                      :text             not null #  created_at                :datetime #  updated_at                :datetime #  learning_activity_id      :int</text>
	<text fill="#FFFFFFFF" x="0.0" y="68">eger          not null #  points                    :integer #  view_other_students_posts :boolean #  cohort_id                 :integer     </text>
	<text fill="#FBF0F1FF" x="84.6" y="68"> </text>
	<text fill="#DD878CFF" x="85.2" y="68"> </text>
	<text fill="#C01E27FF" x="85.8" y="68"> </text>
	<text fill="#BC1019FF" x="86.39999999999999" y="68">  not null </text>
	<text fill="#D15A60FF" x="93.0" y="68">#</text>
	<text fill="#E6A5A8FF" x="93.6" y="68"> </text>
	<text fill="#FBF0F1FF" x="94.2" y="68"> </text>
	<text fill="#FFFFFFFF" x="94.8" y="68">starts_on                 :date #  ends_on   </text>
	<text fill="#FBF0F1FF" x="121.8" y="68"> </text>
	<text fill="#DD878CFF" x="122.39999999999999" y="68"> </text>
	<text fill="#C01E27FF" x="123.0" y="68"> </text>
	<text fill="#BC1019FF" x="123.6" y="68">             :date # class Top</text>
	<text fill="#C01E27FF" x="141.6" y="68">i</text>
	<text fill="#DD878CFF" x="142.2" y="68">c</text>
	<text fill="#FBF0F1FF" x="142.79999999999998" y="68"> </text>
	<text fill="#FFFFFFFF" x="143.4" y="68">&lt; ActiveRecord::Base belongs_to :user belongs_to :learning_activity belongs_to :cohort has_many :posts, dependent: :destroy validates :user, presence: true valid</text>
	<text fill="#FFFFFFFF" x="0.0" y="69">ates :learning_activity, presence: true validate :type_of_learning_activity validate :cohort_includes_la validates :cohort, presence: true v</text>
	<text fill="#DD878CFF" x="84.0" y="69">a</text>
	<text fill="#C01E27FF" x="84.6" y="69">l</text>
	<text fill="#BC1019FF" x="85.2" y="69">idates :su</text>
	<text fill="#C83C43FF" x="91.2" y="69">b</text>
	<text fill="#E2969AFF" x="91.8" y="69">j</text>
	<text fill="#FBF0F1FF" x="92.39999999999999" y="69">e</text>
	<text fill="#FFFFFFFF" x="93.0" y="69">ct, presence: true, allow_nil: false validates :bo</text>
	<text fill="#FBF0F1FF" x="123.0" y="69">d</text>
	<text fill="#D9787DFF" x="123.6" y="69">y</text>
	<text fill="#BC1019FF" x="124.19999999999999" y="69">, presence: true, allow_nil: fa</text>
	<text fill="#C01E27FF" x="142.79999999999998" y="69">l</text>
	<text fill="#DD878CFF" x="143.4" y="69">s</text>
	<text fill="#FFFFFFFF" x="144.0" y="69">e validates_uniqueness_of :subject, scope: :learning_activity before_save :set_dates scope :current, -&gt; { where("? &gt;= starts_on AND ? &lt;= ends_on", Date.current,</text>
	<text fill="#FFFFFFFF" x="0.0" y="70"> Date.current) } def starts_on=(value) super(value.nil? ? self.cohort.starts_on : value) end def ends_on=(value) super(value.nil? ? self.c</text>
	<text fill="#E6A5A8FF" x="82.8" y="70">o</text>
	<text fill="#C42D35FF" x="83.39999999999999" y="70">h</text>
	<text fill="#BC1019FF" x="84.0" y="70">ort.ends_</text>
	<text fill="#C01E27FF" x="89.39999999999999" y="70">o</text>
	<text fill="#D5696FFF" x="90.0" y="70">n</text>
	<text fill="#F2D2D4FF" x="90.6" y="70"> </text>
	<text fill="#FFFFFFFF" x="91.2" y="70">: value) end # TODO: Users will want an avatar. Perhaps</text>
	<text fill="#F7E1E2FF" x="124.19999999999999" y="70"> </text>
	<text fill="#CD4B52FF" x="124.8" y="70">w</text>
	<text fill="#BC1019FF" x="125.39999999999999" y="70">e use Gravatar? # TODO: Add the</text>
	<text fill="#C42D35FF" x="144.0" y="70"> </text>
	<text fill="#EAB4B7FF" x="144.6" y="70">a</text>
	<text fill="#FFFFFFFF" x="145.2" y="70">bility to add attachments def permitted?(user, action) # TODO: Handle the moderator activity = LearningActivity.where(id: self.learning_activity_id).first all</text>
	<text fill="#FFFFFFFF" x="0.0" y="71">owed = case action when Right::CREATE, Right::SCORE self.act_as_instructor?(user) || user.admin? when Right::UPDATE, Right::DELETE # Can</text>
	<text fill="#F2D2D4FF" x="81.6" y="71"> </text>
	<text fill="#CD4B52FF" x="82.2" y="71">u</text>
	<text fill="#BC1019FF" x="82.8" y="71">pdate if </text>
	<text fill="#C42D35FF" x="88.2" y="71">y</text>
	<text fill="#DD878CFF" x="88.8" y="71">o</text>
	<text fill="#FBF0F1FF" x="89.39999999999999" y="71">u</text>
	<text fill="#FFFFFFFF" x="90.0" y="71"> are the author user.id.eql?(self.user_id) when Right::READ</text>
	<text fill="#E2969AFF" x="125.39999999999999" y="71"> </text>
	<text fill="#C01E27FF" x="126.0" y="71">a</text>
	<text fill="#BC1019FF" x="126.6" y="71">ctivity.nil? ? false : user.aut</text>
	<text fill="#CD4B52FF" x="145.2" y="71">h</text>
	<text fill="#F7E1E2FF" x="145.79999999999998" y="71">o</text>
	<text fill="#FFFFFFFF" x="146.4" y="71">rized!(Right::READ, self.cohort) else true end raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") unless al</text>
	<text fill="#FFFFFFFF" x="0.0" y="72">lowed allowed end def set_dates self.starts_on = self.cohort.starts_on unless self.starts_on self.ends_on = self.cohort.ends_on unless</text>
	<text fill="#FBF0F1FF" x="80.39999999999999" y="72"> </text>
	<text fill="#D9787DFF" x="81.0" y="72">s</text>
	<text fill="#BC1019FF" x="81.6" y="72">elf.ends_</text>
	<text fill="#C42D35FF" x="87.0" y="72">o</text>
	<text fill="#E6A5A8FF" x="87.6" y="72">n</text>
	<text fill="#FFFFFFFF" x="88.2" y="72"> end def type_of_learning_activity if self.learning_activity.co</text>
	<text fill="#F7E1E2FF" x="126.0" y="72">n</text>
	<text fill="#C83C43FF" x="126.6" y="72">t</text>
	<text fill="#BC1019FF" x="127.19999999999999" y="72">ent_type != "DiscussionActivity"</text>
	<text fill="#DD878CFF" x="146.4" y="72"> </text>
	<text fill="#FFFFFFFF" x="147.0" y="72">errors.add(:learning_activity_id, "Invalid type of Learning Activity") end end def cohort_includes_la unless self.cohort.curriculum_activities.include? sel</text>
	<text fill="#FFFFFFFF" x="0.0" y="73">f.learning_activity errors.add(:learning_activity_id, "LA does not belong to cohort") end end def able_to_post? Date.current &gt;= self.</text>
	<text fill="#EAB4B7FF" x="79.8" y="73">s</text>
	<text fill="#C01E27FF" x="80.39999999999999" y="73">t</text>
	<text fill="#BC1019FF" x="81.0" y="73">arts_on </text>
	<text fill="#CD4B52FF" x="85.8" y="73">&amp;</text>
	<text fill="#EEC3C5FF" x="86.39999999999999" y="73">&amp;</text>
	<text fill="#FFFFFFFF" x="87.0" y="73"> Date.current &lt;= self.ends_on end def act_as_instructor?(user) self</text>
	<text fill="#D9787DFF" x="127.19999999999999" y="73">.</text>
	<text fill="#BC1019FF" x="127.8" y="73">cohort.enrolled_as_instructor?(u</text>
	<text fill="#C83C43FF" x="147.0" y="73">s</text>
	<text fill="#F2D2D4FF" x="147.6" y="73">e</text>
	<text fill="#FFFFFFFF" x="148.2" y="73">r) end def act_as_student?(user) self.cohort.enrolled_as_student?(user) end def score!(student, instructor, options) ua = student.user_activities.find_by</text>
	<text fill="#FFFFFFFF" x="0.0" y="74">!(learning_activity_id: self.learning_activity) attempt = UserActivityAttempt.find_or_create_by_with_retry!(attempt_number: options</text>
	<text fill="#FBF0F1FF" x="78.6" y="74">[</text>
	<text fill="#D15A60FF" x="79.2" y="74">:</text>
	<text fill="#BC1019FF" x="79.8" y="74">attempt_</text>
	<text fill="#C42D35FF" x="84.6" y="74">n</text>
	<text fill="#EEC3C5FF" x="85.2" y="74">u</text>
	<text fill="#FFFFFFFF" x="85.8" y="74">mber], user_activity_id: ua.id) score = ActivityScore.new( user_activi</text>
	<text fill="#E6A5A8FF" x="127.8" y="74">t</text>
	<text fill="#C01E27FF" x="128.4" y="74">y</text>
	<text fill="#BC1019FF" x="129.0" y="74">_attempt_id: attempt.id, user_ac</text>
	<text fill="#DD878CFF" x="148.2" y="74">t</text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="74">ivity_id: ua, score: options[:points], maximum_score: self.points, cohort: self.cohort, instructor_id: instructor.id ) score.save score end def have_pos</text>
	<text fill="#FFFFFFFF" x="0.0" y="75">ted?(user) posts.by_user(user).count &gt; 0 end def get_students_posts(user) return [] unless self.have_posted?(user) posts = self.po</text>
	<text fill="#EAB4B7FF" x="78.0" y="75">s</text>
	<text fill="#C01E27FF" x="78.6" y="75">t</text>
	<text fill="#BC1019FF" x="79.2" y="75">s.roots</text>
	<text fill="#C42D35FF" x="83.39999999999999" y="75"> </text>
	<text fill="#E6A5A8FF" x="84.0" y="75">s</text>
	<text fill="#FFFFFFFF" x="84.6" y="75">elf.view_other_students_posts ? posts.by_user(user) : posts end end # == </text>
	<text fill="#F2D2D4FF" x="128.4" y="75">S</text>
	<text fill="#C01E27FF" x="129.0" y="75">c</text>
	<text fill="#BC1019FF" x="129.6" y="75">hema Information # # Table name:</text>
	<text fill="#C83C43FF" x="148.79999999999998" y="75"> </text>
	<text fill="#F7E1E2FF" x="149.4" y="75">i</text>
	<text fill="#FFFFFFFF" x="150.0" y="75">nstitution_acls # #  id             :integer          not null, primary key #  institution_id :integer          not null #  subject_type   :string(255</text>
	<text fill="#FFFFFFFF" x="0.0" y="76">)      not null #  subject_id     :integer          not null #  created_at     :datetime #  updated_at     :datetime # class Ins</text>
	<text fill="#FBF0F1FF" x="76.8" y="76">t</text>
	<text fill="#D15A60FF" x="77.39999999999999" y="76">i</text>
	<text fill="#BC1019FF" x="78.0" y="76">tutionA</text>
	<text fill="#C01E27FF" x="82.2" y="76">c</text>
	<text fill="#DD878CFF" x="82.8" y="76">l</text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="76"> &lt; ActiveRecord::Base belongs_to :institution, :inverse_of =&gt; :institution_a</text>
	<text fill="#F2D2D4FF" x="129.0" y="76">c</text>
	<text fill="#C83C43FF" x="129.6" y="76">l</text>
	<text fill="#BC1019FF" x="130.2" y="76">s belongs_to :subject, polymorph</text>
	<text fill="#C01E27FF" x="149.4" y="76">i</text>
	<text fill="#EAB4B7FF" x="150.0" y="76">c</text>
	<text fill="#FFFFFFFF" x="150.6" y="76">: true def self.subjects_granted?(subject_type, subject_ids, institution_id) where(subject_type: subject_type, subject_id: subject_ids, institution_i</text>
	<text fill="#FFFFFFFF" x="0.0" y="77">d: institution_id).exists? end end # == Schema Information # # Table name: data_student_program_competency_donuts_vw # #  stude</text>
	<text fill="#F2D2D4FF" x="76.2" y="77">n</text>
	<text fill="#C42D35FF" x="76.8" y="77">t</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="77">_id    </text>
	<text fill="#D5696FFF" x="81.6" y="77">:</text>
	<text fill="#FBF0F1FF" x="82.2" y="77">i</text>
	<text fill="#FFFFFFFF" x="82.8" y="77">nteger #  program_id    :integer #  total         :integer #  available     :i</text>
	<text fill="#FBF0F1FF" x="129.6" y="77">n</text>
	<text fill="#C83C43FF" x="130.2" y="77">t</text>
	<text fill="#BC1019FF" x="130.79999999999998" y="77">eger #  in_process    :integer # </text>
	<text fill="#D9787DFF" x="150.6" y="77"> </text>
	<text fill="#FFFFFFFF" x="151.2" y="77">mastered      :integer #  not_available :integer # class ViewCompetencyDonut &lt; ActiveRecord::Base self.table_name = 'data_student_program_competency</text>
	<text fill="#FFFFFFFF" x="0.0" y="78">_donuts_vw' # Be sure that no one tries to write to this def readonly? true end def self.get_donut_hash(program, student) d = </text>
	<text fill="#E2969AFF" x="75.6" y="78">s</text>
	<text fill="#BC1019FF" x="76.2" y="78">elf.whe</text>
	<text fill="#C42D35FF" x="80.39999999999999" y="78">r</text>
	<text fill="#EEC3C5FF" x="81.0" y="78">e</text>
	<text fill="#FFFFFFFF" x="81.6" y="78">(student_id: student.id, program_id: program.id).first if (d.nil?) return [] else</text>
	<text fill="#FBF0F1FF" x="130.2" y="78"> </text>
	<text fill="#C83C43FF" x="130.79999999999998" y="78">r</text>
	<text fill="#BC1019FF" x="131.4" y="78">eturn [ { :name =&gt; 'mastered', :y</text>
	<text fill="#CD4B52FF" x="151.2" y="78"> </text>
	<text fill="#FBF0F1FF" x="151.79999999999998" y="78">=</text>
	<text fill="#FFFFFFFF" x="152.4" y="78">&gt; d.mastered }, { :name =&gt; 'in_process', :y =&gt; d.in_process }, { :name =&gt; 'queued', :y =&gt; d.available }, { :name =&gt; 'not_available', :y =&gt; d.not_a</text>
	<text fill="#FFFFFFFF" x="0.0" y="79">vailable } ] end end end # == Schema Information # # Table name: user_stats # #  id           :integer          not null, pr</text>
	<text fill="#FBF0F1FF" x="74.39999999999999" y="79">i</text>
	<text fill="#D15A60FF" x="75.0" y="79">m</text>
	<text fill="#BC1019FF" x="75.6" y="79">ary key</text>
	<text fill="#DD878CFF" x="79.8" y="79"> </text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="79">#  user_id      :integer          not null #  name         :string(255)      not nul</text>
	<text fill="#FBF0F1FF" x="130.79999999999998" y="79">l</text>
	<text fill="#C83C43FF" x="131.4" y="79"> </text>
	<text fill="#BC1019FF" x="132.0" y="79">#  value        :string(255)     </text>
	<text fill="#C83C43FF" x="151.79999999999998" y="79"> </text>
	<text fill="#F2D2D4FF" x="152.4" y="79">n</text>
	<text fill="#FFFFFFFF" x="153.0" y="79">ot null #  related_id   :integer #  related_type :string(255) #  created_at   :datetime #  updated_at   :datetime # class UserStat &lt; ActiveRecord</text>
	<text fill="#FFFFFFFF" x="0.0" y="80">::Base include Async belongs_to :user belongs_to :related, polymorphic: true # Update all the state counts for all students</text>
	<text fill="#F7E1E2FF" x="73.8" y="80"> </text>
	<text fill="#C83C43FF" x="74.39999999999999" y="80">d</text>
	<text fill="#BC1019FF" x="75.0" y="80">ef sel</text>
	<text fill="#C83C43FF" x="78.6" y="80">f</text>
	<text fill="#F2D2D4FF" x="79.2" y="80">.</text>
	<text fill="#FFFFFFFF" x="79.8" y="80">update_all_user_stats(do_async = false) User.find_each do |user| yield(user) if block_</text>
	<text fill="#FBF0F1FF" x="131.4" y="80">g</text>
	<text fill="#C42D35FF" x="132.0" y="80">i</text>
	<text fill="#BC1019FF" x="132.6" y="80">ven? method = do_async ? :update_</text>
	<text fill="#C01E27FF" x="152.4" y="80">s</text>
	<text fill="#F2D2D4FF" x="153.0" y="80">t</text>
	<text fill="#FFFFFFFF" x="153.6" y="80">ats_async : :update_stats self.send(method, user) end end # TODO: Update this such that we only look at data that has changed since the last exe</text>
	<text fill="#FFFFFFFF" x="0.0" y="81">cution. def self.update_stats(user) self.update_system_time(user) end def self.get_value(user, name, related = nil) r = wh</text>
	<text fill="#F2D2D4FF" x="73.2" y="81">e</text>
	<text fill="#C01E27FF" x="73.8" y="81">r</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="81">e(user</text>
	<text fill="#DD878CFF" x="78.0" y="81">:</text>
	<text fill="#FFFFFFFF" x="78.6" y="81"> user, name: name) r = r.where(related: related) unless related.nil? r.first.try(:value) </text>
	<text fill="#F2D2D4FF" x="132.0" y="81">e</text>
	<text fill="#C01E27FF" x="132.6" y="81">n</text>
	<text fill="#BC1019FF" x="133.2" y="81">d def self.update_system_time(use</text>
	<text fill="#C01E27FF" x="153.0" y="81">r</text>
	<text fill="#EAB4B7FF" x="153.6" y="81">,</text>
	<text fill="#FFFFFFFF" x="154.2" y="81"> total_seconds=nil) name = "SYSTEM_TIME_SECONDS" total_seconds ||= PageView.where(user_id: user.id).sum(:duration_seconds) self.create_or_updat</text>
	<text fill="#FFFFFFFF" x="0.0" y="82">e_stat!(user, name, total_seconds) end def self.increment_system_time(user, duration_seconds) increment_duration(user, "S</text>
	<text fill="#E6A5A8FF" x="72.6" y="82">Y</text>
	<text fill="#BC1019FF" x="73.2" y="82">STEM_T</text>
	<text fill="#C42D35FF" x="76.8" y="82">I</text>
	<text fill="#EEC3C5FF" x="77.39999999999999" y="82">M</text>
	<text fill="#FFFFFFFF" x="78.0" y="82">E_SECONDS", duration_seconds) end def self.increment_duration(user, name, duration_seconds)</text>
	<text fill="#F2D2D4FF" x="132.6" y="82"> </text>
	<text fill="#BC1019FF" x="133.2" y="82">if duration_seconds &gt; 0 UserStat.tr</text>
	<text fill="#E6A5A8FF" x="154.2" y="82">a</text>
	<text fill="#FFFFFFFF" x="154.79999999999998" y="82">nsaction do stat = where(user: user, name: name).lock(true).first || new(user: user, name: name, value: 0.to_s) stat.value = (stat.value.to_i </text>
	<text fill="#FFFFFFFF" x="0.0" y="83">+ duration_seconds.to_i).to_s stat.save! end end end def self.create_or_update_stat!(user, name, value, related = nil) U</text>
	<text fill="#E2969AFF" x="72.0" y="83">s</text>
	<text fill="#BC1019FF" x="72.6" y="83">erStat</text>
	<text fill="#D15A60FF" x="76.2" y="83">.</text>
	<text fill="#FBF0F1FF" x="76.8" y="83">t</text>
	<text fill="#FFFFFFFF" x="77.39999999999999" y="83">ransaction do r = user.user_stats.where(name: name) unless related.nil? name = "#{related.cla</text>
	<text fill="#E6A5A8FF" x="133.2" y="83">s</text>
	<text fill="#BC1019FF" x="133.79999999999998" y="83">s.name.upcase}_#{name}" r = r.where</text>
	<text fill="#E6A5A8FF" x="154.79999999999998" y="83">(</text>
	<text fill="#FFFFFFFF" x="155.4" y="83">related: related) end r = r.lock(true) stat = r.first || UserStat.new(user_id: user.id, name: name) stat.value = value.to_s stat.related = re</text>
	<text fill="#FFFFFFFF" x="0.0" y="84">lated stat.save! end end end class TimeRanges include ActiveModel::Conversion extend ActiveModel::Naming def initialize</text>
	<text fill="#D5696FFF" x="71.39999999999999" y="84">(</text>
	<text fill="#BC1019FF" x="72.0" y="84">) @tim</text>
	<text fill="#E2969AFF" x="75.6" y="84">e</text>
	<text fill="#FFFFFFFF" x="76.2" y="84">_ranges = [] end def add_time_range(starts_at, ends_at) @time_ranges &lt;&lt; (starts_at.to_i..ends_at</text>
	<text fill="#D5696FFF" x="133.79999999999998" y="84">.</text>
	<text fill="#BC1019FF" x="134.4" y="84">to_i) end def contains_time_range?(</text>
	<text fill="#E6A5A8FF" x="155.4" y="84">s</text>
	<text fill="#FFFFFFFF" x="156.0" y="84">tarts_at, ends_at) starts_at_i = starts_at.to_i ends_at_i = ends_at.to_i @time_ranges.each do |time_range| return true if (starts_at_i &gt;= ti</text>
	<text fill="#FFFFFFFF" x="0.0" y="85">me_range.begin &amp;&amp; starts_at_i &lt; time_range.end) || (ends_at_i &gt; time_range.begin &amp;&amp; ends_at_i &lt;= time_range.end)     |</text>
	<text fill="#D5696FFF" x="70.8" y="85">|</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="85"> (sta</text>
	<text fill="#C01E27FF" x="74.39999999999999" y="85">r</text>
	<text fill="#EEC3C5FF" x="75.0" y="85">t</text>
	<text fill="#FFFFFFFF" x="75.6" y="85">s_at_i &lt; time_range.begin &amp;&amp; ends_at_i &gt; time_range.end) end false end def merge_overlapping_rang</text>
	<text fill="#FBF0F1FF" x="133.79999999999998" y="85">e</text>
	<text fill="#C83C43FF" x="134.4" y="85">s</text>
	<text fill="#BC1019FF" x="135.0" y="85"> @time_ranges = @time_ranges.sort_b</text>
	<text fill="#EEC3C5FF" x="156.0" y="85">y</text>
	<text fill="#FFFFFFFF" x="156.6" y="85">!(&amp;:begin).inject([]) do |merged_time_ranges, time_range| if !merged_time_ranges.empty? &amp;&amp; merged_time_ranges.last.include?(time_range.begi</text>
	<text fill="#FFFFFFFF" x="0.0" y="86">n) time_range = (merged_time_ranges.last.begin..time_range.end) merged_time_ranges.pop end merged_time_ranges &lt;&lt; time</text>
	<text fill="#D5696FFF" x="70.2" y="86">_</text>
	<text fill="#BC1019FF" x="70.8" y="86">range</text>
	<text fill="#C83C43FF" x="73.8" y="86"> </text>
	<text fill="#F7E1E2FF" x="74.39999999999999" y="86">e</text>
	<text fill="#FFFFFFFF" x="75.0" y="86">nd end def count @time_ranges.count end def time_</text>
	<text fill="#F7E1E2FF" x="104.39999999999999" y="86">r</text>
	<text fill="#EAB4B7FF" x="105.0" y="86">a</text>
	<text fill="#DD878CFF" x="105.6" y="86">n</text>
	<text fill="#D15A60FF" x="106.2" y="86">ge</text>
	<text fill="#CD4B52FF" x="107.39999999999999" y="86">_</text>
	<text fill="#F7E1E2FF" x="108.0" y="86">c</text>
	<text fill="#FFFFFFFF" x="108.6" y="86">ontaining(starts_at, ends_at) starts_at_i =</text>
	<text fill="#F2D2D4FF" x="134.4" y="86"> </text>
	<text fill="#BC1019FF" x="135.0" y="86">starts_at.to_i ends_at_i = ends_at.</text>
	<text fill="#C01E27FF" x="156.0" y="86">t</text>
	<text fill="#F2D2D4FF" x="156.6" y="86">o</text>
	<text fill="#FFFFFFFF" x="157.2" y="86">_i @time_ranges.each do |time_range| return time_range if starts_at_i &gt;= time_range.begin &amp;&amp; ends_at_i &lt; time_range.end end nil end # Neve</text>
	<text fill="#FFFFFFFF" x="0.0" y="87">r persisted in the DB. def persisted? false end end # == Schema Information # # Table name: programs # #  id        </text>
	<text fill="#D5696FFF" x="69.6" y="87"> </text>
	<text fill="#BC1019FF" x="70.2" y="87">     </text>
	<text fill="#D15A60FF" x="73.2" y="87"> </text>
	<text fill="#FBF0F1FF" x="73.8" y="87"> </text>
	<text fill="#FFFFFFFF" x="74.39999999999999" y="87">   :integer          not null, primary key #  </text>
	<text fill="#F2D2D4FF" x="102.0" y="87">a</text>
	<text fill="#E2969AFF" x="102.6" y="87">n</text>
	<text fill="#D15A60FF" x="103.2" y="87">c</text>
	<text fill="#C01E27FF" x="103.8" y="87">e</text>
	<text fill="#BC1019FF" x="104.39999999999999" y="87">s</text>
	<text fill="#C83C43FF" x="105.0" y="87">t</text>
	<text fill="#DD878CFF" x="105.6" y="87">o</text>
	<text fill="#F2D2D4FF" x="106.2" y="87">r</text>
	<text fill="#FFFFFFFF" x="106.8" y="87">_id          :integer #  published            :</text>
	<text fill="#E2969AFF" x="135.0" y="87">b</text>
	<text fill="#BC1019FF" x="135.6" y="87">oolean          default(FALSE), not</text>
	<text fill="#C01E27FF" x="156.6" y="87"> </text>
	<text fill="#F7E1E2FF" x="157.2" y="87">n</text>
	<text fill="#FFFFFFFF" x="157.79999999999998" y="87">ull #  created_at           :datetime         not null #  updated_at           :datetime         not null #  identifier           :string</text>
	<text fill="#FFFFFFFF" x="0.0" y="88">(255) #  version_number       :integer          default(1) #  name                 :string(100) #  owner_institutio</text>
	<text fill="#D5696FFF" x="69.0" y="88">n</text>
	<text fill="#BC1019FF" x="69.6" y="88">_id :</text>
	<text fill="#D5696FFF" x="72.6" y="88">i</text>
	<text fill="#FFFFFFFF" x="73.2" y="88">nteger          not null #  description     </text>
	<text fill="#FBF0F1FF" x="99.6" y="88"> </text>
	<text fill="#E6A5A8FF" x="100.2" y="88"> </text>
	<text fill="#D15A60FF" x="100.8" y="88"> </text>
	<text fill="#C01E27FF" x="101.39999999999999" y="88"> </text>
	<text fill="#BC1019FF" x="102.0" y="88"> :</text>
	<text fill="#C42D35FF" x="103.2" y="88">t</text>
	<text fill="#DD878CFF" x="103.8" y="88">e</text>
	<text fill="#F7E1E2FF" x="104.39999999999999" y="88">x</text>
	<text fill="#FFFFFFFF" x="105.0" y="88">t #  visibility           :boolean          default</text>
	<text fill="#CD4B52FF" x="135.6" y="88">(</text>
	<text fill="#BC1019FF" x="136.2" y="88">TRUE) # require 'csv' class Program</text>
	<text fill="#C83C43FF" x="157.2" y="88"> </text>
	<text fill="#FBF0F1FF" x="157.79999999999998" y="88">&lt;</text>
	<text fill="#FFFFFFFF" x="158.4" y="88"> ActiveRecord::Base include Versioned include InstitutionSecured has_many :user_programs, :dependent =&gt; :destroy, :inverse_of =&gt; :progra</text>
	<text fill="#FFFFFFFF" x="0.0" y="89">m has_many :users, :through =&gt; :user_programs has_many :competency_programs, :dependent =&gt; :destroy, :inverse_of =</text>
	<text fill="#D5696FFF" x="68.39999999999999" y="89">&gt;</text>
	<text fill="#BC1019FF" x="69.0" y="89"> :pro</text>
	<text fill="#E6A5A8FF" x="72.0" y="89">g</text>
	<text fill="#FFFFFFFF" x="72.6" y="89">ram has_many :competencies, :through =&gt; :c</text>
	<text fill="#FBF0F1FF" x="97.8" y="89">o</text>
	<text fill="#E6A5A8FF" x="98.39999999999999" y="89">m</text>
	<text fill="#D15A60FF" x="99.0" y="89">p</text>
	<text fill="#BC1019FF" x="99.6" y="89">eten</text>
	<text fill="#CD4B52FF" x="102.0" y="89">c</text>
	<text fill="#EEC3C5FF" x="102.6" y="89">y</text>
	<text fill="#FFFFFFFF" x="103.2" y="89">_programs # TODO Group credentials, certifications, an</text>
	<text fill="#F2D2D4FF" x="135.6" y="89">d</text>
	<text fill="#BC1019FF" x="136.2" y="89"> languages together as qualification</text>
	<text fill="#D15A60FF" x="157.79999999999998" y="89">s</text>
	<text fill="#FFFFFFFF" x="158.4" y="89"> validates :name, presence: true, length: { maximum: 100 } validates :identifier, length: { maximum: 255 } before_save :reassign_owner s</text>
	<text fill="#FFFFFFFF" x="0.0" y="90">cope :visible, -&gt; { where(visibility: true) } scope :active_user_programs, -&gt; { references(:user_programs).merge(</text>
	<text fill="#D9787DFF" x="67.8" y="90">U</text>
	<text fill="#BC1019FF" x="68.39999999999999" y="90">serPr</text>
	<text fill="#E6A5A8FF" x="71.39999999999999" y="90">o</text>
	<text fill="#FFFFFFFF" x="72.0" y="90">gram.active) } scope :latests_enrollments</text>
	<text fill="#EAB4B7FF" x="96.6" y="90">,</text>
	<text fill="#D15A60FF" x="97.2" y="90"> </text>
	<text fill="#BC1019FF" x="97.8" y="90">-&gt; { </text>
	<text fill="#D5696FFF" x="100.8" y="90">a</text>
	<text fill="#F7E1E2FF" x="101.39999999999999" y="90">c</text>
	<text fill="#FFFFFFFF" x="102.0" y="90">tive_user_programs.merge(UserProgram.latest_enrollment_da</text>
	<text fill="#DD878CFF" x="136.2" y="90">t</text>
	<text fill="#BC1019FF" x="136.79999999999998" y="90">es) } # Have to do destroy this way </text>
	<text fill="#E2969AFF" x="158.4" y="90">b</text>
	<text fill="#FFFFFFFF" x="159.0" y="90">ecause Rails does the dependents before a before_destroy. # Since we want to check for associations, we have to do it first. def destro</text>
	<text fill="#FFFFFFFF" x="0.0" y="91">y if user_programs.count &gt; 0 errors.add(:base, :user_program_count) false else super end end def ransackable_att</text>
	<text fill="#E6A5A8FF" x="67.2" y="91">r</text>
	<text fill="#BC1019FF" x="67.8" y="91">ibute</text>
	<text fill="#E6A5A8FF" x="70.8" y="91">s</text>
	<text fill="#FFFFFFFF" x="71.39999999999999" y="91">(auth_object = nil) [:name] end def ran</text>
	<text fill="#FBF0F1FF" x="94.8" y="91">s</text>
	<text fill="#DD878CFF" x="95.39999999999999" y="91">a</text>
	<text fill="#C42D35FF" x="96.0" y="91">c</text>
	<text fill="#BC1019FF" x="96.6" y="91">kable</text>
	<text fill="#CD4B52FF" x="99.6" y="91">_</text>
	<text fill="#F7E1E2FF" x="100.2" y="91">a</text>
	<text fill="#FFFFFFFF" x="100.8" y="91">ssociations(auth_object = nil) [:owner] end def competency_</text>
	<text fill="#FBF0F1FF" x="136.2" y="91">i</text>
	<text fill="#C42D35FF" x="136.79999999999998" y="91">d</text>
	<text fill="#BC1019FF" x="137.4" y="91">s self.competencies.pluck(:id) end d</text>
	<text fill="#F2D2D4FF" x="159.0" y="91">e</text>
	<text fill="#FFFFFFFF" x="159.6" y="91">f competency_ids=(ids) transaction do ids.each do |i| self.competency_programs.create!(competency_id: i) unless self.competency_ids.in</text>
	<text fill="#FFFFFFFF" x="0.0" y="92">clude?(i) end end end def display_name if draft? if latest_version "#{name} v#{version_number} (Draft)" else "#</text>
	<text fill="#EAB4B7FF" x="66.6" y="92">{</text>
	<text fill="#BC1019FF" x="67.2" y="92">name}</text>
	<text fill="#E6A5A8FF" x="70.2" y="92"> </text>
	<text fill="#FFFFFFFF" x="70.8" y="92">Draft" end else "#{name} v#{version_nu</text>
	<text fill="#F7E1E2FF" x="93.6" y="92">m</text>
	<text fill="#D5696FFF" x="94.2" y="92">b</text>
	<text fill="#C01E27FF" x="94.8" y="92">e</text>
	<text fill="#BC1019FF" x="95.39999999999999" y="92">r}" e</text>
	<text fill="#C42D35FF" x="98.39999999999999" y="92">n</text>
	<text fill="#EEC3C5FF" x="99.0" y="92">d</text>
	<text fill="#FFFFFFFF" x="99.6" y="92"> end def add_competency(competency) added = [] transaction do </text>
	<text fill="#E6A5A8FF" x="136.79999999999998" y="92">c</text>
	<text fill="#BC1019FF" x="137.4" y="92">ompetency.leaf_competencies.each do </text>
	<text fill="#C42D35FF" x="159.0" y="92">|</text>
	<text fill="#FBF0F1FF" x="159.6" y="92">n</text>
	<text fill="#FFFFFFFF" x="160.2" y="92">ext_leaf_competency| if self.competencies.where(:id =&gt; next_leaf_competency.id).empty? competencies &lt;&lt; next_leaf_competency added &lt;&lt; </text>
	<text fill="#FFFFFFFF" x="0.0" y="93">next_leaf_competency end end end added end def remove_competency(competency) self.competency_programs.where(:c</text>
	<text fill="#F2D2D4FF" x="66.0" y="93">o</text>
	<text fill="#C01E27FF" x="66.6" y="93">m</text>
	<text fill="#BC1019FF" x="67.2" y="93">pete</text>
	<text fill="#E6A5A8FF" x="69.6" y="93">n</text>
	<text fill="#FFFFFFFF" x="70.2" y="93">cy_id =&gt; competency.id).destroy_all e</text>
	<text fill="#F7E1E2FF" x="92.39999999999999" y="93">n</text>
	<text fill="#D5696FFF" x="93.0" y="93">d</text>
	<text fill="#BC1019FF" x="93.6" y="93"> def c</text>
	<text fill="#C01E27FF" x="97.2" y="93">r</text>
	<text fill="#DD878CFF" x="97.8" y="93">e</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="93">ate_draft! self.create_top_clone! # TODO: Versioned: Once we go v</text>
	<text fill="#C42D35FF" x="137.4" y="93">e</text>
	<text fill="#BC1019FF" x="138.0" y="93">rsioning, we will need to clone all </text>
	<text fill="#D9787DFF" x="159.6" y="93">t</text>
	<text fill="#FFFFFFFF" x="160.2" y="93">he links to competencies end # TODO: Should this only grant access to the individual competencies or to entire libraries #       that</text>
	<text fill="#FFFFFFFF" x="0.0" y="94"> the competencies come from? def grant_institution_access(institution_id) super do Competency.unscoped do sel</text>
	<text fill="#FBF0F1FF" x="65.39999999999999" y="94">f</text>
	<text fill="#C42D35FF" x="66.0" y="94">.</text>
	<text fill="#BC1019FF" x="66.6" y="94">comp</text>
	<text fill="#E6A5A8FF" x="69.0" y="94">e</text>
	<text fill="#FFFFFFFF" x="69.6" y="94">tencies.each { |competency| competen</text>
	<text fill="#FBF0F1FF" x="91.2" y="94">c</text>
	<text fill="#D5696FFF" x="91.8" y="94">y</text>
	<text fill="#BC1019FF" x="92.39999999999999" y="94">.grant_</text>
	<text fill="#CD4B52FF" x="96.6" y="94">i</text>
	<text fill="#F7E1E2FF" x="97.2" y="94">n</text>
	<text fill="#FFFFFFFF" x="97.8" y="94">stitution_access(institution_id) } end end end def remove_institut</text>
	<text fill="#E6A5A8FF" x="137.4" y="94">i</text>
	<text fill="#BC1019FF" x="138.0" y="94">on_access(institution_id) super do Co</text>
	<text fill="#EEC3C5FF" x="160.2" y="94">m</text>
	<text fill="#FFFFFFFF" x="160.79999999999998" y="94">petency.unscoped do self.competencies.each { |competency| competency.remove_institution_access(institution_id) } end end end def imp</text>
	<text fill="#FFFFFFFF" x="0.0" y="95">ort_competency_csv(data) ids = [] # column 0 is competency ID # column 1 is competency name (ignored) # colum</text>
	<text fill="#CD4B52FF" x="65.39999999999999" y="95">n</text>
	<text fill="#BC1019FF" x="66.0" y="95"> 2 i</text>
	<text fill="#E6A5A8FF" x="68.39999999999999" y="95">s</text>
	<text fill="#FFFFFFFF" x="69.0" y="95"> competency description (ignored) C</text>
	<text fill="#FBF0F1FF" x="90.0" y="95">S</text>
	<text fill="#DD878CFF" x="90.6" y="95">V</text>
	<text fill="#C01E27FF" x="91.2" y="95">.</text>
	<text fill="#BC1019FF" x="91.8" y="95">parse d</text>
	<text fill="#DD878CFF" x="96.0" y="95">a</text>
	<text fill="#FFFFFFFF" x="96.6" y="95">ta, :headers =&gt; true do |row| ids &lt;&lt; row[0].to_i end self.competency_</text>
	<text fill="#C42D35FF" x="138.0" y="95">i</text>
	<text fill="#BC1019FF" x="138.6" y="95">ds = ids end def export_competency_c</text>
	<text fill="#C42D35FF" x="160.2" y="95">s</text>
	<text fill="#FBF0F1FF" x="160.79999999999998" y="95">v</text>
	<text fill="#FFFFFFFF" x="161.4" y="95"> csv_string = CSV.generate :headers =&gt; true, :write_headers =&gt; true do |csv| csv &lt;&lt; ['ID', 'Name', 'Description'] self.competencies</text>
	<text fill="#FFFFFFFF" x="0.0" y="96">.each do |c| csv &lt;&lt; [c.id, c.name, c.description] end end return csv_string end def export_learning_objectiv</text>
	<text fill="#DD878CFF" x="64.8" y="96">e</text>
	<text fill="#BC1019FF" x="65.39999999999999" y="96">s_co</text>
	<text fill="#E6A5A8FF" x="67.8" y="96">m</text>
	<text fill="#FFFFFFFF" x="68.39999999999999" y="96">petencies_csv(include_lo=false) CSV</text>
	<text fill="#EAB4B7FF" x="89.39999999999999" y="96">.</text>
	<text fill="#C42D35FF" x="90.0" y="96">g</text>
	<text fill="#BC1019FF" x="90.6" y="96">enerate</text>
	<text fill="#C01E27FF" x="94.8" y="96"> </text>
	<text fill="#F2D2D4FF" x="95.39999999999999" y="96">:</text>
	<text fill="#FFFFFFFF" x="96.0" y="96">headers =&gt; true, :write_headers =&gt; true  do |csv| header = ['Competenc</text>
	<text fill="#E6A5A8FF" x="138.0" y="96">y</text>
	<text fill="#BC1019FF" x="138.6" y="96"> Id', 'Compete</text>
	<text fill="#CD4B52FF" x="147.0" y="96">n</text>
	<text fill="#BC1019FF" x="147.6" y="96">cy Tag', 'Competency D</text>
	<text fill="#DD878CFF" x="160.79999999999998" y="96">e</text>
	<text fill="#FFFFFFFF" x="161.4" y="96">scription'] header &lt;&lt; ['LO Id', 'LO description', 'Competency / LO Weight', 'Curriculums'] if include_lo csv &lt;&lt; header.flatten self</text>
	<text fill="#FFFFFFFF" x="0.0" y="97">.competencies.each do |competency| tags = competency.tags.map(&amp;:name).join(";") content = [competency.id, t</text>
	<text fill="#EEC3C5FF" x="64.2" y="97">a</text>
	<text fill="#BC1019FF" x="64.8" y="97">gs, </text>
	<text fill="#DD878CFF" x="67.2" y="97">c</text>
	<text fill="#FFFFFFFF" x="67.8" y="97">ompetency.description] if include_</text>
	<text fill="#FBF0F1FF" x="88.2" y="97">l</text>
	<text fill="#D15A60FF" x="88.8" y="97">o</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="97"> compete</text>
	<text fill="#CD4B52FF" x="94.2" y="97">n</text>
	<text fill="#FBF0F1FF" x="94.8" y="97">c</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="97">y.competency_objectives.each do |co| lo = co.learning_objective curricul</text>
	<text fill="#C42D35FF" x="138.6" y="97">u</text>
	<text fill="#BC1019FF" x="139.2" y="97">ms_names = lo</text>
	<text fill="#EEC3C5FF" x="147.0" y="97">.</text>
	<text fill="#D5696FFF" x="147.6" y="97">c</text>
	<text fill="#BC1019FF" x="148.2" y="97">urriculums.map(&amp;:name)</text>
	<text fill="#F7E1E2FF" x="161.4" y="97">.</text>
	<text fill="#FFFFFFFF" x="162.0" y="97">join("; ") csv &lt;&lt; (content + [lo.id, lo.description, co.weight, curriculums_names]) end end csv &lt;&lt; content.flatten unless include_</text>
	<text fill="#FFFFFFFF" x="0.0" y="98">lo end end end def enroll_user(user, params={}) if UserProgram.where(user_id: user.id, program_id: self.id</text>
	<text fill="#FBF0F1FF" x="63.599999999999994" y="98">)</text>
	<text fill="#C01E27FF" x="64.2" y="98">.</text>
	<text fill="#BC1019FF" x="64.8" y="98">emp</text>
	<text fill="#D5696FFF" x="66.6" y="98">t</text>
	<text fill="#FFFFFFFF" x="67.2" y="98">y? self.user_programs.create!( enr</text>
	<text fill="#EAB4B7FF" x="87.6" y="98">o</text>
	<text fill="#C01E27FF" x="88.2" y="98">l</text>
	<text fill="#BC1019FF" x="88.8" y="98">lment_da</text>
	<text fill="#D5696FFF" x="93.6" y="98">t</text>
	<text fill="#FFFFFFFF" x="94.2" y="98">e: params[:enrollment_date] || Date.current, user: user ) resp = 201 else </text>
	<text fill="#DD878CFF" x="138.6" y="98">U</text>
	<text fill="#BC1019FF" x="139.2" y="98">serProgram.wh</text>
	<text fill="#DD878CFF" x="147.0" y="98">e</text>
	<text fill="#FFFFFFFF" x="147.6" y="98">r</text>
	<text fill="#D5696FFF" x="148.2" y="98">e</text>
	<text fill="#BC1019FF" x="148.79999999999998" y="98">(user_id: user.id, pr</text>
	<text fill="#D5696FFF" x="161.4" y="98">o</text>
	<text fill="#FFFFFFFF" x="162.0" y="98">gram_id: self.id).each do |up| up.update_attributes!( active: true, enrollment_date: params[:enrollment_date] || Date.current ) re</text>
	<text fill="#FFFFFFFF" x="0.0" y="99">sp = 204 end end resp end def unenroll_user(user) UserProgram.where(user_id: user.id, program_id: self.id)</text>
	<text fill="#D15A60FF" x="63.599999999999994" y="99">.</text>
	<text fill="#BC1019FF" x="64.2" y="99">eac</text>
	<text fill="#C83C43FF" x="66.0" y="99">h</text>
	<text fill="#FFFFFFFF" x="66.6" y="99"> do |up| up.update_attributes!(ac</text>
	<text fill="#FBF0F1FF" x="86.39999999999999" y="99">t</text>
	<text fill="#D15A60FF" x="87.0" y="99">i</text>
	<text fill="#BC1019FF" x="87.6" y="99">ve: false</text>
	<text fill="#E6A5A8FF" x="93.0" y="99">)</text>
	<text fill="#FFFFFFFF" x="93.6" y="99"> end end private def reassign_owner if id &amp;&amp; owner_institution_id instituti</text>
	<text fill="#FBF0F1FF" x="138.6" y="99">o</text>
	<text fill="#BC1019FF" x="139.2" y="99">n_acls.where(</text>
	<text fill="#D15A60FF" x="147.0" y="99">:</text>
	<text fill="#FFFFFFFF" x="147.6" y="99">in</text>
	<text fill="#D5696FFF" x="148.79999999999998" y="99">s</text>
	<text fill="#BC1019FF" x="149.4" y="99">titution_id =&gt; self.o</text>
	<text fill="#EEC3C5FF" x="162.0" y="99">w</text>
	<text fill="#FFFFFFFF" x="162.6" y="99">ner_institution_id).each do |next_acl| next_acl.update_attribute(:institution_id, owner_institution_id) end end end end # == Sche</text>
	<text fill="#FFFFFFFF" x="0.0" y="100">ma Information # # Table name: rubrics # #  id                   :integer          not null, primary key </text>
	<text fill="#E2969AFF" x="63.0" y="100">#</text>
	<text fill="#BC1019FF" x="63.599999999999994" y="100">  t</text>
	<text fill="#C42D35FF" x="65.39999999999999" y="100">i</text>
	<text fill="#FBF0F1FF" x="66.0" y="100">t</text>
	<text fill="#FFFFFFFF" x="66.6" y="100">le                :string(255)  </text>
	<text fill="#F2D2D4FF" x="85.8" y="100"> </text>
	<text fill="#C42D35FF" x="86.39999999999999" y="100"> </text>
	<text fill="#BC1019FF" x="87.0" y="100">  not nul</text>
	<text fill="#E6A5A8FF" x="92.39999999999999" y="100">l</text>
	<text fill="#FFFFFFFF" x="93.0" y="100"> #  points               :integer #  created_at           :datetime #  update</text>
	<text fill="#D15A60FF" x="139.2" y="100">d</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="100">_at         </text>
	<text fill="#C83C43FF" x="147.0" y="100"> </text>
	<text fill="#FFFFFFFF" x="147.6" y="100"> :d</text>
	<text fill="#D5696FFF" x="149.4" y="100">a</text>
	<text fill="#BC1019FF" x="150.0" y="100">tetime #  descriptio</text>
	<text fill="#CD4B52FF" x="162.0" y="100">n</text>
	<text fill="#FFFFFFFF" x="162.6" y="100">          :string(255) #  owner_institution_id :integer # class Rubric &lt; ActiveRecord::Base include InstitutionSecured belongs_to</text>
	<text fill="#FFFFFFFF" x="0.0" y="101"> :institution has_many :learning_activities, inverse_of: :rubric has_many :rubric_criteria, -&gt;{order("id</text>
	<text fill="#F7E1E2FF" x="62.4" y="101"> </text>
	<text fill="#C01E27FF" x="63.0" y="101">a</text>
	<text fill="#BC1019FF" x="63.599999999999994" y="101">sc</text>
	<text fill="#C01E27FF" x="64.8" y="101">"</text>
	<text fill="#F2D2D4FF" x="65.39999999999999" y="101">)</text>
	<text fill="#FFFFFFFF" x="66.0" y="101">}, dependent: :destroy, inverse_</text>
	<text fill="#E6A5A8FF" x="85.2" y="101">o</text>
	<text fill="#BC1019FF" x="85.8" y="101">f: :rubri</text>
	<text fill="#C01E27FF" x="91.2" y="101">c</text>
	<text fill="#EAB4B7FF" x="91.8" y="101"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="101">has_many :rubric_rules, -&gt;{order("id asc")}, through: :rubric_criteria has_man</text>
	<text fill="#EAB4B7FF" x="139.2" y="101">y</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="101"> :rubric_comm</text>
	<text fill="#FFFFFFFF" x="147.6" y="101">ents</text>
	<text fill="#C83C43FF" x="150.0" y="101"> </text>
	<text fill="#BC1019FF" x="150.6" y="101">accepts_nested_attri</text>
	<text fill="#F2D2D4FF" x="162.6" y="101">b</text>
	<text fill="#FFFFFFFF" x="163.2" y="101">utes_for :rubric_criteria, allow_destroy: true def complete_multiples_rules(rules, student, la, attempt_number, rubric_comment =</text>
	<text fill="#FFFFFFFF" x="0.0" y="102"> nil, author = nil) ua = get_user_activity(student, la) attempt = create_attempt(ua, attempt_number) upd</text>
	<text fill="#CD4B52FF" x="62.4" y="102">a</text>
	<text fill="#BC1019FF" x="63.0" y="102">te_</text>
	<text fill="#E6A5A8FF" x="64.8" y="102">g</text>
	<text fill="#FFFFFFFF" x="65.39999999999999" y="102">eneral_comment(rubric_comment, a</text>
	<text fill="#D5696FFF" x="84.6" y="102">t</text>
	<text fill="#BC1019FF" x="85.2" y="102">tempt, au</text>
	<text fill="#C01E27FF" x="90.6" y="102">t</text>
	<text fill="#F2D2D4FF" x="91.2" y="102">h</text>
	<text fill="#FFFFFFFF" x="91.8" y="102">or) Rubrics::RubricRulesProcessor.new(self, rules, ua, attempt).complete_rules e</text>
	<text fill="#C01E27FF" x="139.79999999999998" y="102">n</text>
	<text fill="#BC1019FF" x="140.4" y="102">d # def comp</text>
	<text fill="#F2D2D4FF" x="147.6" y="102">l</text>
	<text fill="#FFFFFFFF" x="148.2" y="102">ete</text>
	<text fill="#FBF0F1FF" x="150.0" y="102">_</text>
	<text fill="#C83C43FF" x="150.6" y="102">r</text>
	<text fill="#BC1019FF" x="151.2" y="102">ule(rule, student, </text>
	<text fill="#D5696FFF" x="162.6" y="102">l</text>
	<text fill="#FFFFFFFF" x="163.2" y="102">earning_activity, attempt_number, points = nil, rule_comment = nil) #   ua = get_user_activity(student, learning_activity) #   a</text>
	<text fill="#FFFFFFFF" x="0.0" y="103">ttempt = create_attempt(ua, attempt_number) #   Rubrics::CompleteRubricRule.new(self, ua, attempt, rule</text>
	<text fill="#EAB4B7FF" x="61.8" y="103">,</text>
	<text fill="#BC1019FF" x="62.4" y="103"> po</text>
	<text fill="#D9787DFF" x="64.2" y="103">i</text>
	<text fill="#FFFFFFFF" x="64.8" y="103">nts, rule_comment).complete_rul</text>
	<text fill="#FBF0F1FF" x="83.39999999999999" y="103">e</text>
	<text fill="#CD4B52FF" x="84.0" y="103"> </text>
	<text fill="#BC1019FF" x="84.6" y="103"># end def</text>
	<text fill="#C01E27FF" x="90.0" y="103"> </text>
	<text fill="#F2D2D4FF" x="90.6" y="103">u</text>
	<text fill="#FFFFFFFF" x="91.2" y="103">pdate_criteria_and_rules(params) Rubrics::UpdateCriteriaRule.new(params, self).up</text>
	<text fill="#D5696FFF" x="139.79999999999998" y="103">d</text>
	<text fill="#BC1019FF" x="140.4" y="103">ate_criteria</text>
	<text fill="#EEC3C5FF" x="147.6" y="103">_</text>
	<text fill="#FFFFFFFF" x="148.2" y="103">and_</text>
	<text fill="#F2D2D4FF" x="150.6" y="103">r</text>
	<text fill="#C01E27FF" x="151.2" y="103">u</text>
	<text fill="#BC1019FF" x="151.79999999999998" y="103">les end def get_sco</text>
	<text fill="#F7E1E2FF" x="163.2" y="103">r</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="103">e_for_student(student) rules_ids = student.user_rules.map(&amp;:rubric_rule).map(&amp;:id) rule_ids_current_rubric = self.rubric_rules.</text>
	<text fill="#FFFFFFFF" x="0.0" y="104">where(id: rules_ids).map(&amp;:id) student.user_rules.where(rubric_rule_id: rule_ids_current_rubric).sum(:</text>
	<text fill="#FBF0F1FF" x="61.199999999999996" y="104">p</text>
	<text fill="#C42D35FF" x="61.8" y="104">o</text>
	<text fill="#BC1019FF" x="62.4" y="104">in</text>
	<text fill="#C83C43FF" x="63.599999999999994" y="104">t</text>
	<text fill="#FFFFFFFF" x="64.2" y="104">s) end def add_criteria_with_ru</text>
	<text fill="#FBF0F1FF" x="82.8" y="104">l</text>
	<text fill="#C83C43FF" x="83.39999999999999" y="104">e</text>
	<text fill="#BC1019FF" x="84.0" y="104">s(criteria</text>
	<text fill="#E6A5A8FF" x="90.0" y="104">)</text>
	<text fill="#FFFFFFFF" x="90.6" y="104"> self.rubric_criteria &lt;&lt; criteria end def link_to_la(learning_activity) transactio</text>
	<text fill="#EAB4B7FF" x="139.79999999999998" y="104">n</text>
	<text fill="#BC1019FF" x="140.4" y="104">(requires_ne</text>
	<text fill="#E2969AFF" x="147.6" y="104">w</text>
	<text fill="#FFFFFFFF" x="148.2" y="104">: tru</text>
	<text fill="#EAB4B7FF" x="151.2" y="104">e</text>
	<text fill="#BC1019FF" x="151.79999999999998" y="104">) do self.learning_</text>
	<text fill="#DD878CFF" x="163.2" y="104">a</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="104">ctivities &lt;&lt; learning_activity end end def self.rules_for_attempt(attempt) if attempt.user_rules.any? attempt.user_rules.ordere</text>
	<text fill="#FFFFFFFF" x="0.0" y="105">d_by_criteria_id.map do |rule| UserRuleRepresenter.new(rule) end end end private def get_user_activity</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="105">(</text>
	<text fill="#BC1019FF" x="61.8" y="105">st</text>
	<text fill="#C01E27FF" x="63.0" y="105">u</text>
	<text fill="#F2D2D4FF" x="63.599999999999994" y="105">d</text>
	<text fill="#FFFFFFFF" x="64.2" y="105">ent, learning_activity) UserAc</text>
	<text fill="#F7E1E2FF" x="82.2" y="105">t</text>
	<text fill="#C83C43FF" x="82.8" y="105">i</text>
	<text fill="#BC1019FF" x="83.39999999999999" y="105">vity.find_</text>
	<text fill="#E6A5A8FF" x="89.39999999999999" y="105">b</text>
	<text fill="#FFFFFFFF" x="90.0" y="105">y!(student: student, learning_activity: learning_activity) end def create_attempt(u</text>
	<text fill="#FBF0F1FF" x="139.79999999999998" y="105">a</text>
	<text fill="#BC1019FF" x="140.4" y="105">, attempt_nu</text>
	<text fill="#DD878CFF" x="147.6" y="105">m</text>
	<text fill="#FFFFFFFF" x="148.2" y="105">ber) U</text>
	<text fill="#D9787DFF" x="151.79999999999998" y="105">s</text>
	<text fill="#BC1019FF" x="152.4" y="105">erActivityAttempt.</text>
	<text fill="#C01E27FF" x="163.2" y="105">f</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="105">ind_or_create_by_with_retry!(user_activity_id: ua.id, attempt_number: attempt_number) end def update_general_comment(comment, a</text>
	<text fill="#FFFFFFFF" x="0.0" y="106">ttempt, instructor) rubric_comment = rubric_comments.find_or_initialize_by(user_activity_attempt: att</text>
	<text fill="#F7E1E2FF" x="60.599999999999994" y="106">e</text>
	<text fill="#BC1019FF" x="61.199999999999996" y="106">mpt</text>
	<text fill="#E2969AFF" x="63.0" y="106">)</text>
	<text fill="#FFFFFFFF" x="63.599999999999994" y="106"> return rubric_comment.destroy</text>
	<text fill="#F2D2D4FF" x="81.6" y="106"> </text>
	<text fill="#C01E27FF" x="82.2" y="106">i</text>
	<text fill="#BC1019FF" x="82.8" y="106">f comment.</text>
	<text fill="#E2969AFF" x="88.8" y="106">b</text>
	<text fill="#FFFFFFFF" x="89.39999999999999" y="106">lank? rubric_comment.comment = comment rubric_</text>
	<text fill="#F7E1E2FF" x="117.0" y="106">c</text>
	<text fill="#FFFFFFFF" x="117.6" y="106">omment.author = instructor rubric_comm</text>
	<text fill="#CD4B52FF" x="140.4" y="106">e</text>
	<text fill="#BC1019FF" x="141.0" y="106">nt.save end</text>
	<text fill="#D15A60FF" x="147.6" y="106"> </text>
	<text fill="#FFFFFFFF" x="148.2" y="106">end # E</text>
	<text fill="#C83C43FF" x="152.4" y="106">n</text>
	<text fill="#BC1019FF" x="153.0" y="106">coding: utf-8 # ==</text>
	<text fill="#EAB4B7FF" x="163.79999999999998" y="106"> </text>
	<text fill="#FFFFFFFF" x="164.4" y="106">Schema Information # # Table name: competency_objectives # #  id                    :integer          not null, primary key # </text>
	<text fill="#FFFFFFFF" x="0.0" y="107"> competency_id         :integer          not null #  learning_objective_id :integer          not null</text>
	<text fill="#D15A60FF" x="60.599999999999994" y="107"> </text>
	<text fill="#BC1019FF" x="61.199999999999996" y="107"># </text>
	<text fill="#CD4B52FF" x="62.4" y="107"> </text>
	<text fill="#FFFFFFFF" x="63.0" y="107">weight                :integer</text>
	<text fill="#F7E1E2FF" x="81.0" y="107"> </text>
	<text fill="#C01E27FF" x="81.6" y="107"> </text>
	<text fill="#BC1019FF" x="82.2" y="107">        de</text>
	<text fill="#D5696FFF" x="88.2" y="107">f</text>
	<text fill="#FFFFFFFF" x="88.8" y="107">ault(1), not null #  created_at            :</text>
	<text fill="#EAB4B7FF" x="115.19999999999999" y="107">d</text>
	<text fill="#D9787DFF" x="115.8" y="107">a</text>
	<text fill="#CD4B52FF" x="116.39999999999999" y="107">t</text>
	<text fill="#EEC3C5FF" x="117.0" y="107">e</text>
	<text fill="#FFFFFFFF" x="117.6" y="107">time #  updated_at            :datetim</text>
	<text fill="#DD878CFF" x="140.4" y="107">e</text>
	<text fill="#BC1019FF" x="141.0" y="107"> # class Co</text>
	<text fill="#CD4B52FF" x="147.6" y="107">m</text>
	<text fill="#FFFFFFFF" x="148.2" y="107">petency</text>
	<text fill="#F2D2D4FF" x="152.4" y="107">O</text>
	<text fill="#BC1019FF" x="153.0" y="107">bjective &lt; ActiveR</text>
	<text fill="#D5696FFF" x="163.79999999999998" y="107">e</text>
	<text fill="#FFFFFFFF" x="164.4" y="107">cord::Base belongs_to :learning_objective, :inverse_of =&gt; :competency_objectives belongs_to :competency, :inverse_of =&gt; :compe</text>
	<text fill="#FFFFFFFF" x="0.0" y="108">tency_objectives validates_numericality_of :weight, :only_integer =&gt; true, :allow_nil =&gt; false, :gre</text>
	<text fill="#EEC3C5FF" x="60.0" y="108">a</text>
	<text fill="#BC1019FF" x="60.599999999999994" y="108">te</text>
	<text fill="#C01E27FF" x="61.8" y="108">r</text>
	<text fill="#F7E1E2FF" x="62.4" y="108">_</text>
	<text fill="#FFFFFFFF" x="63.0" y="108">than_or_equal_to =&gt; 0, :messa</text>
	<text fill="#FBF0F1FF" x="80.39999999999999" y="108">g</text>
	<text fill="#C83C43FF" x="81.0" y="108">e</text>
	<text fill="#BC1019FF" x="81.6" y="108"> =&gt; "must </text>
	<text fill="#C83C43FF" x="87.6" y="108">b</text>
	<text fill="#FFFFFFFF" x="88.2" y="108">e a non-negative integer" validates :learn</text>
	<text fill="#EAB4B7FF" x="113.39999999999999" y="108">i</text>
	<text fill="#D5696FFF" x="114.0" y="108">n</text>
	<text fill="#C01E27FF" x="114.6" y="108">g_</text>
	<text fill="#E2969AFF" x="115.8" y="108">o</text>
	<text fill="#FFFFFFFF" x="116.39999999999999" y="108">bjective_id, uniqueness: {scope: :compet</text>
	<text fill="#EEC3C5FF" x="140.4" y="108">e</text>
	<text fill="#BC1019FF" x="141.0" y="108">ncy_id} val</text>
	<text fill="#CD4B52FF" x="147.6" y="108">i</text>
	<text fill="#FFFFFFFF" x="148.2" y="108">dates :c</text>
	<text fill="#DD878CFF" x="153.0" y="108">o</text>
	<text fill="#BC1019FF" x="153.6" y="108">mpetency_id, uniqu</text>
	<text fill="#FFFFFFFF" x="164.4" y="108">eness: {scope: :learning_objective_id} after_create :copy_acl protected # Ensure the LO has the same ACL as me def copy_acl se</text>
	<text fill="#FFFFFFFF" x="0.0" y="109">lf.competency.copy_acl(self.learning_objective) end end # == Schema Information # # Table name: coho</text>
	<text fill="#CD4B52FF" x="60.0" y="109">r</text>
	<text fill="#BC1019FF" x="60.599999999999994" y="109">t_</text>
	<text fill="#E2969AFF" x="61.8" y="109">a</text>
	<text fill="#FFFFFFFF" x="62.4" y="109">ctivity_grades # #  id       </text>
	<text fill="#FBF0F1FF" x="79.8" y="109"> </text>
	<text fill="#C83C43FF" x="80.39999999999999" y="109"> </text>
	<text fill="#BC1019FF" x="81.0" y="109">          </text>
	<text fill="#C01E27FF" x="87.0" y="109">:</text>
	<text fill="#FBF0F1FF" x="87.6" y="109">i</text>
	<text fill="#FFFFFFFF" x="88.2" y="109">nteger          not null, primary key #</text>
	<text fill="#F7E1E2FF" x="111.6" y="109"> </text>
	<text fill="#D9787DFF" x="112.2" y="109"> </text>
	<text fill="#C42D35FF" x="112.8" y="109">g</text>
	<text fill="#BC1019FF" x="113.39999999999999" y="109">ra</text>
	<text fill="#D15A60FF" x="114.6" y="109">d</text>
	<text fill="#FBF0F1FF" x="115.19999999999999" y="109">e</text>
	<text fill="#FFFFFFFF" x="115.8" y="109">_percentage     :decimal(5, 2) #  cohort_i</text>
	<text fill="#BC1019FF" x="141.0" y="109">d          </text>
	<text fill="#C01E27FF" x="147.6" y="109"> </text>
	<text fill="#FFFFFFFF" x="148.2" y="109"> :intege</text>
	<text fill="#FBF0F1FF" x="153.0" y="109">r</text>
	<text fill="#C42D35FF" x="153.6" y="109"> </text>
	<text fill="#BC1019FF" x="154.2" y="109">#  learning_activ</text>
	<text fill="#EAB4B7FF" x="164.4" y="109">i</text>
	<text fill="#FFFFFFFF" x="165.0" y="109">ty_id :integer #  deleted              :boolean          default(FALSE) #  created_at           :datetime         not null # </text>
	<text fill="#FFFFFFFF" x="0.0" y="110"> updated_at           :datetime         not null #  position             :integer # class CohortAct</text>
	<text fill="#EEC3C5FF" x="59.4" y="110">i</text>
	<text fill="#BC1019FF" x="60.0" y="110">vi</text>
	<text fill="#CD4B52FF" x="61.199999999999996" y="110">t</text>
	<text fill="#FFFFFFFF" x="61.8" y="110">yGrade &lt; ActiveRecord::Base be</text>
	<text fill="#CD4B52FF" x="79.8" y="110">l</text>
	<text fill="#BC1019FF" x="80.39999999999999" y="110">ongs_to :co</text>
	<text fill="#EEC3C5FF" x="87.0" y="110">h</text>
	<text fill="#FFFFFFFF" x="87.6" y="110">ort belongs_to :learning_activity acts</text>
	<text fill="#E6A5A8FF" x="110.39999999999999" y="110">_</text>
	<text fill="#CD4B52FF" x="111.0" y="110">a</text>
	<text fill="#BC1019FF" x="111.6" y="110">s_l</text>
	<text fill="#C42D35FF" x="113.39999999999999" y="110">i</text>
	<text fill="#EEC3C5FF" x="114.0" y="110">s</text>
	<text fill="#FFFFFFFF" x="114.6" y="110">t scope: :cohort validates :learning_activit</text>
	<text fill="#C83C43FF" x="141.0" y="110">y</text>
	<text fill="#BC1019FF" x="141.6" y="110">, :cohort, </text>
	<text fill="#FFFFFFFF" x="148.2" y="110">presence:</text>
	<text fill="#EAB4B7FF" x="153.6" y="110"> </text>
	<text fill="#BC1019FF" x="154.2" y="110">true validates_nu</text>
	<text fill="#D5696FFF" x="164.4" y="110">m</text>
	<text fill="#FFFFFFFF" x="165.0" y="110">ericality_of :grade_percentage, greater_than_or_equal_to: 0, less_than_or_equal_to: 100, allow_nil: true validates_uniqueness</text>
	<text fill="#FFFFFFFF" x="0.0" y="111">_of :cohort, scope: :learning_activity default_scope { where(deleted: false).order(:position) } def</text>
	<text fill="#CD4B52FF" x="59.4" y="111"> </text>
	<text fill="#BC1019FF" x="60.0" y="111">se</text>
	<text fill="#F2D2D4FF" x="61.199999999999996" y="111">l</text>
	<text fill="#FFFFFFFF" x="61.8" y="111">f.update_activities(cohort, a</text>
	<text fill="#D5696FFF" x="79.2" y="111">c</text>
	<text fill="#BC1019FF" x="79.8" y="111">tivities) a</text>
	<text fill="#DD878CFF" x="86.39999999999999" y="111">c</text>
	<text fill="#FFFFFFFF" x="87.0" y="111">tivities = activities.map(&amp;:with_ind</text>
	<text fill="#FBF0F1FF" x="108.6" y="111">i</text>
	<text fill="#DD878CFF" x="109.2" y="111">f</text>
	<text fill="#C42D35FF" x="109.8" y="111">f</text>
	<text fill="#BC1019FF" x="110.39999999999999" y="111">eren</text>
	<text fill="#D9787DFF" x="112.8" y="111">t</text>
	<text fill="#FBF0F1FF" x="113.39999999999999" y="111">_</text>
	<text fill="#FFFFFFFF" x="114.0" y="111">access) ids = activities.map{|activity| activ</text>
	<text fill="#D15A60FF" x="141.0" y="111">i</text>
	<text fill="#BC1019FF" x="141.6" y="111">ty["learnin</text>
	<text fill="#FFFFFFFF" x="148.2" y="111">g_activity</text>
	<text fill="#CD4B52FF" x="154.2" y="111">_</text>
	<text fill="#BC1019FF" x="154.79999999999998" y="111">id"]} cags = Coh</text>
	<text fill="#C42D35FF" x="164.4" y="111">o</text>
	<text fill="#FFFFFFFF" x="165.0" y="111">rtActivityGrade.where cohort_id: cohort.id, learning_activity_id: ids cags.each do |cag| activity = activities.select {|act| </text>
	<text fill="#FFFFFFFF" x="0.0" y="112">act["learning_activity_id"] == cag.learning_activity_id }.first cag.update grade_percentage: activ</text>
	<text fill="#EEC3C5FF" x="58.8" y="112">i</text>
	<text fill="#BC1019FF" x="59.4" y="112">ty</text>
	<text fill="#D9787DFF" x="60.599999999999994" y="112">[</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="112">"percentage"] end end end # =</text>
	<text fill="#E6A5A8FF" x="78.6" y="112">=</text>
	<text fill="#BC1019FF" x="79.2" y="112"> Schema Inf</text>
	<text fill="#CD4B52FF" x="85.8" y="112">o</text>
	<text fill="#FFFFFFFF" x="86.39999999999999" y="112">rmation # # Table name: activity_sc</text>
	<text fill="#FBF0F1FF" x="107.39999999999999" y="112">o</text>
	<text fill="#DD878CFF" x="108.0" y="112">r</text>
	<text fill="#C01E27FF" x="108.6" y="112">e</text>
	<text fill="#BC1019FF" x="109.2" y="112">_att</text>
	<text fill="#C42D35FF" x="111.6" y="112">r</text>
	<text fill="#EEC3C5FF" x="112.2" y="112">i</text>
	<text fill="#FFFFFFFF" x="112.8" y="112">butes # #  id                :integer          </text>
	<text fill="#DD878CFF" x="141.0" y="112">n</text>
	<text fill="#BC1019FF" x="141.6" y="112">ot null, pr</text>
	<text fill="#FFFFFFFF" x="148.2" y="112">imary key </text>
	<text fill="#EEC3C5FF" x="154.2" y="112">#</text>
	<text fill="#BC1019FF" x="154.79999999999998" y="112">  key            </text>
	<text fill="#F2D2D4FF" x="165.0" y="112"> </text>
	<text fill="#FFFFFFFF" x="165.6" y="112">  :string(255)      not null #  value             :string(255)      not null #  activity_score_id :integer          not null</text>
	<text fill="#FFFFFFFF" x="0.0" y="113"> #  created_at        :datetime #  updated_at        :datetime # class ActivityScoreAttribute &lt; Ac</text>
	<text fill="#D5696FFF" x="58.8" y="113">t</text>
	<text fill="#BC1019FF" x="59.4" y="113">i</text>
	<text fill="#C01E27FF" x="60.0" y="113">v</text>
	<text fill="#FBF0F1FF" x="60.599999999999994" y="113">e</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="113">Record::Base belongs_to :act</text>
	<text fill="#F2D2D4FF" x="78.0" y="113">i</text>
	<text fill="#BC1019FF" x="78.6" y="113">vity_score,</text>
	<text fill="#C01E27FF" x="85.2" y="113"> </text>
	<text fill="#F7E1E2FF" x="85.8" y="113">i</text>
	<text fill="#FFFFFFFF" x="86.39999999999999" y="113">nverse_of: :activity_score_attrib</text>
	<text fill="#FBF0F1FF" x="106.2" y="113">u</text>
	<text fill="#DD878CFF" x="106.8" y="113">t</text>
	<text fill="#C01E27FF" x="107.39999999999999" y="113">e</text>
	<text fill="#BC1019FF" x="108.0" y="113">s end</text>
	<text fill="#D15A60FF" x="111.0" y="113"> </text>
	<text fill="#FBF0F1FF" x="111.6" y="113">#</text>
	<text fill="#FFFFFFFF" x="112.2" y="113"> == Schema Information # # Table name: rubric_ru</text>
	<text fill="#EAB4B7FF" x="141.0" y="113">l</text>
	<text fill="#BC1019FF" x="141.6" y="113">es # #  id </text>
	<text fill="#FFFFFFFF" x="148.2" y="113">           </text>
	<text fill="#CD4B52FF" x="154.79999999999998" y="113"> </text>
	<text fill="#BC1019FF" x="155.4" y="113">     :integer   </text>
	<text fill="#E6A5A8FF" x="165.0" y="113"> </text>
	<text fill="#FFFFFFFF" x="165.6" y="113">      not null, primary key #  points              :integer          not null #  title               :text             not n</text>
	<text fill="#FFFFFFFF" x="0.0" y="114">ull #  description         :text #  comment             :text #  rubric_criterium_id :integer    </text>
	<text fill="#F7E1E2FF" x="58.199999999999996" y="114"> </text>
	<text fill="#BC1019FF" x="58.8" y="114">  </text>
	<text fill="#DD878CFF" x="60.0" y="114"> </text>
	<text fill="#FFFFFFFF" x="60.599999999999994" y="114">  not null #  created_at    </text>
	<text fill="#FBF0F1FF" x="77.39999999999999" y="114"> </text>
	<text fill="#C42D35FF" x="78.0" y="114"> </text>
	<text fill="#BC1019FF" x="78.6" y="114">    :dateti</text>
	<text fill="#E2969AFF" x="85.2" y="114">m</text>
	<text fill="#FFFFFFFF" x="85.8" y="114">e #  updated_at          :datetim</text>
	<text fill="#E6A5A8FF" x="105.6" y="114">e</text>
	<text fill="#C01E27FF" x="106.2" y="114"> </text>
	<text fill="#BC1019FF" x="106.8" y="114">#  pos</text>
	<text fill="#E6A5A8FF" x="110.39999999999999" y="114">i</text>
	<text fill="#FFFFFFFF" x="111.0" y="114">tion            :integer # class RubricRule &lt; Acti</text>
	<text fill="#EEC3C5FF" x="141.0" y="114">v</text>
	<text fill="#BC1019FF" x="141.6" y="114">eRecord::Ba</text>
	<text fill="#FFFFFFFF" x="148.2" y="114">se validate</text>
	<text fill="#EEC3C5FF" x="154.79999999999998" y="114">s</text>
	<text fill="#BC1019FF" x="155.4" y="114"> :rubric_criteri</text>
	<text fill="#D5696FFF" x="165.0" y="114">u</text>
	<text fill="#FFFFFFFF" x="165.6" y="114">m, presence: true validates :title, presence: true validates :points, presence: true belongs_to :rubric_criterium, inverse_o</text>
	<text fill="#FFFFFFFF" x="0.0" y="115">f: :rubric_rules has_many   :user_rules, dependent: :destroy acts_as_list scope: :rubric_criteriu</text>
	<text fill="#DD878CFF" x="58.199999999999996" y="115">m</text>
	<text fill="#BC1019FF" x="58.8" y="115"> </text>
	<text fill="#C42D35FF" x="59.4" y="115">e</text>
	<text fill="#FFFFFFFF" x="60.0" y="115">nd # == Schema Information # </text>
	<text fill="#D15A60FF" x="77.39999999999999" y="115">#</text>
	<text fill="#BC1019FF" x="78.0" y="115"> Table name</text>
	<text fill="#CD4B52FF" x="84.6" y="115">:</text>
	<text fill="#FFFFFFFF" x="85.2" y="115"> user_objectives # #  id        </text>
	<text fill="#EEC3C5FF" x="104.39999999999999" y="115"> </text>
	<text fill="#C83C43FF" x="105.0" y="115"> </text>
	<text fill="#BC1019FF" x="105.6" y="115">      </text>
	<text fill="#C42D35FF" x="109.2" y="115"> </text>
	<text fill="#F2D2D4FF" x="109.8" y="115"> </text>
	<text fill="#FFFFFFFF" x="110.39999999999999" y="115">  :integer          not null, primary key #  studen</text>
	<text fill="#FBF0F1FF" x="141.0" y="115">t</text>
	<text fill="#BC1019FF" x="141.6" y="115">_id        </text>
	<text fill="#FFFFFFFF" x="148.2" y="115">    :integer</text>
	<text fill="#C42D35FF" x="155.4" y="115"> </text>
	<text fill="#BC1019FF" x="156.0" y="115">         not nu</text>
	<text fill="#C83C43FF" x="165.0" y="115">l</text>
	<text fill="#FFFFFFFF" x="165.6" y="115">l #  learning_objective_id :integer          not null #  state                 :string(255)      not null #  created_at     </text>
	<text fill="#FFFFFFFF" x="0.0" y="116">       :datetime #  updated_at            :datetime #  mastered_by_id        :integer #  mastered</text>
	<text fill="#C01E27FF" x="58.199999999999996" y="116">_</text>
	<text fill="#BC1019FF" x="58.8" y="116">b</text>
	<text fill="#E6A5A8FF" x="59.4" y="116">y</text>
	<text fill="#FFFFFFFF" x="60.0" y="116">_type      :string(255) #  p</text>
	<text fill="#EAB4B7FF" x="76.8" y="116">r</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="116">ogress_num  </text>
	<text fill="#F2D2D4FF" x="84.6" y="116"> </text>
	<text fill="#FFFFFFFF" x="85.2" y="116">       :integer          defau</text>
	<text fill="#FBF0F1FF" x="103.2" y="116">l</text>
	<text fill="#D9787DFF" x="103.8" y="116">t</text>
	<text fill="#BC1019FF" x="104.39999999999999" y="116">(0) #  </text>
	<text fill="#CD4B52FF" x="108.6" y="116">p</text>
	<text fill="#FBF0F1FF" x="109.2" y="116">r</text>
	<text fill="#FFFFFFFF" x="109.8" y="116">ogress_den          :integer          default(1) #  a</text>
	<text fill="#BC1019FF" x="141.6" y="116">ggregate_sc</text>
	<text fill="#FFFFFFFF" x="148.2" y="116">ore_num   :i</text>
	<text fill="#E2969AFF" x="155.4" y="116">n</text>
	<text fill="#BC1019FF" x="156.0" y="116">teger          d</text>
	<text fill="#FFFFFFFF" x="165.6" y="116">efault(0) #  aggregate_score_den   :integer          default(1) #  percentage_score_num  :integer          default(0) #  per</text>
	<text fill="#FFFFFFFF" x="0.0" y="117">centage_score_den  :integer          default(1) #  mastered_activity_num :integer          defau</text>
	<text fill="#EAB4B7FF" x="57.599999999999994" y="117">l</text>
	<text fill="#BC1019FF" x="58.199999999999996" y="117">t</text>
	<text fill="#C42D35FF" x="58.8" y="117">(</text>
	<text fill="#FFFFFFFF" x="59.4" y="117">0) #  mastered_at           </text>
	<text fill="#FBF0F1FF" x="76.2" y="117">:</text>
	<text fill="#C01E27FF" x="76.8" y="117">d</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="117">atetime #  </text>
	<text fill="#DD878CFF" x="84.0" y="117">s</text>
	<text fill="#FFFFFFFF" x="84.6" y="117">tarted_at            :datetime</text>
	<text fill="#EEC3C5FF" x="102.6" y="117"> </text>
	<text fill="#C42D35FF" x="103.2" y="117">#</text>
	<text fill="#BC1019FF" x="103.8" y="117">  at_ri</text>
	<text fill="#D5696FFF" x="108.0" y="117">s</text>
	<text fill="#FFFFFFFF" x="108.6" y="117">k               :boolean #  duration_seconds      :inte</text>
	<text fill="#BC1019FF" x="141.6" y="117">ger        </text>
	<text fill="#FFFFFFFF" x="148.2" y="117">  default(0)</text>
	<text fill="#FBF0F1FF" x="155.4" y="117">,</text>
	<text fill="#BC1019FF" x="156.0" y="117"> not null # clas</text>
	<text fill="#F2D2D4FF" x="165.6" y="117">s</text>
	<text fill="#FFFFFFFF" x="166.2" y="117"> UserObjective &lt; ActiveRecord::Base include Subscribable include Notificable include AASM FAILED_STATES = %w(failed) MASTER</text>
	<text fill="#FFFFFFFF" x="0.0" y="118">ED_STATES = %w(mastered) READABLE_STATE_NAMES = { "available" =&gt; "Not Started", "in_progress" =&gt;</text>
	<text fill="#D15A60FF" x="57.599999999999994" y="118"> </text>
	<text fill="#BC1019FF" x="58.199999999999996" y="118">"</text>
	<text fill="#E6A5A8FF" x="58.8" y="118">I</text>
	<text fill="#FFFFFFFF" x="59.4" y="118">n Progress", "failed" =&gt; "No</text>
	<text fill="#D5696FFF" x="76.2" y="118">t</text>
	<text fill="#BC1019FF" x="76.8" y="118"> Mastered",</text>
	<text fill="#C01E27FF" x="83.39999999999999" y="118"> </text>
	<text fill="#FBF0F1FF" x="84.0" y="118">"</text>
	<text fill="#FFFFFFFF" x="84.6" y="118">mastered" =&gt; "Mastered" } bel</text>
	<text fill="#DD878CFF" x="102.0" y="118">o</text>
	<text fill="#BC1019FF" x="102.6" y="118">ngs_to :</text>
	<text fill="#E2969AFF" x="107.39999999999999" y="118">l</text>
	<text fill="#FFFFFFFF" x="108.0" y="118">earning_objective, :inverse_of =&gt; :user_objectives belon</text>
	<text fill="#C42D35FF" x="141.6" y="118">g</text>
	<text fill="#BC1019FF" x="142.2" y="118">s_to :stud</text>
	<text fill="#FFFFFFFF" x="148.2" y="118">ent, class_na</text>
	<text fill="#D15A60FF" x="156.0" y="118">m</text>
	<text fill="#BC1019FF" x="156.6" y="118">e: User.name, i</text>
	<text fill="#EAB4B7FF" x="165.6" y="118">n</text>
	<text fill="#FFFFFFFF" x="166.2" y="118">verse_of: :user_objectives belongs_to :mastered_by, polymorphic: true has_many :learning_plan_contexts, inverse_of: :user_o</text>
	<text fill="#FFFFFFFF" x="0.0" y="119">bjective, dependent: :destroy has_many :cohorts, through: :learning_plan_contexts has_many :cur</text>
	<text fill="#FBF0F1FF" x="57.0" y="119">r</text>
	<text fill="#BC1019FF" x="57.599999999999994" y="119">i</text>
	<text fill="#C42D35FF" x="58.199999999999996" y="119">c</text>
	<text fill="#FFFFFFFF" x="58.8" y="119">ulums_learning_objectives, :</text>
	<text fill="#EEC3C5FF" x="75.6" y="119">t</text>
	<text fill="#BC1019FF" x="76.2" y="119">hrough =&gt; :l</text>
	<text fill="#E6A5A8FF" x="83.39999999999999" y="119">e</text>
	<text fill="#FFFFFFFF" x="84.0" y="119">arning_objective scope :with</text>
	<text fill="#FBF0F1FF" x="100.8" y="119">_</text>
	<text fill="#CD4B52FF" x="101.39999999999999" y="119">c</text>
	<text fill="#BC1019FF" x="102.0" y="119">ompetenc</text>
	<text fill="#E6A5A8FF" x="106.8" y="119">y</text>
	<text fill="#FFFFFFFF" x="107.39999999999999" y="119">, -&gt;(competency_id) { joins(learning_objective: {competen</text>
	<text fill="#CD4B52FF" x="141.6" y="119">c</text>
	<text fill="#BC1019FF" x="142.2" y="119">y_objectiv</text>
	<text fill="#FFFFFFFF" x="148.2" y="119">es: :competen</text>
	<text fill="#E6A5A8FF" x="156.0" y="119">c</text>
	<text fill="#BC1019FF" x="156.6" y="119">y}).where("comp</text>
	<text fill="#DD878CFF" x="165.6" y="119">e</text>
	<text fill="#FFFFFFFF" x="166.2" y="119">tencies.id = ?",competency_id) } scope :with_student, -&gt;(student_id) { where(:student_id =&gt; student_id) } scope :with_curri</text>
	<text fill="#FFFFFFFF" x="0.0" y="120">culum, -&gt;(curriculum_id) { joins(:curriculums_learning_objectives).where("curriculums_learning_</text>
	<text fill="#E6A5A8FF" x="57.0" y="120">o</text>
	<text fill="#BC1019FF" x="57.599999999999994" y="120">b</text>
	<text fill="#DD878CFF" x="58.199999999999996" y="120">j</text>
	<text fill="#FFFFFFFF" x="58.8" y="120">ectives.curriculum_id = ?", </text>
	<text fill="#C83C43FF" x="75.6" y="120">c</text>
	<text fill="#BC1019FF" x="76.2" y="120">urriculum_i</text>
	<text fill="#C42D35FF" x="82.8" y="120">d</text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="120">) } scope :mastered, -&gt; { wh</text>
	<text fill="#F2D2D4FF" x="100.2" y="120">e</text>
	<text fill="#C42D35FF" x="100.8" y="120">r</text>
	<text fill="#BC1019FF" x="101.39999999999999" y="120">e(state:</text>
	<text fill="#E6A5A8FF" x="106.2" y="120"> </text>
	<text fill="#FFFFFFFF" x="106.8" y="120">'mastered') } scope :at_risk, -&gt; { where(at_risk: true) } </text>
	<text fill="#CD4B52FF" x="141.6" y="120">s</text>
	<text fill="#BC1019FF" x="142.2" y="120">cope :fail</text>
	<text fill="#FFFFFFFF" x="148.2" y="120">ed, -&gt; { wher</text>
	<text fill="#FBF0F1FF" x="156.0" y="120">e</text>
	<text fill="#BC1019FF" x="156.6" y="120">(state: UserObj</text>
	<text fill="#DD878CFF" x="165.6" y="120">e</text>
	<text fill="#FFFFFFFF" x="166.2" y="120">ctive::FAILED_STATES) } scope :available, -&gt; { where(state: 'available') } scope :with_progress, -&gt; { where.not(state: 'ava</text>
	<text fill="#FFFFFFFF" x="0.0" y="121">ilable') } after_save :percolate_duration, if: :duration_seconds_changed? after_commit :percola</text>
	<text fill="#D15A60FF" x="57.0" y="121">t</text>
	<text fill="#C01E27FF" x="57.599999999999994" y="121">e</text>
	<text fill="#FBF0F1FF" x="58.199999999999996" y="121">,</text>
	<text fill="#FFFFFFFF" x="58.8" y="121"> on: :update # Handle loggi</text>
	<text fill="#E6A5A8FF" x="75.0" y="121">n</text>
	<text fill="#BC1019FF" x="75.6" y="121">g at_risk af</text>
	<text fill="#E6A5A8FF" x="82.8" y="121">t</text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="121">er_save do |uo| log_event(E</text>
	<text fill="#EAB4B7FF" x="99.6" y="121">v</text>
	<text fill="#C01E27FF" x="100.2" y="121">e</text>
	<text fill="#BC1019FF" x="100.8" y="121">ntTempla</text>
	<text fill="#E6A5A8FF" x="105.6" y="121">t</text>
	<text fill="#FFFFFFFF" x="106.2" y="121">e::OBJECTIVE_AT_RISK) if uo.at_risk_changed?(from: false, t</text>
	<text fill="#CD4B52FF" x="141.6" y="121">o</text>
	<text fill="#BC1019FF" x="142.2" y="121">: true) e</text>
	<text fill="#C83C43FF" x="147.6" y="121">n</text>
	<text fill="#FFFFFFFF" x="148.2" y="121">d def ransacka</text>
	<text fill="#CD4B52FF" x="156.6" y="121">b</text>
	<text fill="#BC1019FF" x="157.2" y="121">le_attributes(</text>
	<text fill="#CD4B52FF" x="165.6" y="121">a</text>
	<text fill="#FFFFFFFF" x="166.2" y="121">uth_object = nil) [:state] end ransacker :status do |r| conditions = [] # TODO: Stop treating at_risk like a state if it's </text>
	<text fill="#FFFFFFFF" x="0.0" y="122">not.  For now, here's a hack to sort for at risk as a state. conditions &lt;&lt; "WHEN \"user_object</text>
	<text fill="#FBF0F1FF" x="56.4" y="122">i</text>
	<text fill="#BC1019FF" x="57.0" y="122">v</text>
	<text fill="#D5696FFF" x="57.599999999999994" y="122">e</text>
	<text fill="#FFFFFFFF" x="58.199999999999996" y="122">s\".\"at_risk\" = TRUE THEN</text>
	<text fill="#FBF0F1FF" x="74.39999999999999" y="122"> </text>
	<text fill="#C42D35FF" x="75.0" y="122">'</text>
	<text fill="#BC1019FF" x="75.6" y="122">At Risk'" R</text>
	<text fill="#C42D35FF" x="82.2" y="122">E</text>
	<text fill="#FFFFFFFF" x="82.8" y="122">ADABLE_STATE_NAMES.each_pai</text>
	<text fill="#E6A5A8FF" x="99.0" y="122">r</text>
	<text fill="#BC1019FF" x="99.6" y="122"> {|raw,re</text>
	<text fill="#E6A5A8FF" x="105.0" y="122">a</text>
	<text fill="#FFFFFFFF" x="105.6" y="122">dable| conditions &lt;&lt; " WHEN \"user_objectives\".\"state\" = </text>
	<text fill="#CD4B52FF" x="141.6" y="122">'</text>
	<text fill="#BC1019FF" x="142.2" y="122">#{raw}' T</text>
	<text fill="#CD4B52FF" x="147.6" y="122">H</text>
	<text fill="#FFFFFFFF" x="148.2" y="122">EN '#{readable</text>
	<text fill="#DD878CFF" x="156.6" y="122">}</text>
	<text fill="#BC1019FF" x="157.2" y="122">' " } sql = "C</text>
	<text fill="#CD4B52FF" x="165.6" y="122">A</text>
	<text fill="#FFFFFFFF" x="166.2" y="122">SE #{conditions.join} ELSE \"user_objectives\".\"state\" END" Arel::Nodes::SqlLiteral.new(sql) end # Need these for some te</text>
	<text fill="#FFFFFFFF" x="0.0" y="123">mp values PerformanceNumbers = Struct.new(:calculated_score_num, :calculated_score_den, :state</text>
	<text fill="#E6A5A8FF" x="56.4" y="123">,</text>
	<text fill="#BC1019FF" x="57.0" y="123"> </text>
	<text fill="#F2D2D4FF" x="57.599999999999994" y="123">:</text>
	<text fill="#FFFFFFFF" x="58.199999999999996" y="123">weight, :act_started_at, :a</text>
	<text fill="#DD878CFF" x="74.39999999999999" y="123">c</text>
	<text fill="#BC1019FF" x="75.0" y="123">t_mastered_a</text>
	<text fill="#E6A5A8FF" x="82.2" y="123">t</text>
	<text fill="#FFFFFFFF" x="82.8" y="123">) UserActivitiesPerformanc</text>
	<text fill="#E6A5A8FF" x="98.39999999999999" y="123">e</text>
	<text fill="#BC1019FF" x="99.0" y="123"> = Struct</text>
	<text fill="#E6A5A8FF" x="104.39999999999999" y="123">.</text>
	<text fill="#FFFFFFFF" x="105.0" y="123">new(:mastered_count, :performance, :act_progress, :act_aggreg</text>
	<text fill="#C42D35FF" x="141.6" y="123">a</text>
	<text fill="#BC1019FF" x="142.2" y="123">te_score)</text>
	<text fill="#CD4B52FF" x="147.6" y="123"> </text>
	<text fill="#FFFFFFFF" x="148.2" y="123">aasm :state, w</text>
	<text fill="#EEC3C5FF" x="156.6" y="123">h</text>
	<text fill="#BC1019FF" x="157.2" y="123">iny_transition</text>
	<text fill="#CD4B52FF" x="165.6" y="123">s</text>
	<text fill="#FFFFFFFF" x="166.2" y="123">: false do state :available, initial: true state :in_progress state :mastered state :failed any = [:available, :in_progress</text>
	<text fill="#FFFFFFFF" x="0.0" y="124">, :failed, :mastered] event :master do transitions from: any, to: :mastered, guard: :achieved_</text>
	<text fill="#D5696FFF" x="56.4" y="124">m</text>
	<text fill="#C83C43FF" x="57.0" y="124">a</text>
	<text fill="#FFFFFFFF" x="57.599999999999994" y="124">stery after do if self.maste</text>
	<text fill="#C01E27FF" x="74.39999999999999" y="124">r</text>
	<text fill="#BC1019FF" x="75.0" y="124">ed_by.nil? </text>
	<text fill="#C42D35FF" x="81.6" y="124">m</text>
	<text fill="#FFFFFFFF" x="82.2" y="124">astered_time = self.master</text>
	<text fill="#E6A5A8FF" x="97.8" y="124">e</text>
	<text fill="#BC1019FF" x="98.39999999999999" y="124">d_perform</text>
	<text fill="#E6A5A8FF" x="103.8" y="124">a</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="124">nce_order_by_mastered_at.first.try(:act_mastered_at) mastered_</text>
	<text fill="#BC1019FF" x="141.6" y="124">time ||= T</text>
	<text fill="#D9787DFF" x="147.6" y="124">i</text>
	<text fill="#FFFFFFFF" x="148.2" y="124">me.current self</text>
	<text fill="#BC1019FF" x="157.2" y="124">.mastered_at =</text>
	<text fill="#C42D35FF" x="165.6" y="124"> </text>
	<text fill="#FFFFFFFF" x="166.2" y="124">mastered_time if self.mastered_at.nil? || mastered_time &lt; self.mastered_at end self.at_risk = false self.log_event(EventTem</text>
	<text fill="#FFFFFFFF" x="0.0" y="125">plate::OBJECTIVE_MASTERED, self.mastered_at) self.save # Need to move percolate from success t</text>
	<text fill="#C01E27FF" x="56.4" y="125">o</text>
	<text fill="#E2969AFF" x="57.0" y="125"> </text>
	<text fill="#FFFFFFFF" x="57.599999999999994" y="125">after call. #percolate end </text>
	<text fill="#E6A5A8FF" x="73.8" y="125">e</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="125">nd event :fl</text>
	<text fill="#E2969AFF" x="81.6" y="125">o</text>
	<text fill="#FFFFFFFF" x="82.2" y="125">p do transitions from: an</text>
	<text fill="#E6A5A8FF" x="97.2" y="125">y</text>
	<text fill="#BC1019FF" x="97.8" y="125">, to: :fa</text>
	<text fill="#D9787DFF" x="103.2" y="125">i</text>
	<text fill="#FFFFFFFF" x="103.8" y="125">led, guard: :achieved_failure after do self.at_risk = achieved_</text>
	<text fill="#BC1019FF" x="141.6" y="125">at_risk se</text>
	<text fill="#DD878CFF" x="147.6" y="125">l</text>
	<text fill="#FFFFFFFF" x="148.2" y="125">f.mastered_at =</text>
	<text fill="#C83C43FF" x="157.2" y="125"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="125">nil self.log_e</text>
	<text fill="#FFFFFFFF" x="166.2" y="125">vent(EventTemplate::OBJECTIVE_FAILED) self.save end end event :start do transitions from: :available, to: :in_progress tran</text>
	<text fill="#FFFFFFFF" x="0.0" y="126">sitions from: any, to: :in_progress, guard: :achieved_progress after do self.at_risk = achiev</text>
	<text fill="#F2D2D4FF" x="55.8" y="126">e</text>
	<text fill="#BC1019FF" x="56.4" y="126">d</text>
	<text fill="#FBF0F1FF" x="57.0" y="126">_</text>
	<text fill="#FFFFFFFF" x="57.599999999999994" y="126">at_risk self.mastered_at = </text>
	<text fill="#C42D35FF" x="73.8" y="126">n</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="126">il self.log</text>
	<text fill="#C01E27FF" x="81.0" y="126">_</text>
	<text fill="#FBF0F1FF" x="81.6" y="126">e</text>
	<text fill="#FFFFFFFF" x="82.2" y="126">vent(EventTemplate::OBJE</text>
	<text fill="#EEC3C5FF" x="96.6" y="126">C</text>
	<text fill="#BC1019FF" x="97.2" y="126">TIVE_STAR</text>
	<text fill="#D15A60FF" x="102.6" y="126">T</text>
	<text fill="#FFFFFFFF" x="103.2" y="126">ED, self.started_at) self.save end end end def permitted?(user,</text>
	<text fill="#FBF0F1FF" x="141.0" y="126"> </text>
	<text fill="#BC1019FF" x="141.6" y="126">action) al</text>
	<text fill="#EAB4B7FF" x="147.6" y="126">l</text>
	<text fill="#FFFFFFFF" x="148.2" y="126">owed = user.aut</text>
	<text fill="#D15A60FF" x="157.2" y="126">h</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="126">orized?(Right:</text>
	<text fill="#FFFFFFFF" x="166.2" y="126">:READ, self.learning_objective) &amp;&amp; case action when Right::READ self.student_id == user.id || # user can read their own obj</text>
	<text fill="#FFFFFFFF" x="0.0" y="127">ectives. user.has_rights?(Right::READ_PROFILE, 'user_objectives') || # See if we can read eve</text>
	<text fill="#E2969AFF" x="55.8" y="127">r</text>
	<text fill="#D15A60FF" x="56.4" y="127">y</text>
	<text fill="#FFFFFFFF" x="57.0" y="127">thing user.has_rights?(Righ</text>
	<text fill="#EAB4B7FF" x="73.2" y="127">t</text>
	<text fill="#BC1019FF" x="73.8" y="127">::SCORE_ADMI</text>
	<text fill="#D5696FFF" x="81.0" y="127">N</text>
	<text fill="#FFFFFFFF" x="81.6" y="127">, 'user_objectives') || </text>
	<text fill="#F2D2D4FF" x="96.0" y="127">#</text>
	<text fill="#C01E27FF" x="96.6" y="127"> </text>
	<text fill="#BC1019FF" x="97.2" y="127">super-ad</text>
	<text fill="#C83C43FF" x="102.0" y="127">m</text>
	<text fill="#FBF0F1FF" x="102.6" y="127">i</text>
	<text fill="#FFFFFFFF" x="103.2" y="127">ns can read everyone's objectives (this is already institution </text>
	<text fill="#EEC3C5FF" x="141.0" y="127">s</text>
	<text fill="#BC1019FF" x="141.6" y="127">ecured) us</text>
	<text fill="#EEC3C5FF" x="147.6" y="127">e</text>
	<text fill="#FFFFFFFF" x="148.2" y="127">r.is_nonlearner</text>
	<text fill="#DD878CFF" x="157.2" y="127">_</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="127">for_objective?</text>
	<text fill="#FFFFFFFF" x="166.2" y="127">(self.learning_objective_id) # if you are a grader in a cohort that contains this objective, you can read everyone's grades</text>
	<text fill="#FFFFFFFF" x="0.0" y="128"> when Right::SCORE user.has_rights?(Right::SCORE_ADMIN, 'user_objectives') || # super-admins </text>
	<text fill="#D5696FFF" x="55.8" y="128">c</text>
	<text fill="#E6A5A8FF" x="56.4" y="128">a</text>
	<text fill="#FFFFFFFF" x="57.0" y="128">n write scores for everyone</text>
	<text fill="#D15A60FF" x="73.2" y="128">.</text>
	<text fill="#BC1019FF" x="73.8" y="128"> user.is_non</text>
	<text fill="#F2D2D4FF" x="81.0" y="128">l</text>
	<text fill="#FFFFFFFF" x="81.6" y="128">earner_for_objective?(s</text>
	<text fill="#FBF0F1FF" x="95.39999999999999" y="128">e</text>
	<text fill="#C42D35FF" x="96.0" y="128">l</text>
	<text fill="#BC1019FF" x="96.6" y="128">f.learni</text>
	<text fill="#C01E27FF" x="101.39999999999999" y="128">n</text>
	<text fill="#F2D2D4FF" x="102.0" y="128">g</text>
	<text fill="#FFFFFFFF" x="102.6" y="128">_objective_id) # if you are a grader in a cohort that contains t</text>
	<text fill="#EAB4B7FF" x="141.0" y="128">h</text>
	<text fill="#BC1019FF" x="141.6" y="128">is objecti</text>
	<text fill="#FFFFFFFF" x="147.6" y="128">ve, you can grad</text>
	<text fill="#E6A5A8FF" x="157.2" y="128">e</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="128"> anyone. else </text>
	<text fill="#FFFFFFFF" x="166.2" y="128">true end allowed or raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") end</text>
	<text fill="#FFFFFFFF" x="0.0" y="129"> # Add to our current duration def add_duration!(secs) UpdateUserStats::IncrementWorker.perfo</text>
	<text fill="#C42D35FF" x="55.8" y="129">r</text>
	<text fill="#F7E1E2FF" x="56.4" y="129">m</text>
	<text fill="#FFFFFFFF" x="57.0" y="129">_async(self.class.name, se</text>
	<text fill="#F7E1E2FF" x="72.6" y="129">l</text>
	<text fill="#BC1019FF" x="73.2" y="129">f.id, secs) </text>
	<text fill="#C42D35FF" x="80.39999999999999" y="129">e</text>
	<text fill="#FFFFFFFF" x="81.0" y="129">nd # Add to the duration</text>
	<text fill="#D15A60FF" x="95.39999999999999" y="129"> </text>
	<text fill="#BC1019FF" x="96.0" y="129">of the tr</text>
	<text fill="#E6A5A8FF" x="101.39999999999999" y="129">e</text>
	<text fill="#FFFFFFFF" x="102.0" y="129">e. This will get get called in an after_save callback def percola</text>
	<text fill="#DD878CFF" x="141.0" y="129">t</text>
	<text fill="#BC1019FF" x="141.6" y="129">e_duratio</text>
	<text fill="#C42D35FF" x="147.0" y="129">n</text>
	<text fill="#FFFFFFFF" x="147.6" y="129"> if self.duratio</text>
	<text fill="#EEC3C5FF" x="157.2" y="129">n</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="129">_seconds_chang</text>
	<text fill="#FFFFFFFF" x="166.2" y="129">ed? secs = self.duration_seconds - self.duration_seconds_was self.user_competencies_for_objective_and_student.each { |uc| u</text>
	<text fill="#FFFFFFFF" x="0.0" y="130">c.add_duration!(secs) } self.cohort_users_for_objective_and_student.each { |cu| cu.add_durat</text>
	<text fill="#FBF0F1FF" x="55.199999999999996" y="130">i</text>
	<text fill="#C83C43FF" x="55.8" y="130">o</text>
	<text fill="#FFFFFFFF" x="56.4" y="130">n!(secs) } end end def upda</text>
	<text fill="#E2969AFF" x="72.6" y="130">t</text>
	<text fill="#BC1019FF" x="73.2" y="130">e_state_and_</text>
	<text fill="#E2969AFF" x="80.39999999999999" y="130">t</text>
	<text fill="#FFFFFFFF" x="81.0" y="130">ime_from_activities act</text>
	<text fill="#E2969AFF" x="94.8" y="130">i</text>
	<text fill="#BC1019FF" x="95.39999999999999" y="130">vities_pe</text>
	<text fill="#D15A60FF" x="100.8" y="130">r</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="130">formance self.set_performance_numbers self.save self.master! || se</text>
	<text fill="#D15A60FF" x="141.0" y="130">l</text>
	<text fill="#BC1019FF" x="141.6" y="130">f.flop! |</text>
	<text fill="#D15A60FF" x="147.0" y="130">|</text>
	<text fill="#FFFFFFFF" x="147.6" y="130"> self.start! || </text>
	<text fill="#EEC3C5FF" x="157.2" y="130">t</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="130">rue end # Set </text>
	<text fill="#FFFFFFFF" x="166.2" y="130">all the performance numbers as a before transition filter - This does not save anything! def set_performance_numbers # Do n</text>
	<text fill="#FFFFFFFF" x="0.0" y="131">othing if we were mastered by something else if self.mastered_by.nil? # Started at started_t</text>
	<text fill="#EEC3C5FF" x="55.199999999999996" y="131">i</text>
	<text fill="#D9787DFF" x="55.8" y="131">m</text>
	<text fill="#FFFFFFFF" x="56.4" y="131">e = get_performance.reject </text>
	<text fill="#C83C43FF" x="72.6" y="131">{</text>
	<text fill="#BC1019FF" x="73.2" y="131"> |ua| ua.act</text>
	<text fill="#F7E1E2FF" x="80.39999999999999" y="131">_</text>
	<text fill="#FFFFFFFF" x="81.0" y="131">started_at.nil? } .sor</text>
	<text fill="#F2D2D4FF" x="94.2" y="131">t</text>
	<text fill="#C01E27FF" x="94.8" y="131"> </text>
	<text fill="#BC1019FF" x="95.39999999999999" y="131">{ |a,b| </text>
	<text fill="#C01E27FF" x="100.2" y="131">a</text>
	<text fill="#FBF0F1FF" x="100.8" y="131">.</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="131">act_started_at &lt;=&gt; b.act_started_at } .first started_time = (start</text>
	<text fill="#C42D35FF" x="141.0" y="131">e</text>
	<text fill="#BC1019FF" x="141.6" y="131">d_time.ni</text>
	<text fill="#DD878CFF" x="147.0" y="131">l</text>
	<text fill="#FFFFFFFF" x="147.6" y="131">?) ? Time.curren</text>
	<text fill="#FBF0F1FF" x="157.2" y="131">t</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="131"> : started_tim</text>
	<text fill="#FFFFFFFF" x="166.2" y="131">e.act_started_at self.started_at = started_time if self.started_at.nil? || started_time &lt; self.started_at # Scores self.agg</text>
	<text fill="#FFFFFFFF" x="0.0" y="132">regate_score_num = activities_performance.act_aggregate_score.to_r.numerator self.aggregate_</text>
	<text fill="#E2969AFF" x="55.199999999999996" y="132">s</text>
	<text fill="#EEC3C5FF" x="55.8" y="132">c</text>
	<text fill="#FFFFFFFF" x="56.4" y="132">ore_den = activities_perfo</text>
	<text fill="#F7E1E2FF" x="72.0" y="132">r</text>
	<text fill="#BC1019FF" x="72.6" y="132">mance.act_ag</text>
	<text fill="#C83C43FF" x="79.8" y="132">g</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="132">regate_score.to_r.denom</text>
	<text fill="#CD4B52FF" x="94.2" y="132">i</text>
	<text fill="#BC1019FF" x="94.8" y="132">nator sel</text>
	<text fill="#EAB4B7FF" x="100.2" y="132">f</text>
	<text fill="#FFFFFFFF" x="100.8" y="132">.progress_num = activities_performance.act_progress.to_r.numerator</text>
	<text fill="#FBF0F1FF" x="140.4" y="132"> </text>
	<text fill="#BC1019FF" x="141.0" y="132">self.progr</text>
	<text fill="#EEC3C5FF" x="147.0" y="132">e</text>
	<text fill="#FFFFFFFF" x="147.6" y="132">ss_den = activiti</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="132">es_performanc</text>
	<text fill="#CD4B52FF" x="165.6" y="132">e</text>
	<text fill="#FFFFFFFF" x="166.2" y="132">.act_progress.to_r.denominator self.mastered_activity_num = activities_performance.mastered_count end self.save true end de</text>
	<text fill="#FFFFFFFF" x="0.0" y="133">f reload @activities_performance = nil super end def log_event(template_id, ts = nil, whodun</text>
	<text fill="#D9787DFF" x="55.199999999999996" y="133">n</text>
	<text fill="#FFFFFFFF" x="55.8" y="133">it_id = nil) attrs = { temp</text>
	<text fill="#E2969AFF" x="72.0" y="133">l</text>
	<text fill="#BC1019FF" x="72.6" y="133">ate_identifi</text>
	<text fill="#DD878CFF" x="79.8" y="133">e</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="133">r: template_id, groupi</text>
	<text fill="#E2969AFF" x="93.6" y="133">n</text>
	<text fill="#BC1019FF" x="94.2" y="133">g_id: sel</text>
	<text fill="#CD4B52FF" x="99.6" y="133">f</text>
	<text fill="#FFFFFFFF" x="100.2" y="133">.learning_objective_id.to_s, whodunnit_id: current_user.try(:id), s</text>
	<text fill="#EAB4B7FF" x="140.4" y="133">u</text>
	<text fill="#BC1019FF" x="141.0" y="133">bject_id: </text>
	<text fill="#FFFFFFFF" x="147.0" y="133">self.id, subject_t</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="133">ype: self.cla</text>
	<text fill="#CD4B52FF" x="165.6" y="133">s</text>
	<text fill="#FFFFFFFF" x="166.2" y="133">s.name, user_id: self.student_id } unless ts.nil? attrs[:created_at] = ts attrs[:updated_at] = ts end Event.publish(attrs) </text>
	<text fill="#FFFFFFFF" x="0.0" y="134">end def update_at_risk update!(at_risk: self.achieved_at_risk) end def master_by_something(m</text>
	<text fill="#D9787DFF" x="55.199999999999996" y="134">_</text>
	<text fill="#FFFFFFFF" x="55.8" y="134">by, m_at = Time.current, nu</text>
	<text fill="#C83C43FF" x="72.0" y="134">m</text>
	<text fill="#BC1019FF" x="72.6" y="134"> = 1, den = </text>
	<text fill="#F2D2D4FF" x="79.8" y="134">1</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="134">) self.mastered_by = </text>
	<text fill="#FBF0F1FF" x="93.0" y="134">m</text>
	<text fill="#C01E27FF" x="93.6" y="134">_</text>
	<text fill="#BC1019FF" x="94.2" y="134">by self.m</text>
	<text fill="#F7E1E2FF" x="99.6" y="134">a</text>
	<text fill="#FFFFFFFF" x="100.2" y="134">stered_at = m_at self.aggregate_score_num = num self.aggregate_scor</text>
	<text fill="#D9787DFF" x="140.4" y="134">e</text>
	<text fill="#BC1019FF" x="141.0" y="134">_den = de</text>
	<text fill="#CD4B52FF" x="146.4" y="134">n</text>
	<text fill="#FFFFFFFF" x="147.0" y="134"> self.master! end </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="134">def readable_</text>
	<text fill="#CD4B52FF" x="165.6" y="134">s</text>
	<text fill="#FFFFFFFF" x="166.2" y="134">tate READABLE_STATE_NAMES[state] || state end def score score_r end def score_r aggregate_score end def score_f (aggregate_</text>
	<text fill="#FFFFFFFF" x="0.0" y="135">score * 100).to_f.round(2) end def aggregate_score Rational(self.aggregate_score_num, self.a</text>
	<text fill="#E2969AFF" x="55.199999999999996" y="135">g</text>
	<text fill="#FFFFFFFF" x="55.8" y="135">gregate_score_den) end def</text>
	<text fill="#FBF0F1FF" x="71.39999999999999" y="135"> </text>
	<text fill="#BC1019FF" x="72.0" y="135">percentage_s</text>
	<text fill="#C01E27FF" x="79.2" y="135">c</text>
	<text fill="#FFFFFFFF" x="79.8" y="135">ore Rational(self.perc</text>
	<text fill="#D5696FFF" x="93.0" y="135">e</text>
	<text fill="#BC1019FF" x="93.6" y="135">ntage_sco</text>
	<text fill="#DD878CFF" x="99.0" y="135">r</text>
	<text fill="#FFFFFFFF" x="99.6" y="135">e_num, self.percentage_score_den) end def progress Rational(self.pro</text>
	<text fill="#C83C43FF" x="140.4" y="135">g</text>
	<text fill="#BC1019FF" x="141.0" y="135">ress_num,</text>
	<text fill="#E2969AFF" x="146.4" y="135"> </text>
	<text fill="#FFFFFFFF" x="147.0" y="135">self.progress_den)</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="135"> end def user</text>
	<text fill="#CD4B52FF" x="165.6" y="135">_</text>
	<text fill="#FFFFFFFF" x="166.2" y="135">activities UserActivity.joins(learning_activity: :learning_activity_learning_objectives) .where(student_id: student_id) .wh</text>
	<text fill="#FFFFFFFF" x="0.0" y="136">ere(learning_activity_learning_objectives: { learning_objective_id: learning_objective_id })</text>
	<text fill="#E2969AFF" x="55.199999999999996" y="136"> </text>
	<text fill="#FFFFFFFF" x="55.8" y="136">end def weighted_user_acti</text>
	<text fill="#EAB4B7FF" x="71.39999999999999" y="136">v</text>
	<text fill="#BC1019FF" x="72.0" y="136">ities user_a</text>
	<text fill="#D15A60FF" x="79.2" y="136">c</text>
	<text fill="#FFFFFFFF" x="79.8" y="136">tivities.merge( Learn</text>
	<text fill="#F7E1E2FF" x="92.39999999999999" y="136">i</text>
	<text fill="#BC1019FF" x="93.0" y="136">ngActivit</text>
	<text fill="#C01E27FF" x="98.39999999999999" y="136">y</text>
	<text fill="#FBF0F1FF" x="99.0" y="136">L</text>
	<text fill="#FFFFFFFF" x="99.6" y="136">earningObjective.weighted ) end def self.for_user_and_cohort(user_i</text>
	<text fill="#F7E1E2FF" x="139.79999999999998" y="136">d</text>
	<text fill="#BC1019FF" x="140.4" y="136">, cohort_i</text>
	<text fill="#F2D2D4FF" x="146.4" y="136">d</text>
	<text fill="#FFFFFFFF" x="147.0" y="136">) joins(:learning_</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="136">objective) .w</text>
	<text fill="#DD878CFF" x="165.6" y="136">h</text>
	<text fill="#FFFFFFFF" x="166.2" y="136">ere(student_id: user_id)</text>
	<text fill="#F2D2D4FF" x="180.6" y="136"> </text>
	<text fill="#FFFFFFFF" x="181.2" y="136">.where(id: LearningPlanContext.select(:user_objective_id) .where(cohort_id: cohort_id)) end def se</text>
	<text fill="#FFFFFFFF" x="0.0" y="137">lf.for_user_and_cohort_and_competency(user_id, cohort_id, competency_id) for_user_and_cohort</text>
	<text fill="#EEC3C5FF" x="55.199999999999996" y="137">(</text>
	<text fill="#FFFFFFFF" x="55.8" y="137">user_id, cohort_id).where(</text>
	<text fill="#D9787DFF" x="71.39999999999999" y="137">l</text>
	<text fill="#BC1019FF" x="72.0" y="137">earning_obje</text>
	<text fill="#E2969AFF" x="79.2" y="137">c</text>
	<text fill="#FFFFFFFF" x="79.8" y="137">tive_id: CompetencyOb</text>
	<text fill="#D5696FFF" x="92.39999999999999" y="137">j</text>
	<text fill="#BC1019FF" x="93.0" y="137">ective.se</text>
	<text fill="#DD878CFF" x="98.39999999999999" y="137">l</text>
	<text fill="#FFFFFFFF" x="99.0" y="137">ect(:learning_objective_id) .joins(competency: :user_competencies) .</text>
	<text fill="#E2969AFF" x="139.79999999999998" y="137">w</text>
	<text fill="#BC1019FF" x="140.4" y="137">here(user</text>
	<text fill="#C42D35FF" x="145.79999999999998" y="137">_</text>
	<text fill="#FFFFFFFF" x="146.4" y="137">competencies: {stu</text>
	<text fill="#F7E1E2FF" x="157.2" y="137">d</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="137">ent_id: user_</text>
	<text fill="#DD878CFF" x="165.6" y="137">i</text>
	<text fill="#FFFFFFFF" x="166.2" y="137">d}) .where(competency_i</text>
	<text fill="#FBF0F1FF" x="180.0" y="137">d</text>
	<text fill="#EEC3C5FF" x="180.6" y="137">:</text>
	<text fill="#FFFFFFFF" x="181.2" y="137"> competency_id)) end def self.for_user_and_competency(user_id, competency_id) UserObjective.joins(</text>
	<text fill="#FFFFFFFF" x="0.0" y="138">learning_objective: :competency_objectives) .where(student_id: user_id) .where(competency_objectives: { competency_id: </text>
	<text fill="#C83C43FF" x="71.39999999999999" y="138">c</text>
	<text fill="#BC1019FF" x="72.0" y="138">ompetency_id</text>
	<text fill="#EEC3C5FF" x="79.2" y="138"> </text>
	<text fill="#FFFFFFFF" x="79.8" y="138">}) end # This does n</text>
	<text fill="#F7E1E2FF" x="91.8" y="138">o</text>
	<text fill="#BC1019FF" x="92.39999999999999" y="138">t use the</text>
	<text fill="#C01E27FF" x="97.8" y="138"> </text>
	<text fill="#FBF0F1FF" x="98.39999999999999" y="138">c</text>
	<text fill="#FFFFFFFF" x="99.0" y="138">ached values to ensure we always get the correct result def achieved</text>
	<text fill="#C83C43FF" x="139.79999999999998" y="138">_</text>
	<text fill="#BC1019FF" x="140.4" y="138">mastery !</text>
	<text fill="#D9787DFF" x="145.79999999999998" y="138">s</text>
	<text fill="#FFFFFFFF" x="146.4" y="138">elf.mastered_by.ni</text>
	<text fill="#EEC3C5FF" x="157.2" y="138">l</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="138">? || compare_</text>
	<text fill="#EAB4B7FF" x="165.6" y="138">s</text>
	<text fill="#FFFFFFFF" x="166.2" y="138">core(:&gt;=) end def not_y</text>
	<text fill="#EEC3C5FF" x="180.0" y="138">et</text>
	<text fill="#FFFFFFFF" x="181.2" y="138">_mastered? !achieved_mastery end def achieved_at_risk weighted_user_activities.at_risk.exists? end</text>
	<text fill="#FFFFFFFF" x="0.0" y="139"> def achieved_failure # Any activity with weight &gt; 0 is in failed state. compare_score(:&lt;) &amp;&amp; weighted_user_activities.</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="139">failed.exists</text>
	<text fill="#FFFFFFFF" x="79.2" y="139">? end def achieved_pr</text>
	<text fill="#D5696FFF" x="91.8" y="139">o</text>
	<text fill="#BC1019FF" x="92.39999999999999" y="139">gress # A</text>
	<text fill="#DD878CFF" x="97.8" y="139">n</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="139">y activity is in non-initial state. # Could possibly look at 'self.a</text>
	<text fill="#F7E1E2FF" x="139.2" y="139">g</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="139">gregate_sc</text>
	<text fill="#F2D2D4FF" x="145.79999999999998" y="139">o</text>
	<text fill="#FFFFFFFF" x="146.4" y="139">re &gt; 0' compare_sc</text>
	<text fill="#EEC3C5FF" x="157.2" y="139">o</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="139">re(:&lt;) &amp;&amp; wei</text>
	<text fill="#EEC3C5FF" x="165.6" y="139">g</text>
	<text fill="#FFFFFFFF" x="166.2" y="139">hted_user_activities.st</text>
	<text fill="#EEC3C5FF" x="180.0" y="139">ar</text>
	<text fill="#FFFFFFFF" x="181.2" y="139">ted.exists? end def percolate self.percolate_scores_to_competencies self.percolate_scores_to_cohor</text>
	<text fill="#FFFFFFFF" x="0.0" y="140">ts self.process_pre_post_assessment end def percolate_scores_to_cohorts self.cohort_users_for_objective_and_student.ea</text>
	<text fill="#EEC3C5FF" x="70.8" y="140">c</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="140">h do |cu| cu</text>
	<text fill="#C83C43FF" x="78.6" y="140">.</text>
	<text fill="#FFFFFFFF" x="79.2" y="140">update_score_from_ob</text>
	<text fill="#FBF0F1FF" x="91.2" y="140">j</text>
	<text fill="#C01E27FF" x="91.8" y="140">e</text>
	<text fill="#BC1019FF" x="92.39999999999999" y="140">ctives Co</text>
	<text fill="#F7E1E2FF" x="97.8" y="140">h</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="140">ortUserWorkers::ObjectiveCounters.perform_async(cu.id) end true end </text>
	<text fill="#D9787DFF" x="139.2" y="140">d</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="140">ef cohort</text>
	<text fill="#C42D35FF" x="145.2" y="140">_</text>
	<text fill="#FFFFFFFF" x="145.79999999999998" y="140">users_for_objective</text>
	<text fill="#E6A5A8FF" x="157.2" y="140">_</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="140">and_student C</text>
	<text fill="#FBF0F1FF" x="165.6" y="140">o</text>
	<text fill="#FFFFFFFF" x="166.2" y="140">hortUser.joins(cohort: </text>
	<text fill="#DD878CFF" x="180.0" y="140">:</text>
	<text fill="#F7E1E2FF" x="180.6" y="140">l</text>
	<text fill="#FFFFFFFF" x="181.2" y="140">earning_plan_contexts) .where(learning_plan_contexts: { user_id: self.student_id, user_objective_i</text>
	<text fill="#FFFFFFFF" x="0.0" y="141">d: self.id }) .distinct end def user_competencies_for_objective_and_student UserCompetency.joins(competency: :competen</text>
	<text fill="#E2969AFF" x="70.8" y="141">c</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="141">y_objectives</text>
	<text fill="#D15A60FF" x="78.6" y="141">)</text>
	<text fill="#FFFFFFFF" x="79.2" y="141"> .where(student_id: </text>
	<text fill="#E6A5A8FF" x="91.2" y="141">s</text>
	<text fill="#BC1019FF" x="91.8" y="141">elf.stude</text>
	<text fill="#D5696FFF" x="97.2" y="141">n</text>
	<text fill="#FFFFFFFF" x="97.8" y="141">t_id) .where(competency_objectives: {learning_objective_id: self.lear</text>
	<text fill="#C01E27FF" x="139.2" y="141">n</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="141">ing_objec</text>
	<text fill="#E2969AFF" x="145.2" y="141">t</text>
	<text fill="#FFFFFFFF" x="145.79999999999998" y="141">ive_id}) end def pe</text>
	<text fill="#DD878CFF" x="157.2" y="141">r</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="141">colate_score</text>
	<text fill="#C01E27FF" x="165.0" y="141">s</text>
	<text fill="#FFFFFFFF" x="165.6" y="141">_to_competencies self.us</text>
	<text fill="#D9787DFF" x="180.0" y="141">e</text>
	<text fill="#FFFFFFFF" x="180.6" y="141">r_competencies_for_objective_and_student.each do |uc| uc.update_state_and_time_from_objectives end </text>
	<text fill="#FFFFFFFF" x="0.0" y="142">true end def process_pre_post_assessment pre_post_assessments = self.curriculums_learning_objectives.select { |clo| cl</text>
	<text fill="#D9787DFF" x="70.8" y="142">o</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="142">.first? || c</text>
	<text fill="#DD878CFF" x="78.6" y="142">l</text>
	<text fill="#FFFFFFFF" x="79.2" y="142">o.last? } # Save our</text>
	<text fill="#C83C43FF" x="91.2" y="142">s</text>
	<text fill="#BC1019FF" x="91.8" y="142">elves som</text>
	<text fill="#EAB4B7FF" x="97.2" y="142">e</text>
	<text fill="#FFFFFFFF" x="97.8" y="142"> work if this isn't an AO - no need to look through cohorts. Also, m</text>
	<text fill="#E6A5A8FF" x="138.6" y="142">a</text>
	<text fill="#BC1019FF" x="139.2" y="142">ke sure to</text>
	<text fill="#FBF0F1FF" x="145.2" y="142"> </text>
	<text fill="#FFFFFFFF" x="145.79999999999998" y="142">handle case where t</text>
	<text fill="#D15A60FF" x="157.2" y="142">h</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="142">ere is a pre</text>
	<text fill="#CD4B52FF" x="165.0" y="142"> </text>
	<text fill="#FFFFFFFF" x="165.6" y="142">and a post assessment if</text>
	<text fill="#CD4B52FF" x="180.0" y="142"> </text>
	<text fill="#FFFFFFFF" x="180.6" y="142">self.learning_objective.is_assessment? &amp;&amp; self.mastered? &amp;&amp; (self.mastered_by.nil? || self.mastered</text>
	<text fill="#FFFFFFFF" x="0.0" y="143">_by == self || pre_post_assessments.map(&amp;:learning_objective_id).include?(self.mastered_by_id)) # If we are first or l</text>
	<text fill="#CD4B52FF" x="70.8" y="143">a</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="143">st in a curr</text>
	<text fill="#E6A5A8FF" x="78.6" y="143">i</text>
	<text fill="#FFFFFFFF" x="79.2" y="143">culum, then we are </text>
	<text fill="#F7E1E2FF" x="90.6" y="143">a</text>
	<text fill="#BC1019FF" x="91.2" y="143"> pre or p</text>
	<text fill="#C42D35FF" x="96.6" y="143">o</text>
	<text fill="#FFFFFFFF" x="97.2" y="143">st assessment. pre_post_assessments.each do |clo| los = clo.curriculu</text>
	<text fill="#C42D35FF" x="138.6" y="143">m</text>
	<text fill="#BC1019FF" x="139.2" y="143">.ordered_</text>
	<text fill="#D5696FFF" x="144.6" y="143">o</text>
	<text fill="#FFFFFFFF" x="145.2" y="143">bjective_list.reject</text>
	<text fill="#C83C43FF" x="157.2" y="143">{</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="143">|lo| lo.id =</text>
	<text fill="#D9787DFF" x="165.0" y="143">=</text>
	<text fill="#FFFFFFFF" x="165.6" y="143"> self.learning_objective</text>
	<text fill="#C42D35FF" x="180.0" y="143">_</text>
	<text fill="#FFFFFFFF" x="180.6" y="143">id} los.each do |lo| uo = UserObjective.where(learning_objective: lo, student: self.student).first!</text>
	<text fill="#FFFFFFFF" x="0.0" y="144"> uo.master_by_something(self, self.mastered_at, self.aggregate_score_num, self.aggregate_score_den) unless uo.mastered</text>
	<text fill="#C01E27FF" x="70.8" y="144">?</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="144"> end end end</text>
	<text fill="#EEC3C5FF" x="78.6" y="144"> </text>
	<text fill="#FFFFFFFF" x="79.2" y="144">true end def la_ids</text>
	<text fill="#D9787DFF" x="90.6" y="144"> </text>
	<text fill="#BC1019FF" x="91.2" y="144">self.lear</text>
	<text fill="#D9787DFF" x="96.6" y="144">n</text>
	<text fill="#FFFFFFFF" x="97.2" y="144">ing_objective.learning_activity_learning_objectives.where("weight &gt; </text>
	<text fill="#E6A5A8FF" x="138.0" y="144">0</text>
	<text fill="#BC1019FF" x="138.6" y="144">").pluck(:</text>
	<text fill="#F7E1E2FF" x="144.6" y="144">l</text>
	<text fill="#FFFFFFFF" x="145.2" y="144">earning_activity_id)</text>
	<text fill="#BC1019FF" x="157.2" y="144"> end def noti</text>
	<text fill="#E6A5A8FF" x="165.0" y="144">f</text>
	<text fill="#FFFFFFFF" x="165.6" y="144">icable_subject learning</text>
	<text fill="#F7E1E2FF" x="179.4" y="144">_</text>
	<text fill="#CD4B52FF" x="180.0" y="144">o</text>
	<text fill="#FFFFFFFF" x="180.6" y="144">bjective end def mastered_performance activities_performance.performance.select { |ua| ua.state == </text>
	<text fill="#FFFFFFFF" x="0.0" y="145">'mastered' } end def mastered_performance_order_by_mastered_at mastered_performance.sort { |a,b| b.act_mastered_at &lt;=&gt;</text>
	<text fill="#BC1019FF" x="70.8" y="145"> a.act_master</text>
	<text fill="#EEC3C5FF" x="78.6" y="145">e</text>
	<text fill="#FFFFFFFF" x="79.2" y="145">d_at } end def acti</text>
	<text fill="#C83C43FF" x="90.6" y="145">v</text>
	<text fill="#BC1019FF" x="91.2" y="145">ities_per</text>
	<text fill="#F2D2D4FF" x="96.6" y="145">f</text>
	<text fill="#FFFFFFFF" x="97.2" y="145">ormance if @activities_performance.nil? @activities_performance = in</text>
	<text fill="#C42D35FF" x="138.0" y="145">i</text>
	<text fill="#BC1019FF" x="138.6" y="145">tialize_a</text>
	<text fill="#D5696FFF" x="144.0" y="145">c</text>
	<text fill="#FFFFFFFF" x="144.6" y="145">tivity_performance s</text>
	<text fill="#EEC3C5FF" x="156.6" y="145">e</text>
	<text fill="#BC1019FF" x="157.2" y="145">t_performance</text>
	<text fill="#F2D2D4FF" x="165.0" y="145"> </text>
	<text fill="#FFFFFFFF" x="165.6" y="145">calculate_progress end </text>
	<text fill="#EAB4B7FF" x="179.4" y="145">@</text>
	<text fill="#D15A60FF" x="180.0" y="145">a</text>
	<text fill="#FFFFFFFF" x="180.6" y="145">ctivities_performance end def mastery_score Rational(self.learning_objective.mastery_score, 100) en</text>
	<text fill="#FFFFFFFF" x="0.0" y="146">d def compare_score(symbol) activities_performance.act_aggregate_score.send(symbol, self.mastery_score) end def weigh</text>
	<text fill="#F7E1E2FF" x="70.2" y="146">t</text>
	<text fill="#BC1019FF" x="70.8" y="146">s_of_learning</text>
	<text fill="#FFFFFFFF" x="78.6" y="146">_objectives(*curric</text>
	<text fill="#F7E1E2FF" x="90.0" y="146">u</text>
	<text fill="#BC1019FF" x="90.6" y="146">lum_ids) </text>
	<text fill="#C01E27FF" x="96.0" y="146">o</text>
	<text fill="#FFFFFFFF" x="96.6" y="146">bjectives = curriculums_learning_objectives objectives = objectives.</text>
	<text fill="#E6A5A8FF" x="137.4" y="146">w</text>
	<text fill="#BC1019FF" x="138.0" y="146">here(curri</text>
	<text fill="#F7E1E2FF" x="144.0" y="146">c</text>
	<text fill="#FFFFFFFF" x="144.6" y="146">ulum_id: curriculum_</text>
	<text fill="#E2969AFF" x="156.6" y="146">i</text>
	<text fill="#BC1019FF" x="157.2" y="146">ds.flatten) </text>
	<text fill="#C01E27FF" x="164.4" y="146">i</text>
	<text fill="#FFFFFFFF" x="165.0" y="146">f curriculum_ids.size &gt; </text>
	<text fill="#DD878CFF" x="179.4" y="146">0 </text>
	<text fill="#FFFFFFFF" x="180.6" y="146">objectives.map(&amp;:weight) end def reset_to_initial_state! initial_attrs = {state:                "av</text>
	<text fill="#FFFFFFFF" x="0.0" y="147">ailable", mastered_by_id:        nil, mastered_by_type:      nil, progress_num:          0, progress_den:          1,</text>
	<text fill="#EEC3C5FF" x="70.2" y="147"> </text>
	<text fill="#BC1019FF" x="70.8" y="147">aggregate_sco</text>
	<text fill="#FFFFFFFF" x="78.6" y="147">re_num:   0, aggreg</text>
	<text fill="#E2969AFF" x="90.0" y="147">a</text>
	<text fill="#BC1019FF" x="90.6" y="147">te_score_</text>
	<text fill="#D5696FFF" x="96.0" y="147">d</text>
	<text fill="#FFFFFFFF" x="96.6" y="147">en:   1, percentage_score_num:  0, percentage_score_den:  1, master</text>
	<text fill="#FBF0F1FF" x="136.79999999999998" y="147">e</text>
	<text fill="#C42D35FF" x="137.4" y="147">d</text>
	<text fill="#BC1019FF" x="138.0" y="147">_activity</text>
	<text fill="#D5696FFF" x="143.4" y="147">_</text>
	<text fill="#FFFFFFFF" x="144.0" y="147">num: 0, mastered_at: </text>
	<text fill="#D15A60FF" x="156.6" y="147"> </text>
	<text fill="#BC1019FF" x="157.2" y="147">         nil</text>
	<text fill="#D15A60FF" x="164.4" y="147">,</text>
	<text fill="#FFFFFFFF" x="165.0" y="147"> started_at:            </text>
	<text fill="#CD4B52FF" x="179.4" y="147">n</text>
	<text fill="#E2969AFF" x="180.0" y="147">i</text>
	<text fill="#FFFFFFFF" x="180.6" y="147">l, at_risk:               nil, duration_seconds:      0} self.update_attributes!(initial_attrs) end</text>
	<text fill="#FFFFFFFF" x="0.0" y="148"> private def set_performance # How did we do for activities uas = UserActivity.for_user_objective(self).pluck(:calcul</text>
	<text fill="#EEC3C5FF" x="70.2" y="148">a</text>
	<text fill="#BC1019FF" x="70.8" y="148">ted_score_num</text>
	<text fill="#FFFFFFFF" x="78.6" y="148">, :calculated_score</text>
	<text fill="#D15A60FF" x="90.0" y="148">_</text>
	<text fill="#BC1019FF" x="90.6" y="148">den, :sta</text>
	<text fill="#E6A5A8FF" x="96.0" y="148">t</text>
	<text fill="#FFFFFFFF" x="96.6" y="148">e, :weight, :started_at, :mastered_at) uas.each do |perf| get_perfo</text>
	<text fill="#DD878CFF" x="136.79999999999998" y="148">r</text>
	<text fill="#BC1019FF" x="137.4" y="148">mance &lt;&lt; </text>
	<text fill="#C01E27FF" x="142.79999999999998" y="148">P</text>
	<text fill="#F7E1E2FF" x="143.4" y="148">e</text>
	<text fill="#FFFFFFFF" x="144.0" y="148">rformanceNumbers.new(</text>
	<text fill="#C01E27FF" x="156.6" y="148">*</text>
	<text fill="#BC1019FF" x="157.2" y="148">perf) end en</text>
	<text fill="#E2969AFF" x="164.4" y="148">d</text>
	<text fill="#FFFFFFFF" x="165.0" y="148"> def get_performance act</text>
	<text fill="#BC1019FF" x="179.4" y="148">i</text>
	<text fill="#EEC3C5FF" x="180.0" y="148">v</text>
	<text fill="#FFFFFFFF" x="180.6" y="148">ities_performance.performance end def calculate_progress if total_weight == 0 activities_performanc</text>
	<text fill="#FFFFFFFF" x="0.0" y="149">e.act_progress = Rational(0, 1) activities_performance.act_aggregate_score = Rational(0, 1) else activities_performan</text>
	<text fill="#DD878CFF" x="70.2" y="149">c</text>
	<text fill="#BC1019FF" x="70.8" y="149">e.act_progres</text>
	<text fill="#FFFFFFFF" x="78.6" y="149">s = calculate_act_p</text>
	<text fill="#C01E27FF" x="90.0" y="149">r</text>
	<text fill="#BC1019FF" x="90.6" y="149">ogress ac</text>
	<text fill="#F7E1E2FF" x="96.0" y="149">t</text>
	<text fill="#FFFFFFFF" x="96.6" y="149">ivities_performance.act_aggregate_score = calculate_act_aggregate_</text>
	<text fill="#F2D2D4FF" x="136.2" y="149">s</text>
	<text fill="#BC1019FF" x="136.79999999999998" y="149">core end e</text>
	<text fill="#DD878CFF" x="142.79999999999998" y="149">n</text>
	<text fill="#FFFFFFFF" x="143.4" y="149">d def calculate_act_p</text>
	<text fill="#F2D2D4FF" x="156.0" y="149">r</text>
	<text fill="#BC1019FF" x="156.6" y="149">ogress master</text>
	<text fill="#F2D2D4FF" x="164.4" y="149">e</text>
	<text fill="#FFFFFFFF" x="165.0" y="149">d_performance.inject(0.</text>
	<text fill="#EAB4B7FF" x="178.79999999999998" y="149">t</text>
	<text fill="#BC1019FF" x="179.4" y="149">o</text>
	<text fill="#FBF0F1FF" x="180.0" y="149">_</text>
	<text fill="#FFFFFFFF" x="180.6" y="149">r) do |sum, ua| activities_performance.mastered_count += 1 sum + Rational(ua.weight || 0, total_wei</text>
	<text fill="#FFFFFFFF" x="0.0" y="150">ght) end end def calculate_act_aggregate_score get_performance.inject(0.to_r) do |sum, ua| sum + Rational(ua.calculat</text>
	<text fill="#DD878CFF" x="70.2" y="150">e</text>
	<text fill="#BC1019FF" x="70.8" y="150">d_score_num, </text>
	<text fill="#FFFFFFFF" x="78.6" y="150">ua.calculated_scor</text>
	<text fill="#F7E1E2FF" x="89.39999999999999" y="150">e</text>
	<text fill="#BC1019FF" x="90.0" y="150">_den) * R</text>
	<text fill="#C01E27FF" x="95.39999999999999" y="150">a</text>
	<text fill="#FFFFFFFF" x="96.0" y="150">tional(ua.weight || 0, total_weight) end end def total_weight # Tot</text>
	<text fill="#C83C43FF" x="136.2" y="150">a</text>
	<text fill="#BC1019FF" x="136.79999999999998" y="150">l weight </text>
	<text fill="#C42D35FF" x="142.2" y="150">o</text>
	<text fill="#FFFFFFFF" x="142.79999999999998" y="150">f all the activities g</text>
	<text fill="#DD878CFF" x="156.0" y="150">e</text>
	<text fill="#BC1019FF" x="156.6" y="150">t_performanc</text>
	<text fill="#C42D35FF" x="163.79999999999998" y="150">e</text>
	<text fill="#FFFFFFFF" x="164.4" y="150">.inject(0) { |sum, ua| s</text>
	<text fill="#D9787DFF" x="178.79999999999998" y="150">u</text>
	<text fill="#C42D35FF" x="179.4" y="150">m</text>
	<text fill="#FFFFFFFF" x="180.0" y="150"> + ua.weight } end def initialize_activity_performance UserActivitiesPerformance.new(0, [], Rational</text>
	<text fill="#FFFFFFFF" x="0.0" y="151">(0, 1), Rational(0, 1)) end end # == Schema Information # # Table name: learning_objectives # #  id                  </text>
	<text fill="#DD878CFF" x="70.2" y="151"> </text>
	<text fill="#BC1019FF" x="70.8" y="151">:integer     </text>
	<text fill="#FFFFFFFF" x="78.6" y="151">     not null, pri</text>
	<text fill="#E6A5A8FF" x="89.39999999999999" y="151">m</text>
	<text fill="#BC1019FF" x="90.0" y="151">ary key #</text>
	<text fill="#CD4B52FF" x="95.39999999999999" y="151"> </text>
	<text fill="#FFFFFFFF" x="96.0" y="151"> identifier           :string(255)      not null #  description   </text>
	<text fill="#DD878CFF" x="135.6" y="151"> </text>
	<text fill="#BC1019FF" x="136.2" y="151">      :tex</text>
	<text fill="#EEC3C5FF" x="142.2" y="151">t</text>
	<text fill="#FFFFFFFF" x="142.79999999999998" y="151"> #  ancestor_id       </text>
	<text fill="#C83C43FF" x="156.0" y="151"> </text>
	<text fill="#BC1019FF" x="156.6" y="151">  :integer #</text>
	<text fill="#D9787DFF" x="163.79999999999998" y="151"> </text>
	<text fill="#FFFFFFFF" x="164.4" y="151"> published            :b</text>
	<text fill="#C42D35FF" x="178.79999999999998" y="151">o</text>
	<text fill="#D15A60FF" x="179.4" y="151">o</text>
	<text fill="#FFFFFFFF" x="180.0" y="151">lean          default(FALSE), not null #  lock_version         :integer          default(0), not nul</text>
	<text fill="#FFFFFFFF" x="0.0" y="152">l #  created_at           :datetime         not null #  updated_at           :datetime         not null #  version_nu</text>
	<text fill="#DD878CFF" x="70.2" y="152">m</text>
	<text fill="#BC1019FF" x="70.8" y="152">ber       :in</text>
	<text fill="#FFFFFFFF" x="78.6" y="152">teger          def</text>
	<text fill="#DD878CFF" x="89.39999999999999" y="152">a</text>
	<text fill="#BC1019FF" x="90.0" y="152">ult(1), n</text>
	<text fill="#DD878CFF" x="95.39999999999999" y="152">o</text>
	<text fill="#FFFFFFFF" x="96.0" y="152">t null #  type                 :string(255)      default("Learnin</text>
	<text fill="#F2D2D4FF" x="135.0" y="152">g</text>
	<text fill="#BC1019FF" x="135.6" y="152">Objective"</text>
	<text fill="#D9787DFF" x="141.6" y="152">)</text>
	<text fill="#FFFFFFFF" x="142.2" y="152">, not null #  owner_in</text>
	<text fill="#F7E1E2FF" x="155.4" y="152">s</text>
	<text fill="#BC1019FF" x="156.0" y="152">titution_id :</text>
	<text fill="#F2D2D4FF" x="163.79999999999998" y="152">i</text>
	<text fill="#FFFFFFFF" x="164.4" y="152">nteger          not nul</text>
	<text fill="#F2D2D4FF" x="178.2" y="152">l</text>
	<text fill="#BC1019FF" x="178.79999999999998" y="152"> </text>
	<text fill="#DD878CFF" x="179.4" y="152">#</text>
	<text fill="#FFFFFFFF" x="180.0" y="152">  mastery_score        :integer          default(80), not null # class LearningObjective &lt; ActiveRec</text>
	<text fill="#FFFFFFFF" x="0.0" y="153">ord::Base include Versioned include InstitutionSecured OBJECTIVE_TYPES = %w(LearningObjective AssessmentObjective) DE</text>
	<text fill="#DD878CFF" x="70.2" y="153">F</text>
	<text fill="#BC1019FF" x="70.8" y="153">AULT_MASTERY_</text>
	<text fill="#FFFFFFFF" x="78.6" y="153">SCORE = 80 attr_re</text>
	<text fill="#CD4B52FF" x="89.39999999999999" y="153">a</text>
	<text fill="#BC1019FF" x="90.0" y="153">donly :ty</text>
	<text fill="#E6A5A8FF" x="95.39999999999999" y="153">p</text>
	<text fill="#FFFFFFFF" x="96.0" y="153">e validates_inclusion_of :type, in: OBJECTIVE_TYPES has_many :le</text>
	<text fill="#FBF0F1FF" x="134.4" y="153">a</text>
	<text fill="#C42D35FF" x="135.0" y="153">r</text>
	<text fill="#BC1019FF" x="135.6" y="153">ning_acti</text>
	<text fill="#C83C43FF" x="141.0" y="153">v</text>
	<text fill="#FFFFFFFF" x="141.6" y="153">ity_learning_objectives</text>
	<text fill="#E2969AFF" x="155.4" y="153">,</text>
	<text fill="#BC1019FF" x="156.0" y="153"> -&gt; { order(</text>
	<text fill="#C42D35FF" x="163.2" y="153">:</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="153">position) }, dependent: </text>
	<text fill="#D9787DFF" x="178.2" y="153">:</text>
	<text fill="#BC1019FF" x="178.79999999999998" y="153">d</text>
	<text fill="#EEC3C5FF" x="179.4" y="153">e</text>
	<text fill="#FFFFFFFF" x="180.0" y="153">stroy, inverse_of: :learning_objective has_many :learning_activities, through: :learning_activity_le</text>
	<text fill="#FFFFFFFF" x="0.0" y="154">arning_objectives has_many :competency_objectives, dependent: :destroy, inverse_of: :learning_objective has_many :com</text>
	<text fill="#DD878CFF" x="70.2" y="154">p</text>
	<text fill="#BC1019FF" x="70.8" y="154">etencies, thr</text>
	<text fill="#FBF0F1FF" x="78.6" y="154">o</text>
	<text fill="#FFFFFFFF" x="79.2" y="154">ugh: :competency_</text>
	<text fill="#C42D35FF" x="89.39999999999999" y="154">o</text>
	<text fill="#BC1019FF" x="90.0" y="154">bjectives</text>
	<text fill="#EEC3C5FF" x="95.39999999999999" y="154"> </text>
	<text fill="#FFFFFFFF" x="96.0" y="154">has_many :user_objectives, inverse_of: :learning_objective, depe</text>
	<text fill="#CD4B52FF" x="134.4" y="154">n</text>
	<text fill="#BC1019FF" x="135.0" y="154">dent: :de</text>
	<text fill="#C01E27FF" x="140.4" y="154">s</text>
	<text fill="#F7E1E2FF" x="141.0" y="154">t</text>
	<text fill="#FFFFFFFF" x="141.6" y="154">roy has_many :users, -&gt;</text>
	<text fill="#C42D35FF" x="155.4" y="154"> </text>
	<text fill="#BC1019FF" x="156.0" y="154">{ includes :</text>
	<text fill="#D9787DFF" x="163.2" y="154">u</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="154">ser_objectives }, throug</text>
	<text fill="#C42D35FF" x="178.2" y="154">h</text>
	<text fill="#BC1019FF" x="178.79999999999998" y="154">:</text>
	<text fill="#FFFFFFFF" x="179.4" y="154"> :user_competencies has_many :curriculums_learning_objectives, dependent: :destroy, inverse_of: :lear</text>
	<text fill="#FFFFFFFF" x="0.0" y="155">ning_objective has_many :curriculums, through: :curriculums_learning_objectives has_many :learning_plan_contexts, inv</text>
	<text fill="#DD878CFF" x="70.2" y="155">e</text>
	<text fill="#BC1019FF" x="70.8" y="155">rse_of: :lear</text>
	<text fill="#EEC3C5FF" x="78.6" y="155">n</text>
	<text fill="#FFFFFFFF" x="79.2" y="155">ing_objective # R</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="155">egular exp</text>
	<text fill="#F7E1E2FF" x="95.39999999999999" y="155">r</text>
	<text fill="#FFFFFFFF" x="96.0" y="155">essions for the various types of objectives directories we may </text>
	<text fill="#D9787DFF" x="133.79999999999998" y="155">f</text>
	<text fill="#BC1019FF" x="134.4" y="155">ind RE1 = </text>
	<text fill="#EEC3C5FF" x="140.4" y="155">/</text>
	<text fill="#FFFFFFFF" x="141.0" y="155">([K,\d])([a-zA-Z]{1,3})</text>
	<text fill="#EEC3C5FF" x="154.79999999999998" y="155">(</text>
	<text fill="#BC1019FF" x="155.4" y="155">\d{2})([a-zA-</text>
	<text fill="#F7E1E2FF" x="163.2" y="155">Z</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="155">]*)/ # 1ABC01M RE2 = /(</text>
	<text fill="#F2D2D4FF" x="177.6" y="155">[</text>
	<text fill="#BC1019FF" x="178.2" y="155">\</text>
	<text fill="#CD4B52FF" x="178.79999999999998" y="155">w</text>
	<text fill="#FFFFFFFF" x="179.4" y="155">\d ]+)-(\d{1,2})[A-Z]{0,1}/            # AB-01M scope :exclude_objectives_with_ids, -&gt;(ids){ where.no</text>
	<text fill="#FFFFFFFF" x="0.0" y="156">t(id: ids) } scope :with_ids, -&gt;(ids) {where(id: ids)} scope :order_by_competency_objective_asc, -&gt;{ references(:comp</text>
	<text fill="#DD878CFF" x="70.2" y="156">e</text>
	<text fill="#BC1019FF" x="70.8" y="156">tency_objecti</text>
	<text fill="#EEC3C5FF" x="78.6" y="156">v</text>
	<text fill="#FFFFFFFF" x="79.2" y="156">es).order("compe</text>
	<text fill="#F2D2D4FF" x="88.8" y="156">t</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="156">ency_objec</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="156">tives.created_at asc") } scope :for_curriculums, -&gt;(curr_ids) {</text>
	<text fill="#E6A5A8FF" x="133.2" y="156"> </text>
	<text fill="#BC1019FF" x="133.79999999999998" y="156">joins(:cur</text>
	<text fill="#E6A5A8FF" x="139.79999999999998" y="156">r</text>
	<text fill="#FFFFFFFF" x="140.4" y="156">iculums).where("curricul</text>
	<text fill="#D5696FFF" x="154.79999999999998" y="156">u</text>
	<text fill="#BC1019FF" x="155.4" y="156">ms.ancestry </text>
	<text fill="#C83C43FF" x="162.6" y="156">S</text>
	<text fill="#FFFFFFFF" x="163.2" y="156">IMILAR TO '(#{curr_ids.j</text>
	<text fill="#D9787DFF" x="177.6" y="156">o</text>
	<text fill="#BC1019FF" x="178.2" y="156">i</text>
	<text fill="#E2969AFF" x="178.79999999999998" y="156">n</text>
	<text fill="#FFFFFFFF" x="179.4" y="156">("|")})%' OR curriculums.id IN(#{curr_ids.join(",")})").distinct } def permitted?(user, action) allow</text>
	<text fill="#FFFFFFFF" x="0.0" y="157">ed = super &amp;&amp; case action when Right::MANAGE_ACTIVITIES # Must be draft to do these actions self.draft? else # Defaul</text>
	<text fill="#DD878CFF" x="70.2" y="157">t</text>
	<text fill="#BC1019FF" x="70.8" y="157"> is to allow.</text>
	<text fill="#DD878CFF" x="78.6" y="157"> </text>
	<text fill="#FFFFFFFF" x="79.2" y="157">Overide if you w</text>
	<text fill="#EEC3C5FF" x="88.8" y="157">a</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="157">nt differe</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="157">nt true end raise PermittedError.new("#{self.class.name}(#{sel</text>
	<text fill="#E6A5A8FF" x="132.6" y="157">f</text>
	<text fill="#BC1019FF" x="133.2" y="157">.id}): #{u</text>
	<text fill="#D5696FFF" x="139.2" y="157">s</text>
	<text fill="#FFFFFFFF" x="139.79999999999998" y="157">er.try(:username)} DENIE</text>
	<text fill="#FBF0F1FF" x="154.2" y="157">D</text>
	<text fill="#BC1019FF" x="154.79999999999998" y="157"> #{action}") </text>
	<text fill="#E6A5A8FF" x="162.6" y="157">u</text>
	<text fill="#FFFFFFFF" x="163.2" y="157">nless allowed allowed en</text>
	<text fill="#C01E27FF" x="177.6" y="157">d</text>
	<text fill="#BC1019FF" x="178.2" y="157"> </text>
	<text fill="#F2D2D4FF" x="178.79999999999998" y="157">#</text>
	<text fill="#FFFFFFFF" x="179.4" y="157"> Have to do destroy this way because Rails does the dependents before a before_destroy. # Since we wa</text>
	<text fill="#FFFFFFFF" x="0.0" y="158">nt to check for associations, we have to do it first. def destroy if user_objectives.count &gt; 0 errors.add(:base, :use</text>
	<text fill="#DD878CFF" x="70.2" y="158">r</text>
	<text fill="#BC1019FF" x="70.8" y="158">_objective_co</text>
	<text fill="#D9787DFF" x="78.6" y="158">u</text>
	<text fill="#FFFFFFFF" x="79.2" y="158">nt) false else s</text>
	<text fill="#E6A5A8FF" x="88.8" y="158">u</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="158">per end e</text>
	<text fill="#C42D35FF" x="94.8" y="158">n</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="158">d def self.version_has_many_associations [:learning_activity_</text>
	<text fill="#F2D2D4FF" x="132.0" y="158">l</text>
	<text fill="#BC1019FF" x="132.6" y="158">earning_ob</text>
	<text fill="#D5696FFF" x="138.6" y="158">j</text>
	<text fill="#FFFFFFFF" x="139.2" y="158">ectives, [:topic_relation</text>
	<text fill="#DD878CFF" x="154.2" y="158">s</text>
	<text fill="#BC1019FF" x="154.79999999999998" y="158">hips, :relat</text>
	<text fill="#C01E27FF" x="162.0" y="158">i</text>
	<text fill="#FFFFFFFF" x="162.6" y="158">onship]] end def name s </text>
	<text fill="#E6A5A8FF" x="177.0" y="158">=</text>
	<text fill="#BC1019FF" x="177.6" y="158"> </text>
	<text fill="#C42D35FF" x="178.2" y="158">"</text>
	<text fill="#FFFFFFFF" x="178.79999999999998" y="158">#{identifier} v#{version_number}" s &lt;&lt; ' (DRAFT)' if self.draft? s end # Ensure type gets sent down as</text>
	<text fill="#FFFFFFFF" x="0.0" y="159"> json def as_json(options = {}) super(options.merge(methods: :type)) end def ordered_learning_activities learning_act</text>
	<text fill="#DD878CFF" x="70.2" y="159">i</text>
	<text fill="#BC1019FF" x="70.8" y="159">vities.all.so</text>
	<text fill="#CD4B52FF" x="78.6" y="159">r</text>
	<text fill="#FFFFFFFF" x="79.2" y="159">t! do |a, b| av </text>
	<text fill="#DD878CFF" x="88.8" y="159">=</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="159"> LEARNING</text>
	<text fill="#CD4B52FF" x="94.8" y="159">_</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="159">ACTIVITY_TYPE_HASH[a.type] bv = LEARNING_ACTIVITY_TYPE_HASH[</text>
	<text fill="#F2D2D4FF" x="131.4" y="159">b</text>
	<text fill="#C01E27FF" x="132.0" y="159">.</text>
	<text fill="#BC1019FF" x="132.6" y="159">type] if </text>
	<text fill="#D5696FFF" x="138.0" y="159">a</text>
	<text fill="#FFFFFFFF" x="138.6" y="159">v &amp;&amp; bv av &lt;=&gt; bv else a.</text>
	<text fill="#FBF0F1FF" x="153.6" y="159">n</text>
	<text fill="#C01E27FF" x="154.2" y="159">a</text>
	<text fill="#BC1019FF" x="154.79999999999998" y="159">me &lt;=&gt; b.nam</text>
	<text fill="#DD878CFF" x="162.0" y="159">e</text>
	<text fill="#FFFFFFFF" x="162.6" y="159"> end end end def get_rem</text>
	<text fill="#CD4B52FF" x="177.0" y="159">a</text>
	<text fill="#BC1019FF" x="177.6" y="159">i</text>
	<text fill="#D9787DFF" x="178.2" y="159">n</text>
	<text fill="#FFFFFFFF" x="178.79999999999998" y="159">ing_activities(flow_order, index) list = [] learning_activities.each do |la| idx = flow_order.index(la</text>
	<text fill="#FFFFFFFF" x="0.0" y="160">.code) if idx &gt; index list &lt;&lt; la end end list end def create_draft! self.create_top_clone! end # Publish all the LAs </text>
	<text fill="#E2969AFF" x="70.2" y="160">a</text>
	<text fill="#BC1019FF" x="70.8" y="160">s well def pu</text>
	<text fill="#C01E27FF" x="78.6" y="160">b</text>
	<text fill="#FFFFFFFF" x="79.2" y="160">lish! super do s</text>
	<text fill="#DD878CFF" x="88.8" y="160">e</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="160">lf.learni</text>
	<text fill="#CD4B52FF" x="94.8" y="160">n</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="160">g_activities.is_draft.each { |la| la.publish! } end end def</text>
	<text fill="#F2D2D4FF" x="130.79999999999998" y="160"> </text>
	<text fill="#C01E27FF" x="131.4" y="160">g</text>
	<text fill="#BC1019FF" x="132.0" y="160">rant_inst</text>
	<text fill="#D5696FFF" x="137.4" y="160">i</text>
	<text fill="#FFFFFFFF" x="138.0" y="160">tution_access(institution_</text>
	<text fill="#E2969AFF" x="153.6" y="160">i</text>
	<text fill="#BC1019FF" x="154.2" y="160">d) super do </text>
	<text fill="#C01E27FF" x="161.4" y="160">L</text>
	<text fill="#FBF0F1FF" x="162.0" y="160">e</text>
	<text fill="#FFFFFFFF" x="162.6" y="160">arningActivity.unscoped</text>
	<text fill="#F2D2D4FF" x="176.4" y="160"> </text>
	<text fill="#BC1019FF" x="177.0" y="160">do</text>
	<text fill="#F2D2D4FF" x="178.2" y="160"> </text>
	<text fill="#FFFFFFFF" x="178.79999999999998" y="160">self.learning_activities.each { |la| la.grant_institution_access(institution_id) } end end end def rem</text>
	<text fill="#FFFFFFFF" x="0.0" y="161">ove_institution_access(institution_id) super do if InstitutionAcl.subjects_granted?(Competency.name, self.competency_</text>
	<text fill="#EEC3C5FF" x="70.2" y="161">i</text>
	<text fill="#BC1019FF" x="70.8" y="161">ds, institutio</text>
	<text fill="#F2D2D4FF" x="79.2" y="161">n</text>
	<text fill="#FFFFFFFF" x="79.8" y="161">_id) || Institu</text>
	<text fill="#DD878CFF" x="88.8" y="161">t</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="161">ionAcl.su</text>
	<text fill="#CD4B52FF" x="94.8" y="161">b</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="161">jects_granted?(Curriculum.name, self.curriculum_ids, insti</text>
	<text fill="#E6A5A8FF" x="130.2" y="161">t</text>
	<text fill="#BC1019FF" x="130.79999999999998" y="161">ution_id) </text>
	<text fill="#E2969AFF" x="136.79999999999998" y="161">r</text>
	<text fill="#FFFFFFFF" x="137.4" y="161">aise PermittedError.new("U</text>
	<text fill="#FBF0F1FF" x="153.0" y="161">n</text>
	<text fill="#C42D35FF" x="153.6" y="161">a</text>
	<text fill="#BC1019FF" x="154.2" y="161">ble to remov</text>
	<text fill="#DD878CFF" x="161.4" y="161">e</text>
	<text fill="#FFFFFFFF" x="162.0" y="161"> institution access") en</text>
	<text fill="#D5696FFF" x="176.4" y="161">d</text>
	<text fill="#BC1019FF" x="177.0" y="161"> </text>
	<text fill="#C42D35FF" x="177.6" y="161">L</text>
	<text fill="#FFFFFFFF" x="178.2" y="161">earningActivity.unscoped do self.learning_activities.each { |la| la.remove_institution_access(instituti</text>
	<text fill="#FFFFFFFF" x="0.0" y="162">on_id) } end yield if block_given? end end def version_rollback fail DraftError, 'ERROR: Cannot rollback a published </text>
	<text fill="#EEC3C5FF" x="70.2" y="162">i</text>
	<text fill="#BC1019FF" x="70.8" y="162">tem' if self.p</text>
	<text fill="#E6A5A8FF" x="79.2" y="162">u</text>
	<text fill="#FFFFFFFF" x="79.8" y="162">blished? # TODO</text>
	<text fill="#D9787DFF" x="88.8" y="162">:</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="162"> What do </text>
	<text fill="#CD4B52FF" x="94.8" y="162">I</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="162"> do here? end def self.import_csv(data) # column 0 is lo </text>
	<text fill="#E6A5A8FF" x="129.6" y="162">I</text>
	<text fill="#BC1019FF" x="130.2" y="162">D # colum</text>
	<text fill="#C01E27FF" x="135.6" y="162">n</text>
	<text fill="#E6A5A8FF" x="136.2" y="162"> </text>
	<text fill="#FFFFFFFF" x="136.79999999999998" y="162">1 is competency description</text>
	<text fill="#DD878CFF" x="153.0" y="162"> </text>
	<text fill="#BC1019FF" x="153.6" y="162"># make sure </text>
	<text fill="#C01E27FF" x="160.79999999999998" y="162">f</text>
	<text fill="#FBF0F1FF" x="161.4" y="162">i</text>
	<text fill="#FFFFFFFF" x="162.0" y="162">le starts with header, </text>
	<text fill="#F7E1E2FF" x="175.79999999999998" y="162">w</text>
	<text fill="#BC1019FF" x="176.4" y="162">hi</text>
	<text fill="#D9787DFF" x="177.6" y="162">c</text>
	<text fill="#FFFFFFFF" x="178.2" y="162">h we require so we can do some row counting fail "CSV file doesn't have header row" unless /ID,Descript</text>
	<text fill="#FFFFFFFF" x="0.0" y="163">ion/ =~ data LearningObjective.transaction do CSV.parse(data, headers: true) do |row| if row[0].nil? LearningObjectiv</text>
	<text fill="#F7E1E2FF" x="70.2" y="163">e</text>
	<text fill="#BC1019FF" x="70.8" y="163">.create!(descr</text>
	<text fill="#D5696FFF" x="79.2" y="163">i</text>
	<text fill="#FFFFFFFF" x="79.8" y="163">ption: row[1]) </text>
	<text fill="#CD4B52FF" x="88.8" y="163">e</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="163">lse lo = </text>
	<text fill="#C83C43FF" x="94.8" y="163">L</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="163">earningObjective.find(row[0]) lo.update!(description: ro</text>
	<text fill="#D9787DFF" x="129.0" y="163">w</text>
	<text fill="#BC1019FF" x="129.6" y="163">[1]) end </text>
	<text fill="#C42D35FF" x="135.0" y="163">e</text>
	<text fill="#F2D2D4FF" x="135.6" y="163">n</text>
	<text fill="#FFFFFFFF" x="136.2" y="163">d end end def self.export_c</text>
	<text fill="#FBF0F1FF" x="152.4" y="163">s</text>
	<text fill="#C01E27FF" x="153.0" y="163">v</text>
	<text fill="#BC1019FF" x="153.6" y="163"> CSV.generat</text>
	<text fill="#DD878CFF" x="160.79999999999998" y="163">e</text>
	<text fill="#FFFFFFFF" x="161.4" y="163"> do |csv| csv &lt;&lt; %w(ID D</text>
	<text fill="#D5696FFF" x="175.79999999999998" y="163">e</text>
	<text fill="#BC1019FF" x="176.4" y="163">sc</text>
	<text fill="#F2D2D4FF" x="177.6" y="163">r</text>
	<text fill="#FFFFFFFF" x="178.2" y="163">iption) LearningObjective.all.each do |lo| csv &lt;&lt; [lo.id, lo.description] end end end def link_la(user,</text>
	<text fill="#FFFFFFFF" x="0.0" y="164"> la, options = {}) # No default here. If position is nil then acts_as_list will append to the list.  If it's 0, it wil</text>
	<text fill="#BC1019FF" x="70.8" y="164">l prepend.  We</text>
	<text fill="#C01E27FF" x="79.2" y="164"> </text>
	<text fill="#FFFFFFFF" x="79.8" y="164">want to append.</text>
	<text fill="#CD4B52FF" x="88.8" y="164"> </text>
	<text fill="#BC1019FF" x="89.39999999999999" y="164">user.autho</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="164">rized!(Right::MANAGE_ACTIVITIES, self) unless user.nil</text>
	<text fill="#FBF0F1FF" x="127.8" y="164">?</text>
	<text fill="#D15A60FF" x="128.4" y="164"> </text>
	<text fill="#BC1019FF" x="129.0" y="164">position </text>
	<text fill="#D15A60FF" x="134.4" y="164">=</text>
	<text fill="#FBF0F1FF" x="135.0" y="164"> </text>
	<text fill="#FFFFFFFF" x="135.6" y="164">options[:position] weight = </text>
	<text fill="#D9787DFF" x="152.4" y="164">o</text>
	<text fill="#BC1019FF" x="153.0" y="164">ptions[:weig</text>
	<text fill="#C42D35FF" x="160.2" y="164">h</text>
	<text fill="#FFFFFFFF" x="160.79999999999998" y="164">t] || 0 lalo = self.lear</text>
	<text fill="#F7E1E2FF" x="175.2" y="164">n</text>
	<text fill="#BC1019FF" x="175.79999999999998" y="164">in</text>
	<text fill="#C83C43FF" x="177.0" y="164">g</text>
	<text fill="#FFFFFFFF" x="177.6" y="164">_activity_learning_objectives.find_by(learning_activity_id: la.id) if lalo.nil? lalo = LearningActivityL</text>
	<text fill="#FFFFFFFF" x="0.0" y="165">earningObjective.create(learning_objective: self, learning_activity: la, weight: weight) else lalo.weight = weight lal</text>
	<text fill="#C01E27FF" x="70.8" y="165">o</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="165">.save! end lal</text>
	<text fill="#F2D2D4FF" x="79.8" y="165">o</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="165">.insert_at(pos</text>
	<text fill="#CD4B52FF" x="88.8" y="165">i</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="165">tion) unle</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="165">ss position.nil? lalo end def unlink_la(user, la) use</text>
	<text fill="#F2D2D4FF" x="127.19999999999999" y="165">r</text>
	<text fill="#C83C43FF" x="127.8" y="165">.</text>
	<text fill="#BC1019FF" x="128.4" y="165">authoriz</text>
	<text fill="#C01E27FF" x="133.2" y="165">e</text>
	<text fill="#E2969AFF" x="133.79999999999998" y="165">d</text>
	<text fill="#FFFFFFFF" x="134.4" y="165">!(Right::MANAGE_ACTIVITIES, s</text>
	<text fill="#F7E1E2FF" x="151.79999999999998" y="165">e</text>
	<text fill="#BC1019FF" x="152.4" y="165">lf) unless us</text>
	<text fill="#EAB4B7FF" x="160.2" y="165">e</text>
	<text fill="#FFFFFFFF" x="160.79999999999998" y="165">r.nil? lalo = learning_a</text>
	<text fill="#D5696FFF" x="175.2" y="165">c</text>
	<text fill="#BC1019FF" x="175.79999999999998" y="165">ti</text>
	<text fill="#E6A5A8FF" x="177.0" y="165">v</text>
	<text fill="#FFFFFFFF" x="177.6" y="165">ity_learning_objectives.find_by(learning_activity_id: la.id) lalo.remove_from_list lalo.destroy end def </text>
	<text fill="#FFFFFFFF" x="0.0" y="166">link_multiples_learning_activities(user, la_collection = []) return nil if la_collection.empty? la_processed = {} la_c</text>
	<text fill="#CD4B52FF" x="70.8" y="166">o</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="166">llection = la_</text>
	<text fill="#D9787DFF" x="79.8" y="166">c</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="166">ollection.sort</text>
	<text fill="#CD4B52FF" x="88.8" y="166">_</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="166">by { |k| k</text>
	<text fill="#FFFFFFFF" x="95.39999999999999" y="166">[:position] } la_collection.each do |la| la_processe</text>
	<text fill="#E6A5A8FF" x="126.6" y="166">d</text>
	<text fill="#C01E27FF" x="127.19999999999999" y="166">[</text>
	<text fill="#BC1019FF" x="127.8" y="166">la[:acti</text>
	<text fill="#CD4B52FF" x="132.6" y="166">v</text>
	<text fill="#F7E1E2FF" x="133.2" y="166">i</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="166">ty_id]] = {position: la[:posit</text>
	<text fill="#CD4B52FF" x="151.79999999999998" y="166">i</text>
	<text fill="#BC1019FF" x="152.4" y="166">on], weight:</text>
	<text fill="#D15A60FF" x="159.6" y="166"> </text>
	<text fill="#FFFFFFFF" x="160.2" y="166">la[:weight]} end learnin</text>
	<text fill="#F7E1E2FF" x="174.6" y="166">g</text>
	<text fill="#BC1019FF" x="175.2" y="166">_a</text>
	<text fill="#C01E27FF" x="176.4" y="166">c</text>
	<text fill="#FBF0F1FF" x="177.0" y="166">t</text>
	<text fill="#FFFFFFFF" x="177.6" y="166">ivities_ids = la_processed.keys learning_activities = LearningActivity.active.where(id: learning_activit</text>
	<text fill="#FFFFFFFF" x="0.0" y="167">ies_ids) learning_activities.each do |learning_activity| user.authorized!(Right::READ, learning_activity) options = { </text>
	<text fill="#D5696FFF" x="70.8" y="167">p</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="167">osition: la_pr</text>
	<text fill="#C01E27FF" x="79.8" y="167">o</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="167">cessed[learnin</text>
	<text fill="#CD4B52FF" x="88.8" y="167">g</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="167">_activity.</text>
	<text fill="#EEC3C5FF" x="95.39999999999999" y="167">i</text>
	<text fill="#FFFFFFFF" x="96.0" y="167">d][:position], weight: la_processed[learning_acti</text>
	<text fill="#FBF0F1FF" x="125.39999999999999" y="167">v</text>
	<text fill="#D15A60FF" x="126.0" y="167">i</text>
	<text fill="#BC1019FF" x="126.6" y="167">ty.id][:</text>
	<text fill="#C42D35FF" x="131.4" y="167">w</text>
	<text fill="#EAB4B7FF" x="132.0" y="167">e</text>
	<text fill="#FFFFFFFF" x="132.6" y="167">ight] || 0 } link_la(user, lear</text>
	<text fill="#E6A5A8FF" x="151.2" y="167">n</text>
	<text fill="#BC1019FF" x="151.79999999999998" y="167">ing_activity</text>
	<text fill="#C01E27FF" x="159.0" y="167">,</text>
	<text fill="#F7E1E2FF" x="159.6" y="167"> </text>
	<text fill="#FFFFFFFF" x="160.2" y="167">options) end end def is_</text>
	<text fill="#D5696FFF" x="174.6" y="167">a</text>
	<text fill="#BC1019FF" x="175.2" y="167">ss</text>
	<text fill="#D9787DFF" x="176.4" y="167">e</text>
	<text fill="#FFFFFFFF" x="177.0" y="167">ssment? false end def update_learning_activity_weights(user, activity_weights) user.authorized!(Right::MA</text>
	<text fill="#FFFFFFFF" x="0.0" y="168">NAGE_ACTIVITIES, self) LearningObjective.transaction(requires_new: true) do lalos = learning_activity_learning_objecti</text>
	<text fill="#DD878CFF" x="70.8" y="168">v</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="168">es.select{|lalo</text>
	<text fill="#EAB4B7FF" x="80.39999999999999" y="168">|</text>
	<text fill="#FFFFFFFF" x="81.0" y="168"> activity_wei</text>
	<text fill="#DD878CFF" x="88.8" y="168">g</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="168">hts.map{|a</text>
	<text fill="#EEC3C5FF" x="95.39999999999999" y="168">|</text>
	<text fill="#FFFFFFFF" x="96.0" y="168"> a[:id]}.include?(lalo.learning_activity_id)} la</text>
	<text fill="#EAB4B7FF" x="124.8" y="168">l</text>
	<text fill="#C01E27FF" x="125.39999999999999" y="168">o</text>
	<text fill="#BC1019FF" x="126.0" y="168">s.map d</text>
	<text fill="#C01E27FF" x="130.2" y="168">o</text>
	<text fill="#DD878CFF" x="130.79999999999998" y="168"> </text>
	<text fill="#FBF0F1FF" x="131.4" y="168">|</text>
	<text fill="#FFFFFFFF" x="132.0" y="168">lalo| aw = activity_weights.fin</text>
	<text fill="#FBF0F1FF" x="150.6" y="168">d</text>
	<text fill="#C01E27FF" x="151.2" y="168"> </text>
	<text fill="#BC1019FF" x="151.79999999999998" y="168">{ |i| i[:id]</text>
	<text fill="#E2969AFF" x="159.0" y="168"> </text>
	<text fill="#FFFFFFFF" x="159.6" y="168">== lalo.learning_activit</text>
	<text fill="#EEC3C5FF" x="174.0" y="168">y</text>
	<text fill="#BC1019FF" x="174.6" y="168">_id</text>
	<text fill="#F7E1E2FF" x="176.4" y="168"> </text>
	<text fill="#FFFFFFFF" x="177.0" y="168">} lalo.update!(weight: aw[:weight]) aw end end end def get_curriculum_learning_objective(curriculum_id) c</text>
	<text fill="#FFFFFFFF" x="0.0" y="169">urriculums_learning_objectives.find_by(:curriculum_id =&gt; curriculum_id) end end # == Schema Information # # Table name</text>
	<text fill="#EEC3C5FF" x="70.8" y="169">:</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="169"> cohort_users #</text>
	<text fill="#D15A60FF" x="80.39999999999999" y="169"> </text>
	<text fill="#FFFFFFFF" x="81.0" y="169">#  id        </text>
	<text fill="#DD878CFF" x="88.8" y="169"> </text>
	<text fill="#BC1019FF" x="89.39999999999999" y="169">          </text>
	<text fill="#DD878CFF" x="95.39999999999999" y="169"> </text>
	<text fill="#FFFFFFFF" x="96.0" y="169"> :integer          not null, primary key #  us</text>
	<text fill="#FBF0F1FF" x="123.6" y="169">e</text>
	<text fill="#D15A60FF" x="124.19999999999999" y="169">r</text>
	<text fill="#BC1019FF" x="124.8" y="169">_id    </text>
	<text fill="#C01E27FF" x="129.0" y="169"> </text>
	<text fill="#DD878CFF" x="129.6" y="169"> </text>
	<text fill="#FBF0F1FF" x="130.2" y="169"> </text>
	<text fill="#FFFFFFFF" x="130.79999999999998" y="169">         :integer          not nu</text>
	<text fill="#D15A60FF" x="150.6" y="169">l</text>
	<text fill="#BC1019FF" x="151.2" y="169">l #  cohort_</text>
	<text fill="#D15A60FF" x="158.4" y="169">i</text>
	<text fill="#FFFFFFFF" x="159.0" y="169">d              :integer  </text>
	<text fill="#CD4B52FF" x="174.0" y="169"> </text>
	<text fill="#BC1019FF" x="174.6" y="169">  </text>
	<text fill="#D5696FFF" x="175.79999999999998" y="169"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="169">    not null #  role                   :string(50)       not null #  active                 :boolean      </text>
	<text fill="#FFFFFFFF" x="0.0" y="170">    not null #  started_on             :date             not null #  drc_accommodation      :integer          default(</text>
	<text fill="#F7E1E2FF" x="70.8" y="170">1</text>
	<text fill="#BC1019FF" x="71.39999999999999" y="170">00), not null # </text>
	<text fill="#F7E1E2FF" x="81.0" y="170"> </text>
	<text fill="#FFFFFFFF" x="81.6" y="170">hours_per_we</text>
	<text fill="#DD878CFF" x="88.8" y="170">e</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="170">k         </text>
	<text fill="#D5696FFF" x="95.39999999999999" y="170">:</text>
	<text fill="#FFFFFFFF" x="96.0" y="170">integer #  updated_at             :datetime #</text>
	<text fill="#E6A5A8FF" x="123.0" y="170"> </text>
	<text fill="#C01E27FF" x="123.6" y="170"> </text>
	<text fill="#BC1019FF" x="124.19999999999999" y="170">create</text>
	<text fill="#C01E27FF" x="127.8" y="170">d</text>
	<text fill="#DD878CFF" x="128.4" y="170">_</text>
	<text fill="#FBF0F1FF" x="129.0" y="170">a</text>
	<text fill="#FFFFFFFF" x="129.6" y="170">t             :datetime #  progres</text>
	<text fill="#E6A5A8FF" x="150.0" y="170">s</text>
	<text fill="#BC1019FF" x="150.6" y="170">_num        </text>
	<text fill="#C01E27FF" x="157.79999999999998" y="170"> </text>
	<text fill="#FBF0F1FF" x="158.4" y="170"> </text>
	<text fill="#FFFFFFFF" x="159.0" y="170"> :integer          defau</text>
	<text fill="#E6A5A8FF" x="173.4" y="170">l</text>
	<text fill="#BC1019FF" x="174.0" y="170">t(0</text>
	<text fill="#F7E1E2FF" x="175.79999999999998" y="170">)</text>
	<text fill="#FFFFFFFF" x="176.4" y="170"> #  progress_den           :integer          default(1) #  aggregate_score_num    :integer          defaul</text>
	<text fill="#FFFFFFFF" x="0.0" y="171">t(0) #  aggregate_score_den    :integer          default(1) #  percentage_score_num   :integer          default(0) #  p</text>
	<text fill="#C42D35FF" x="71.39999999999999" y="171">e</text>
	<text fill="#BC1019FF" x="72.0" y="171">rcentage_score_</text>
	<text fill="#D5696FFF" x="81.0" y="171">d</text>
	<text fill="#FFFFFFFF" x="81.6" y="171">en   :intege</text>
	<text fill="#DD878CFF" x="88.8" y="171">r</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="171">          </text>
	<text fill="#C83C43FF" x="95.39999999999999" y="171">d</text>
	<text fill="#FFFFFFFF" x="96.0" y="171">efault(1) #  mastered_objective_num :intege</text>
	<text fill="#EEC3C5FF" x="121.8" y="171">r</text>
	<text fill="#CD4B52FF" x="122.39999999999999" y="171"> </text>
	<text fill="#BC1019FF" x="123.0" y="171">      </text>
	<text fill="#C42D35FF" x="126.6" y="171"> </text>
	<text fill="#E6A5A8FF" x="127.19999999999999" y="171"> </text>
	<text fill="#FBF0F1FF" x="127.8" y="171"> </text>
	<text fill="#FFFFFFFF" x="128.4" y="171">default(0) #  duration_seconds     </text>
	<text fill="#F2D2D4FF" x="149.4" y="171"> </text>
	<text fill="#C01E27FF" x="150.0" y="171"> </text>
	<text fill="#BC1019FF" x="150.6" y="171">:integer    </text>
	<text fill="#EEC3C5FF" x="157.79999999999998" y="171"> </text>
	<text fill="#FFFFFFFF" x="158.4" y="171">     default(0), not nul</text>
	<text fill="#FBF0F1FF" x="172.79999999999998" y="171">l</text>
	<text fill="#C01E27FF" x="173.4" y="171"> </text>
	<text fill="#BC1019FF" x="174.0" y="171"># </text>
	<text fill="#D5696FFF" x="175.2" y="171"> </text>
	<text fill="#FFFFFFFF" x="175.79999999999998" y="171">ends_on                :date #  mastered_activities    :integer          default(0), not null #  in_progres</text>
	<text fill="#FFFFFFFF" x="0.0" y="172">s_activities :integer          default(0), not null #  available_activities   :integer          default(0), not null # </text>
	<text fill="#D5696FFF" x="71.39999999999999" y="172"> </text>
	<text fill="#BC1019FF" x="72.0" y="172">at_risk_activiti</text>
	<text fill="#F7E1E2FF" x="81.6" y="172">e</text>
	<text fill="#FFFFFFFF" x="82.2" y="172">s     :inte</text>
	<text fill="#EAB4B7FF" x="88.8" y="172">g</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="172">er         </text>
	<text fill="#FFFFFFFF" x="96.0" y="172"> default(0), not null #  last_accessed_at</text>
	<text fill="#F7E1E2FF" x="120.6" y="172"> </text>
	<text fill="#D5696FFF" x="121.19999999999999" y="172"> </text>
	<text fill="#BC1019FF" x="121.8" y="172">     </text>
	<text fill="#C01E27FF" x="124.8" y="172">:</text>
	<text fill="#D5696FFF" x="125.39999999999999" y="172">d</text>
	<text fill="#EEC3C5FF" x="126.0" y="172">a</text>
	<text fill="#FFFFFFFF" x="126.6" y="172">tetime #  mastered_objectives    :int</text>
	<text fill="#FBF0F1FF" x="148.79999999999998" y="172">e</text>
	<text fill="#C83C43FF" x="149.4" y="172">g</text>
	<text fill="#BC1019FF" x="150.0" y="172">er          </text>
	<text fill="#E2969AFF" x="157.2" y="172">d</text>
	<text fill="#FFFFFFFF" x="157.79999999999998" y="172">efault(0), not null #  in</text>
	<text fill="#D9787DFF" x="172.79999999999998" y="172">_</text>
	<text fill="#BC1019FF" x="173.4" y="172">pro</text>
	<text fill="#F7E1E2FF" x="175.2" y="172">g</text>
	<text fill="#FFFFFFFF" x="175.79999999999998" y="172">ress_objectives :integer          default(0), not null #  available_objectives   :integer          default(</text>
	<text fill="#FFFFFFFF" x="0.0" y="173">0), not null #  at_risk_objectives     :integer          default(0), not null # class CohortUser &lt; ActiveRecord::Base i</text>
	<text fill="#E6A5A8FF" x="71.39999999999999" y="173">n</text>
	<text fill="#BC1019FF" x="72.0" y="173">clude RetrieveIt</text>
	<text fill="#D5696FFF" x="81.6" y="173">e</text>
	<text fill="#FFFFFFFF" x="82.2" y="173">mStats attr</text>
	<text fill="#EEC3C5FF" x="88.8" y="173">_</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="173">accessor :a</text>
	<text fill="#EEC3C5FF" x="96.0" y="173">l</text>
	<text fill="#FFFFFFFF" x="96.6" y="173">ready_enrolled COHORT_ROLES = { studen</text>
	<text fill="#FBF0F1FF" x="119.39999999999999" y="173">t</text>
	<text fill="#D9787DFF" x="120.0" y="173">:</text>
	<text fill="#BC1019FF" x="120.6" y="173"> 'Stu</text>
	<text fill="#D15A60FF" x="123.6" y="173">d</text>
	<text fill="#E6A5A8FF" x="124.19999999999999" y="173">e</text>
	<text fill="#FBF0F1FF" x="124.8" y="173">n</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="173">t', ta: 'TA', instructor: 'Instructor',</text>
	<text fill="#D5696FFF" x="148.79999999999998" y="173"> </text>
	<text fill="#BC1019FF" x="149.4" y="173">lead_instruc</text>
	<text fill="#D5696FFF" x="156.6" y="173">t</text>
	<text fill="#FFFFFFFF" x="157.2" y="173">or: 'Lead Instructor', gr</text>
	<text fill="#EEC3C5FF" x="172.2" y="173">a</text>
	<text fill="#BC1019FF" x="172.79999999999998" y="173">der</text>
	<text fill="#D5696FFF" x="174.6" y="173">:</text>
	<text fill="#FFFFFFFF" x="175.2" y="173"> 'Grader', curriculum_developer: 'Curriculum Developer', academic_coach: 'Success Coach', academic_admin: 'A</text>
	<text fill="#FFFFFFFF" x="0.0" y="174">cademic Administrator', observer: 'Instructor' } # LTI Tool Provider Role Mappings LTI_CONTEXT_ROLE_MAP = { 'learner' =</text>
	<text fill="#F7E1E2FF" x="71.39999999999999" y="174">&gt;</text>
	<text fill="#BC1019FF" x="72.0" y="174"> :student, 'learn</text>
	<text fill="#F7E1E2FF" x="82.2" y="174">e</text>
	<text fill="#FFFFFFFF" x="82.8" y="174">r/learner'</text>
	<text fill="#F2D2D4FF" x="88.8" y="174"> </text>
	<text fill="#BC1019FF" x="89.39999999999999" y="174">=&gt; :student</text>
	<text fill="#DD878CFF" x="96.0" y="174">,</text>
	<text fill="#FFFFFFFF" x="96.6" y="174"> 'learner/noncreditlearner' =&gt; :stud</text>
	<text fill="#FBF0F1FF" x="118.19999999999999" y="174">e</text>
	<text fill="#DD878CFF" x="118.8" y="174">n</text>
	<text fill="#C01E27FF" x="119.39999999999999" y="174">t</text>
	<text fill="#BC1019FF" x="120.0" y="174">, </text>
	<text fill="#C42D35FF" x="121.19999999999999" y="174">'</text>
	<text fill="#D5696FFF" x="121.8" y="174">l</text>
	<text fill="#EAB4B7FF" x="122.39999999999999" y="174">e</text>
	<text fill="#FBF0F1FF" x="123.0" y="174">a</text>
	<text fill="#FFFFFFFF" x="123.6" y="174">rner/guestlearner' =&gt; :student, 'learner/</text>
	<text fill="#E6A5A8FF" x="148.2" y="174">e</text>
	<text fill="#BC1019FF" x="148.79999999999998" y="174">xternallearn</text>
	<text fill="#C83C43FF" x="156.0" y="174">e</text>
	<text fill="#FFFFFFFF" x="156.6" y="174">r' =&gt; :student, 'learner/</text>
	<text fill="#FBF0F1FF" x="171.6" y="174">i</text>
	<text fill="#C42D35FF" x="172.2" y="174">n</text>
	<text fill="#BC1019FF" x="172.79999999999998" y="174">str</text>
	<text fill="#F7E1E2FF" x="174.6" y="174">u</text>
	<text fill="#FFFFFFFF" x="175.2" y="174">ctor' =&gt; :instructor, 'instructor' =&gt; :instructor, 'instructor/primaryinstructor' =&gt; :instructor, 'instructo</text>
	<text fill="#FFFFFFFF" x="0.0" y="175">r/lecturer' =&gt; :instructor, 'contentdeveloper' =&gt; :curriculum_developer, 'contentdeveloper/contentdeveloper' =&gt; :curricu</text>
	<text fill="#C42D35FF" x="72.0" y="175">l</text>
	<text fill="#BC1019FF" x="72.6" y="175">um_developer, 'c</text>
	<text fill="#CD4B52FF" x="82.2" y="175">o</text>
	<text fill="#FFFFFFFF" x="82.8" y="175">ntentdevelo</text>
	<text fill="#BC1019FF" x="89.39999999999999" y="175">per/librari</text>
	<text fill="#CD4B52FF" x="96.0" y="175">a</text>
	<text fill="#FFFFFFFF" x="96.6" y="175">n' =&gt; :curriculum_developer, 'cont</text>
	<text fill="#F7E1E2FF" x="117.0" y="175">e</text>
	<text fill="#D5696FFF" x="117.6" y="175">n</text>
	<text fill="#BC1019FF" x="118.19999999999999" y="175">t</text>
	<text fill="#C42D35FF" x="118.8" y="175">d</text>
	<text fill="#D15A60FF" x="119.39999999999999" y="175">e</text>
	<text fill="#E2969AFF" x="120.0" y="175">v</text>
	<text fill="#F2D2D4FF" x="120.6" y="175">e</text>
	<text fill="#FFFFFFFF" x="121.19999999999999" y="175">loper/contentexpert' =&gt; :curriculum_develope</text>
	<text fill="#EEC3C5FF" x="147.6" y="175">r</text>
	<text fill="#BC1019FF" x="148.2" y="175">, 'contentde</text>
	<text fill="#C83C43FF" x="155.4" y="175">v</text>
	<text fill="#FBF0F1FF" x="156.0" y="175">e</text>
	<text fill="#FFFFFFFF" x="156.6" y="175">loper/externalcontentexpe</text>
	<text fill="#D9787DFF" x="171.6" y="175">r</text>
	<text fill="#BC1019FF" x="172.2" y="175">t' </text>
	<text fill="#DD878CFF" x="174.0" y="175">=</text>
	<text fill="#FFFFFFFF" x="174.6" y="175">&gt; :curriculum_developer, 'teachingassistant' =&gt; :instructor, 'teachingassistant/teachingassistant' =&gt; :instru</text>
	<text fill="#FFFFFFFF" x="0.0" y="176">ctor, 'teachingassistant/teachingassistantsection' =&gt; :instructor, 'teachingassistant/teachingassistantsectionassociatio</text>
	<text fill="#D9787DFF" x="72.0" y="176">n</text>
	<text fill="#BC1019FF" x="72.6" y="176">' =&gt; :instructor,</text>
	<text fill="#EAB4B7FF" x="82.8" y="176"> </text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="176">'teachinga</text>
	<text fill="#C01E27FF" x="89.39999999999999" y="176">s</text>
	<text fill="#BC1019FF" x="90.0" y="176">sistant/tea</text>
	<text fill="#FFFFFFFF" x="96.6" y="176">chingassistantoffering' =&gt; :instr</text>
	<text fill="#EAB4B7FF" x="116.39999999999999" y="176">u</text>
	<text fill="#DD878CFF" x="117.0" y="176">c</text>
	<text fill="#EAB4B7FF" x="117.6" y="176">t</text>
	<text fill="#F7E1E2FF" x="118.19999999999999" y="176">o</text>
	<text fill="#FFFFFFFF" x="118.8" y="176">r, 'teachingassistant/teachingassistanttemplate</text>
	<text fill="#F2D2D4FF" x="147.0" y="176">'</text>
	<text fill="#C01E27FF" x="147.6" y="176"> </text>
	<text fill="#BC1019FF" x="148.2" y="176">=&gt; :instruc</text>
	<text fill="#C42D35FF" x="154.79999999999998" y="176">t</text>
	<text fill="#FBF0F1FF" x="155.4" y="176">o</text>
	<text fill="#FFFFFFFF" x="156.0" y="176">r, 'teachingassistant/tea</text>
	<text fill="#EEC3C5FF" x="171.0" y="176">c</text>
	<text fill="#BC1019FF" x="171.6" y="176">hin</text>
	<text fill="#C01E27FF" x="173.4" y="176">g</text>
	<text fill="#FBF0F1FF" x="174.0" y="176">a</text>
	<text fill="#FFFFFFFF" x="174.6" y="176">ssistantgroup' =&gt; :instructor, 'teachingassistant/grader' =&gt; :instructor, 'observer' =&gt; :instructor } belongs</text>
	<text fill="#FFFFFFFF" x="0.0" y="177">_to :cohort belongs_to :user # !!!!!!!!!!!!!!!!!!!! IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!! # These methods do not limit</text>
	<text fill="#F2D2D4FF" x="72.0" y="177"> </text>
	<text fill="#BC1019FF" x="72.6" y="177">which activities </text>
	<text fill="#C01E27FF" x="82.8" y="177">a</text>
	<text fill="#FBF0F1FF" x="83.39999999999999" y="177">r</text>
	<text fill="#FFFFFFFF" x="84.0" y="177">e returne</text>
	<text fill="#CD4B52FF" x="89.39999999999999" y="177">d</text>
	<text fill="#BC1019FF" x="90.0" y="177">. This is a</text>
	<text fill="#EAB4B7FF" x="96.6" y="177"> </text>
	<text fill="#FFFFFFFF" x="97.2" y="177">bad hack. # If you want only data for the user's cohort, use user_activities, user</text>
	<text fill="#FBF0F1FF" x="146.4" y="177">_</text>
	<text fill="#C01E27FF" x="147.0" y="177">o</text>
	<text fill="#BC1019FF" x="147.6" y="177">bjectives, </text>
	<text fill="#C01E27FF" x="154.2" y="177">u</text>
	<text fill="#F2D2D4FF" x="154.79999999999998" y="177">s</text>
	<text fill="#FFFFFFFF" x="155.4" y="177">er_competencies, and user</text>
	<text fill="#FBF0F1FF" x="170.4" y="177">_</text>
	<text fill="#C01E27FF" x="171.0" y="177">c</text>
	<text fill="#BC1019FF" x="171.6" y="177">urr</text>
	<text fill="#E6A5A8FF" x="173.4" y="177">i</text>
	<text fill="#FFFFFFFF" x="174.0" y="177">culums methods. # TODO: REMOVE THE HACK has_many :activities, :through =&gt; :user, :source =&gt; :user_activities h</text>
	<text fill="#FFFFFFFF" x="0.0" y="178">as_many :objectives, :through =&gt; :user, :source =&gt; :user_objectives has_many :curriculums, :through =&gt; :objectives, :sour</text>
	<text fill="#C42D35FF" x="72.6" y="178">c</text>
	<text fill="#BC1019FF" x="73.2" y="178">e =&gt; :curriculums</text>
	<text fill="#D15A60FF" x="83.39999999999999" y="178">_</text>
	<text fill="#FFFFFFFF" x="84.0" y="178">learning_</text>
	<text fill="#D5696FFF" x="89.39999999999999" y="178">o</text>
	<text fill="#BC1019FF" x="90.0" y="178">bjectives #</text>
	<text fill="#D5696FFF" x="96.6" y="178"> </text>
	<text fill="#FFFFFFFF" x="97.2" y="178">!!!!!!!!!!!!!!!!!!!! IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!! validates :role, inc</text>
	<text fill="#FBF0F1FF" x="145.79999999999998" y="178">l</text>
	<text fill="#C83C43FF" x="146.4" y="178">u</text>
	<text fill="#BC1019FF" x="147.0" y="178">sion: { in:</text>
	<text fill="#C01E27FF" x="153.6" y="178"> </text>
	<text fill="#F2D2D4FF" x="154.2" y="178">C</text>
	<text fill="#FFFFFFFF" x="154.79999999999998" y="178">OHORT_ROLES.values } valid</text>
	<text fill="#CD4B52FF" x="170.4" y="178">a</text>
	<text fill="#BC1019FF" x="171.0" y="178">tes</text>
	<text fill="#CD4B52FF" x="172.79999999999998" y="178"> </text>
	<text fill="#FFFFFFFF" x="173.4" y="178">:cohort, presence: true validates :user, presence: true, uniqueness: { scope: :cohort, conditions: -&gt; { where(:</text>
	<text fill="#FFFFFFFF" x="0.0" y="179">active =&gt; true) }, if: :active } validates_numericality_of :hours_per_week, :only_integer =&gt; true, :allow_nil =&gt; true, :g</text>
	<text fill="#DD878CFF" x="72.6" y="179">r</text>
	<text fill="#BC1019FF" x="73.2" y="179">eater_than_or_equa</text>
	<text fill="#E6A5A8FF" x="84.0" y="179">l</text>
	<text fill="#FFFFFFFF" x="84.6" y="179">_to =&gt; 0</text>
	<text fill="#DD878CFF" x="89.39999999999999" y="179"> </text>
	<text fill="#BC1019FF" x="90.0" y="179">validates :</text>
	<text fill="#C01E27FF" x="96.6" y="179">d</text>
	<text fill="#FFFFFFFF" x="97.2" y="179">rc_accommodation, inclusion: { in: [0,100,150,200]}, :allow_nil =&gt; false validat</text>
	<text fill="#FBF0F1FF" x="145.2" y="179">e</text>
	<text fill="#C83C43FF" x="145.79999999999998" y="179"> </text>
	<text fill="#BC1019FF" x="146.4" y="179"> :ends_on_a</text>
	<text fill="#C83C43FF" x="153.0" y="179">f</text>
	<text fill="#F7E1E2FF" x="153.6" y="179">t</text>
	<text fill="#FFFFFFFF" x="154.2" y="179">er_starts_on scope :active</text>
	<text fill="#E2969AFF" x="169.79999999999998" y="179">,</text>
	<text fill="#BC1019FF" x="170.4" y="179">   -</text>
	<text fill="#F7E1E2FF" x="172.79999999999998" y="179">&gt;</text>
	<text fill="#FFFFFFFF" x="173.4" y="179"> { where(active: true) } scope :inactive, -&gt; { where(active: false) } scope :students,          -&gt; { where(role</text>
	<text fill="#FFFFFFFF" x="0.0" y="180">: COHORT_ROLES[:student]) } scope :instructors,       -&gt; { where(role: COHORT_ROLES[:instructor]) } scope :lead_instructo</text>
	<text fill="#F7E1E2FF" x="72.6" y="180">r</text>
	<text fill="#BC1019FF" x="73.2" y="180">s,  -&gt; { where(rol</text>
	<text fill="#C01E27FF" x="84.0" y="180">e</text>
	<text fill="#F2D2D4FF" x="84.6" y="180">:</text>
	<text fill="#FFFFFFFF" x="85.2" y="180"> COHORT</text>
	<text fill="#EEC3C5FF" x="89.39999999999999" y="180">_</text>
	<text fill="#BC1019FF" x="90.0" y="180">ROLES[:lead_</text>
	<text fill="#EAB4B7FF" x="97.2" y="180">i</text>
	<text fill="#FFFFFFFF" x="97.8" y="180">nstructor]) } scope :tas,               -&gt; { where(role: COHORT_ROLES[:ta]) } </text>
	<text fill="#FBF0F1FF" x="144.6" y="180">s</text>
	<text fill="#C83C43FF" x="145.2" y="180">c</text>
	<text fill="#BC1019FF" x="145.79999999999998" y="180">ope :grader</text>
	<text fill="#C83C43FF" x="152.4" y="180">s</text>
	<text fill="#FBF0F1FF" x="153.0" y="180">,</text>
	<text fill="#FFFFFFFF" x="153.6" y="180">           -&gt; { where(role</text>
	<text fill="#EEC3C5FF" x="169.2" y="180">:</text>
	<text fill="#BC1019FF" x="169.79999999999998" y="180"> COH</text>
	<text fill="#DD878CFF" x="172.2" y="180">O</text>
	<text fill="#FFFFFFFF" x="172.79999999999998" y="180">RT_ROLES[:grader]) } scope :active_users,      -&gt; { joins(:user).merge(User.active) } scope :custom_active_users</text>
	<text fill="#FFFFFFFF" x="0.0" y="181">, -&gt; { base_query = 'users.*, LOWER(concat_ws(\' \', "users".first_name, "users".last_name)) as "user_name", "users".curre</text>
	<text fill="#D15A60FF" x="73.2" y="181">n</text>
	<text fill="#BC1019FF" x="73.8" y="181">t_sign_in_at as "u</text>
	<text fill="#C42D35FF" x="84.6" y="181">s</text>
	<text fill="#FBF0F1FF" x="85.2" y="181">e</text>
	<text fill="#FFFFFFFF" x="85.8" y="181">r_curr</text>
	<text fill="#FBF0F1FF" x="89.39999999999999" y="181">e</text>
	<text fill="#BC1019FF" x="90.0" y="181">nt_sign_in_a</text>
	<text fill="#D15A60FF" x="97.2" y="181">t</text>
	<text fill="#FFFFFFFF" x="97.8" y="181">"' select(base_query).active_users } scope :at_risk,           -&gt; { joins(ris</text>
	<text fill="#FBF0F1FF" x="144.0" y="181">k</text>
	<text fill="#C83C43FF" x="144.6" y="181">y</text>
	<text fill="#BC1019FF" x="145.2" y="181">_activities</text>
	<text fill="#D15A60FF" x="151.79999999999998" y="181">)</text>
	<text fill="#FBF0F1FF" x="152.4" y="181">.</text>
	<text fill="#FFFFFFFF" x="153.0" y="181">where("risky_activities.at</text>
	<text fill="#F7E1E2FF" x="168.6" y="181">_</text>
	<text fill="#C01E27FF" x="169.2" y="181">r</text>
	<text fill="#BC1019FF" x="169.79999999999998" y="181">isk</text>
	<text fill="#C83C43FF" x="171.6" y="181">_</text>
	<text fill="#FFFFFFFF" x="172.2" y="181">activities &gt; 0") } before_validation :set_proper_starts_on_date before_validation :set_proper_ends_on_date after_</text>
	<text fill="#FFFFFFFF" x="0.0" y="182">create :update_activities_counters # Need these for some temp values PerformanceNumbers = Struct.new(:uo_id, :aggregate_sc</text>
	<text fill="#EEC3C5FF" x="73.2" y="182">o</text>
	<text fill="#BC1019FF" x="73.8" y="182">re_num, :aggregate_</text>
	<text fill="#C83C43FF" x="85.2" y="182">s</text>
	<text fill="#FFFFFFFF" x="85.8" y="182">core_de</text>
	<text fill="#C01E27FF" x="90.0" y="182">n</text>
	<text fill="#BC1019FF" x="90.6" y="182">, :state, :w</text>
	<text fill="#F7E1E2FF" x="97.8" y="182">e</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="182">ight, :obj_started_at, :obj_mastered_at) CohortUserPerformance = Struct.new</text>
	<text fill="#FBF0F1FF" x="143.4" y="182">(</text>
	<text fill="#C83C43FF" x="144.0" y="182">:</text>
	<text fill="#BC1019FF" x="144.6" y="182">performance</text>
	<text fill="#D9787DFF" x="151.2" y="182">,</text>
	<text fill="#FFFFFFFF" x="151.79999999999998" y="182"> :progress, :mastered_objec</text>
	<text fill="#FBF0F1FF" x="168.0" y="182">t</text>
	<text fill="#C83C43FF" x="168.6" y="182">i</text>
	<text fill="#BC1019FF" x="169.2" y="182">ve_</text>
	<text fill="#C01E27FF" x="171.0" y="182">n</text>
	<text fill="#F2D2D4FF" x="171.6" y="182">u</text>
	<text fill="#FFFFFFFF" x="172.2" y="182">m) def ends_on_with_end_of_day ends_on.to_s.in_time_zone(Time.zone).end_of_day end def self.lti_context_roles_fro</text>
	<text fill="#FFFFFFFF" x="0.0" y="183">m_csv(csv = '') csv.parse_csv.map { |x| lti_context_role_from_string x }.compact end def self.lti_context_role_from_string(</text>
	<text fill="#CD4B52FF" x="73.8" y="183">s</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="183">tring = '') LTI_CON</text>
	<text fill="#D5696FFF" x="85.8" y="183">T</text>
	<text fill="#FFFFFFFF" x="86.39999999999999" y="183">EXT_RO</text>
	<text fill="#D15A60FF" x="90.0" y="183">L</text>
	<text fill="#BC1019FF" x="90.6" y="183">E_MAP[string</text>
	<text fill="#DD878CFF" x="97.8" y="183">.</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="183">sub('urn:lti:role:ims/lis/', '').downcase]  # Context role is the default </text>
	<text fill="#F2D2D4FF" x="142.79999999999998" y="183">n</text>
	<text fill="#C01E27FF" x="143.4" y="183">a</text>
	<text fill="#BC1019FF" x="144.0" y="183">mespace; m</text>
	<text fill="#C01E27FF" x="150.0" y="183">a</text>
	<text fill="#E6A5A8FF" x="150.6" y="183">y</text>
	<text fill="#FFFFFFFF" x="151.2" y="183"> or may not be specified end</text>
	<text fill="#D5696FFF" x="168.0" y="183"> </text>
	<text fill="#BC1019FF" x="168.6" y="183"># se</text>
	<text fill="#E2969AFF" x="171.0" y="183">l</text>
	<text fill="#FFFFFFFF" x="171.6" y="183">f.active? is implicit def self.default_drc_accommodation columns_hash['drc_accommodation'].default end def self.fo</text>
	<text fill="#FFFFFFFF" x="0.0" y="184">r_instructor(id) CohortUser.instructors.active.where(user_id: id) end def self.for_instructor_and_cohorts(id, cohort_ids) r</text>
	<text fill="#EAB4B7FF" x="73.8" y="184">e</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="184">turn for_instructor(</text>
	<text fill="#D5696FFF" x="86.39999999999999" y="184">i</text>
	<text fill="#FFFFFFFF" x="87.0" y="184">d).wh</text>
	<text fill="#DD878CFF" x="90.0" y="184">e</text>
	<text fill="#BC1019FF" x="90.6" y="184">re(cohort_id</text>
	<text fill="#C01E27FF" x="97.8" y="184">:</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="184"> cohort_ids) if cohort_ids for_instructor(id) end def inactive? !self.act</text>
	<text fill="#EEC3C5FF" x="142.2" y="184">i</text>
	<text fill="#C01E27FF" x="142.79999999999998" y="184">v</text>
	<text fill="#BC1019FF" x="143.4" y="184">e? end def</text>
	<text fill="#C83C43FF" x="149.4" y="184"> </text>
	<text fill="#F2D2D4FF" x="150.0" y="184">a</text>
	<text fill="#FFFFFFFF" x="150.6" y="184">ctivate! if self.inactive? s</text>
	<text fill="#D9787DFF" x="167.4" y="184">e</text>
	<text fill="#BC1019FF" x="168.0" y="184">lf.a</text>
	<text fill="#D15A60FF" x="170.4" y="184">c</text>
	<text fill="#FFFFFFFF" x="171.0" y="184">tive = true self.save! end true end # Add to our current duration def add_duration!(secs) UpdateUserStats::Incremen</text>
	<text fill="#FFFFFFFF" x="0.0" y="185">tWorker.perform_async(self.class.name, self.id, secs) end # The user activities for this cohort def user_activities UserActi</text>
	<text fill="#CD4B52FF" x="74.39999999999999" y="185">v</text>
	<text fill="#BC1019FF" x="75.0" y="185">ity.where(student_id</text>
	<text fill="#D5696FFF" x="87.0" y="185">:</text>
	<text fill="#FFFFFFFF" x="87.6" y="185"> sel</text>
	<text fill="#EEC3C5FF" x="90.0" y="185">f</text>
	<text fill="#BC1019FF" x="90.6" y="185">.user_id) .jo</text>
	<text fill="#E6A5A8FF" x="98.39999999999999" y="185">i</text>
	<text fill="#FFFFFFFF" x="99.0" y="185">ns(learning_activity_learning_objectives: [ { learning_objective: [ { u</text>
	<text fill="#E2969AFF" x="141.6" y="185">s</text>
	<text fill="#BC1019FF" x="142.2" y="185">er_objectiv</text>
	<text fill="#D9787DFF" x="148.79999999999998" y="185">e</text>
	<text fill="#FFFFFFFF" x="149.4" y="185">s: :learning_plan_contexts } </text>
	<text fill="#E6A5A8FF" x="166.79999999999998" y="185">]</text>
	<text fill="#BC1019FF" x="167.4" y="185"> } ]</text>
	<text fill="#C42D35FF" x="169.79999999999998" y="185">)</text>
	<text fill="#FBF0F1FF" x="170.4" y="185"> </text>
	<text fill="#FFFFFFFF" x="171.0" y="185">.where(learning_plan_contexts: { cohort_id: self.cohort_id }) .distinct end def get_activities_counters query = Use</text>
	<text fill="#FFFFFFFF" x="0.0" y="186">rActivity.select(columns_activities_counters).where(student_id: self.user_id) .joins(learning_activity_learning_objectives: </text>
	<text fill="#EEC3C5FF" x="74.39999999999999" y="186">[</text>
	<text fill="#BC1019FF" x="75.0" y="186"> { learning_objective</text>
	<text fill="#D5696FFF" x="87.6" y="186">:</text>
	<text fill="#FFFFFFFF" x="88.2" y="186"> [ {</text>
	<text fill="#BC1019FF" x="90.6" y="186"> user_objecti</text>
	<text fill="#C42D35FF" x="98.39999999999999" y="186">v</text>
	<text fill="#FFFFFFFF" x="99.0" y="186">es: :learning_plan_contexts } ] } ]) .where(learning_plan_contexts: {</text>
	<text fill="#FBF0F1FF" x="140.4" y="186"> </text>
	<text fill="#D5696FFF" x="141.0" y="186">c</text>
	<text fill="#BC1019FF" x="141.6" y="186">ohort_id: </text>
	<text fill="#C42D35FF" x="147.6" y="186">s</text>
	<text fill="#EEC3C5FF" x="148.2" y="186">e</text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="186">lf.cohort_id }) end def get_o</text>
	<text fill="#E6A5A8FF" x="166.2" y="186">b</text>
	<text fill="#BC1019FF" x="166.79999999999998" y="186">jecti</text>
	<text fill="#F2D2D4FF" x="169.79999999999998" y="186">v</text>
	<text fill="#FFFFFFFF" x="170.4" y="186">es_counters UserObjective.select(objectives_counters).where(student_id: self.user_id) .joins(:learning_plan_contexts</text>
	<text fill="#FFFFFFFF" x="0.0" y="187">) .where(learning_plan_contexts: { cohort_id: self.cohort_id }) end # The user objectives for this cohort def user_objectives</text>
	<text fill="#CD4B52FF" x="75.0" y="187"> </text>
	<text fill="#BC1019FF" x="75.6" y="187">UserObjective.where(s</text>
	<text fill="#D5696FFF" x="88.2" y="187">t</text>
	<text fill="#FFFFFFFF" x="88.8" y="187">ude</text>
	<text fill="#CD4B52FF" x="90.6" y="187">n</text>
	<text fill="#BC1019FF" x="91.2" y="187">t_id: self.us</text>
	<text fill="#E6A5A8FF" x="99.0" y="187">e</text>
	<text fill="#FFFFFFFF" x="99.6" y="187">r_id) .joins(:learning_plan_contexts) .where(learning_plan_contexts</text>
	<text fill="#F2D2D4FF" x="139.79999999999998" y="187">:</text>
	<text fill="#C83C43FF" x="140.4" y="187"> </text>
	<text fill="#BC1019FF" x="141.0" y="187">{ cohort_i</text>
	<text fill="#DD878CFF" x="147.0" y="187">d</text>
	<text fill="#FBF0F1FF" x="147.6" y="187">:</text>
	<text fill="#FFFFFFFF" x="148.2" y="187"> self.cohort_id }) .distinct </text>
	<text fill="#F2D2D4FF" x="165.6" y="187">e</text>
	<text fill="#BC1019FF" x="166.2" y="187">nd # </text>
	<text fill="#E6A5A8FF" x="169.2" y="187">T</text>
	<text fill="#FFFFFFFF" x="169.79999999999998" y="187">he user competencies for this cohort def user_competencies UserCompetency.where(student_id: self.user_id) .joins(comp</text>
	<text fill="#FFFFFFFF" x="0.0" y="188">etency_objectives: [ { learning_objective: [ { user_objectives: :learning_plan_contexts } ] } ]) .where(learning_plan_context</text>
	<text fill="#F7E1E2FF" x="75.0" y="188">s</text>
	<text fill="#BC1019FF" x="75.6" y="188">: { cohort_id: self.co</text>
	<text fill="#CD4B52FF" x="88.8" y="188">h</text>
	<text fill="#FBF0F1FF" x="89.39999999999999" y="188">o</text>
	<text fill="#FFFFFFFF" x="90.0" y="188">r</text>
	<text fill="#E2969AFF" x="90.6" y="188">t</text>
	<text fill="#BC1019FF" x="91.2" y="188">_id }) .disti</text>
	<text fill="#C42D35FF" x="99.0" y="188">n</text>
	<text fill="#FBF0F1FF" x="99.6" y="188">c</text>
	<text fill="#FFFFFFFF" x="100.2" y="188">t end # The curriculums this cohort could be helping via the obje</text>
	<text fill="#E2969AFF" x="139.2" y="188">c</text>
	<text fill="#BC1019FF" x="139.79999999999998" y="188">tives def </text>
	<text fill="#CD4B52FF" x="145.79999999999998" y="188">u</text>
	<text fill="#F2D2D4FF" x="146.4" y="188">s</text>
	<text fill="#FFFFFFFF" x="147.0" y="188">er_curriculums Curriculum.join</text>
	<text fill="#F2D2D4FF" x="165.0" y="188">s</text>
	<text fill="#C01E27FF" x="165.6" y="188">(</text>
	<text fill="#BC1019FF" x="166.2" y="188">curr</text>
	<text fill="#D5696FFF" x="168.6" y="188">i</text>
	<text fill="#FFFFFFFF" x="169.2" y="188">culums_learning_objectives: [ { learning_objective: [ { user_objectives: :learning_plan_contexts } ] } ]) .where(learn</text>
	<text fill="#FFFFFFFF" x="0.0" y="189">ing_plan_contexts: { user_id: self.user_id, cohort_id: self.cohort_id }) .distinct end def deactivate! if self.active? self.ac</text>
	<text fill="#DD878CFF" x="75.6" y="189">t</text>
	<text fill="#BC1019FF" x="76.2" y="189">ive = false self.save!</text>
	<text fill="#C83C43FF" x="89.39999999999999" y="189"> </text>
	<text fill="#F7E1E2FF" x="90.0" y="189">e</text>
	<text fill="#F2D2D4FF" x="90.6" y="189">n</text>
	<text fill="#BC1019FF" x="91.2" y="189">d true end def</text>
	<text fill="#DD878CFF" x="99.6" y="189"> </text>
	<text fill="#FFFFFFFF" x="100.2" y="189">update_student_progress activity_counters = get_activities_coun</text>
	<text fill="#F7E1E2FF" x="138.0" y="189">t</text>
	<text fill="#CD4B52FF" x="138.6" y="189">e</text>
	<text fill="#BC1019FF" x="139.2" y="189">rs.to_a.f</text>
	<text fill="#C42D35FF" x="144.6" y="189">i</text>
	<text fill="#EAB4B7FF" x="145.2" y="189">r</text>
	<text fill="#FFFFFFFF" x="145.79999999999998" y="189">st self.mastered_activities = a</text>
	<text fill="#F2D2D4FF" x="164.4" y="189">c</text>
	<text fill="#C01E27FF" x="165.0" y="189">t</text>
	<text fill="#BC1019FF" x="165.6" y="189">ivit</text>
	<text fill="#CD4B52FF" x="168.0" y="189">y</text>
	<text fill="#FFFFFFFF" x="168.6" y="189">_counters.mastered_activities self.in_progress_activities = activity_counters.in_progress_activities self.available_act</text>
	<text fill="#FFFFFFFF" x="0.0" y="190">ivities = activity_counters.available_activities self.at_risk_activities = activity_counters.at_risk_activities self.save self</text>
	<text fill="#FBF0F1FF" x="75.6" y="190">.</text>
	<text fill="#C42D35FF" x="76.2" y="190">u</text>
	<text fill="#BC1019FF" x="76.8" y="190">ser.touch end def upda</text>
	<text fill="#C01E27FF" x="90.0" y="190">t</text>
	<text fill="#EEC3C5FF" x="90.6" y="190">e</text>
	<text fill="#C42D35FF" x="91.2" y="190">_</text>
	<text fill="#BC1019FF" x="91.8" y="190">lo_counters o</text>
	<text fill="#C01E27FF" x="99.6" y="190">b</text>
	<text fill="#FBF0F1FF" x="100.2" y="190">j</text>
	<text fill="#FFFFFFFF" x="100.8" y="190">ective_counters = get_objectives_counters.to_a.first self.mas</text>
	<text fill="#DD878CFF" x="137.4" y="190">t</text>
	<text fill="#BC1019FF" x="138.0" y="190">ered_obje</text>
	<text fill="#C42D35FF" x="143.4" y="190">c</text>
	<text fill="#E6A5A8FF" x="144.0" y="190">t</text>
	<text fill="#FFFFFFFF" x="144.6" y="190">ives = objective_counters.master</text>
	<text fill="#F2D2D4FF" x="163.79999999999998" y="190">e</text>
	<text fill="#C01E27FF" x="164.4" y="190">d</text>
	<text fill="#BC1019FF" x="165.0" y="190">_obj</text>
	<text fill="#C83C43FF" x="167.4" y="190">e</text>
	<text fill="#FBF0F1FF" x="168.0" y="190">c</text>
	<text fill="#FFFFFFFF" x="168.6" y="190">tives self.in_progress_objectives = objective_counters.in_progress_objectives self.available_objectives = objective_cou</text>
	<text fill="#FFFFFFFF" x="0.0" y="191">nters.available_objectives self.at_risk_objectives = objective_counters.at_risk_objectives self.save self.user.touch end def se</text>
	<text fill="#EEC3C5FF" x="76.2" y="191">l</text>
	<text fill="#BC1019FF" x="76.8" y="191">f.search_students(params</text>
	<text fill="#C42D35FF" x="91.2" y="191"> </text>
	<text fill="#BC1019FF" x="91.8" y="191">= {}) return C</text>
	<text fill="#D15A60FF" x="100.2" y="191">o</text>
	<text fill="#FFFFFFFF" x="100.8" y="191">hortUser.none unless params[:user_id] user = User.find(para</text>
	<text fill="#EAB4B7FF" x="136.2" y="191">m</text>
	<text fill="#C42D35FF" x="136.79999999999998" y="191">s</text>
	<text fill="#BC1019FF" x="137.4" y="191">[:user_i</text>
	<text fill="#C42D35FF" x="142.2" y="191">d</text>
	<text fill="#E6A5A8FF" x="142.79999999999998" y="191">]</text>
	<text fill="#FFFFFFFF" x="143.4" y="191">) query = self.active.where.not(c</text>
	<text fill="#F2D2D4FF" x="163.2" y="191">o</text>
	<text fill="#C01E27FF" x="163.79999999999998" y="191">h</text>
	<text fill="#BC1019FF" x="164.4" y="191">ort_</text>
	<text fill="#C01E27FF" x="166.79999999999998" y="191">i</text>
	<text fill="#F7E1E2FF" x="167.4" y="191">d</text>
	<text fill="#FFFFFFFF" x="168.0" y="191">: self.cohorts_expired(user).map(&amp;:id).uniq) query = query.joins(:activities) query = query.includes(cohort: :curriculum</text>
	<text fill="#FFFFFFFF" x="0.0" y="192">) query = query.select('cohort_users.*') query = query.where(role: COHORT_ROLES[:student]) query = query.where(cohort_id: self.i</text>
	<text fill="#D9787DFF" x="76.8" y="192">n</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="192">structor_active_cohorts(params[:user_id</text>
	<text fill="#EEC3C5FF" x="100.8" y="192">]</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="192">)) if params[:q] query = query.search(params[:q].merge(u</text>
	<text fill="#EEC3C5FF" x="135.0" y="192">s</text>
	<text fill="#CD4B52FF" x="135.6" y="192">e</text>
	<text fill="#BC1019FF" x="136.2" y="192">r_user_a</text>
	<text fill="#CD4B52FF" x="141.0" y="192">c</text>
	<text fill="#EAB4B7FF" x="141.6" y="192">t</text>
	<text fill="#FFFFFFFF" x="142.2" y="192">ivities_state_eq: params[:q][:stat</text>
	<text fill="#E6A5A8FF" x="162.6" y="192">e</text>
	<text fill="#C01E27FF" x="163.2" y="192">_</text>
	<text fill="#BC1019FF" x="163.79999999999998" y="192">eq])</text>
	<text fill="#C01E27FF" x="166.2" y="192">)</text>
	<text fill="#F2D2D4FF" x="166.79999999999998" y="192">.</text>
	<text fill="#FFFFFFFF" x="167.4" y="192">result query = query.at_risk if params[:q][:at_risk_true] sorting = params[:q][:s] if params[:q][:s] end self.custom_acti</text>
	<text fill="#FFFFFFFF" x="0.0" y="193">ve_users.select('cohort_users.*').where(id: query.pluck(:id).uniq).order(sorting) end def curriculum_score_r self.aggregate_scor</text>
	<text fill="#FBF0F1FF" x="76.8" y="193">e</text>
	<text fill="#C83C43FF" x="77.39999999999999" y="193"> </text>
	<text fill="#BC1019FF" x="78.0" y="193">end def curriculum_score (self.aggrega</text>
	<text fill="#C42D35FF" x="100.8" y="193">t</text>
	<text fill="#FBF0F1FF" x="101.39999999999999" y="193">e</text>
	<text fill="#FFFFFFFF" x="102.0" y="193">_score * 100).to_f.round(2) end def aggregate_score R</text>
	<text fill="#EEC3C5FF" x="133.79999999999998" y="193">a</text>
	<text fill="#CD4B52FF" x="134.4" y="193">t</text>
	<text fill="#BC1019FF" x="135.0" y="193">ional(s</text>
	<text fill="#C01E27FF" x="139.2" y="193">e</text>
	<text fill="#D9787DFF" x="139.79999999999998" y="193">l</text>
	<text fill="#F7E1E2FF" x="140.4" y="193">f</text>
	<text fill="#FFFFFFFF" x="141.0" y="193">.aggregate_score_num, self.aggregat</text>
	<text fill="#E6A5A8FF" x="162.0" y="193">e</text>
	<text fill="#BC1019FF" x="162.6" y="193">_scor</text>
	<text fill="#C01E27FF" x="165.6" y="193">e</text>
	<text fill="#F2D2D4FF" x="166.2" y="193">_</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="193">den) end def percentage_score Rational(self.percentage_score_num, self.percentage_score_den) end def progress Rational(sel</text>
	<text fill="#FFFFFFFF" x="0.0" y="194">f.progress_num, self.progress_den) end # Update scores and save def update_score_from_objectives set_cohort_performance self.mast</text>
	<text fill="#F2D2D4FF" x="77.39999999999999" y="194">e</text>
	<text fill="#C01E27FF" x="78.0" y="194">r</text>
	<text fill="#BC1019FF" x="78.6" y="194">ed_objective_num = self.number_of_mast</text>
	<text fill="#D9787DFF" x="101.39999999999999" y="194">e</text>
	<text fill="#FFFFFFFF" x="102.0" y="194">red_objectives self.save! end def set_cohort_perfor</text>
	<text fill="#E6A5A8FF" x="132.6" y="194">m</text>
	<text fill="#CD4B52FF" x="133.2" y="194">a</text>
	<text fill="#BC1019FF" x="133.79999999999998" y="194">nce if </text>
	<text fill="#D15A60FF" x="138.0" y="194">@</text>
	<text fill="#E6A5A8FF" x="138.6" y="194">c</text>
	<text fill="#FFFFFFFF" x="139.2" y="194">ohort_performance.nil? @cohort_perfor</text>
	<text fill="#DD878CFF" x="161.4" y="194">m</text>
	<text fill="#BC1019FF" x="162.0" y="194">ance =</text>
	<text fill="#F2D2D4FF" x="165.6" y="194"> </text>
	<text fill="#FFFFFFFF" x="166.2" y="194">CohortUserPerformance.new @cohort_performance.performance = [] set_user_objectives_performance set_score end end def number</text>
	<text fill="#FFFFFFFF" x="0.0" y="195">_of_mastered_objectives return 0 unless @cohort_performance @cohort_performance.performance.select{ |a| a.state == 'mastered' }.si</text>
	<text fill="#E6A5A8FF" x="78.0" y="195">z</text>
	<text fill="#BC1019FF" x="78.6" y="195">e end def total_weight return 1 unless </text>
	<text fill="#EAB4B7FF" x="102.0" y="195">@</text>
	<text fill="#FFFFFFFF" x="102.6" y="195">cohort_performance weight = @cohort_performance</text>
	<text fill="#F2D2D4FF" x="130.79999999999998" y="195">.</text>
	<text fill="#D9787DFF" x="131.4" y="195">p</text>
	<text fill="#C01E27FF" x="132.0" y="195">e</text>
	<text fill="#BC1019FF" x="132.6" y="195">rform</text>
	<text fill="#C01E27FF" x="135.6" y="195">a</text>
	<text fill="#D5696FFF" x="136.2" y="195">n</text>
	<text fill="#E6A5A8FF" x="136.79999999999998" y="195">c</text>
	<text fill="#FBF0F1FF" x="137.4" y="195">e</text>
	<text fill="#FFFFFFFF" x="138.0" y="195">.map(&amp;:weight).inject(&amp;:+) weight == 0</text>
	<text fill="#D5696FFF" x="160.79999999999998" y="195"> </text>
	<text fill="#BC1019FF" x="161.4" y="195">? 1 : </text>
	<text fill="#E6A5A8FF" x="165.0" y="195">w</text>
	<text fill="#FFFFFFFF" x="165.6" y="195">eight end def user_objectives cohort.user_objectives.where(learning_plan_contexts: {user_id: user_id}) end def set_user_obje</text>
	<text fill="#FFFFFFFF" x="0.0" y="196">ctives_performance curriculum_ids = self.cohort.curriculum.subtree_ids user_objectives.each do |uo| weight = uo.weights_of_learning</text>
	<text fill="#DD878CFF" x="78.6" y="196">_</text>
	<text fill="#BC1019FF" x="79.2" y="196">objectives(curriculum_ids).first || 0 </text>
	<text fill="#C01E27FF" x="102.0" y="196">p</text>
	<text fill="#F7E1E2FF" x="102.6" y="196">e</text>
	<text fill="#FFFFFFFF" x="103.2" y="196">rformance = PerformanceNumbers.new(uo.id, u</text>
	<text fill="#F2D2D4FF" x="129.0" y="196">o</text>
	<text fill="#D9787DFF" x="129.6" y="196">.</text>
	<text fill="#C42D35FF" x="130.2" y="196">a</text>
	<text fill="#BC1019FF" x="130.79999999999998" y="196">ggreg</text>
	<text fill="#CD4B52FF" x="133.79999999999998" y="196">a</text>
	<text fill="#DD878CFF" x="134.4" y="196">t</text>
	<text fill="#F2D2D4FF" x="135.0" y="196">e</text>
	<text fill="#FFFFFFFF" x="135.6" y="196">_score_num, uo.aggregate_score_den, uo.s</text>
	<text fill="#FBF0F1FF" x="159.6" y="196">t</text>
	<text fill="#C83C43FF" x="160.2" y="196">a</text>
	<text fill="#BC1019FF" x="160.79999999999998" y="196">te, w</text>
	<text fill="#C01E27FF" x="163.79999999999998" y="196">e</text>
	<text fill="#EEC3C5FF" x="164.4" y="196">i</text>
	<text fill="#FFFFFFFF" x="165.0" y="196">ght, uo.started_at, uo.mastered_at) @cohort_performance.performance &lt;&lt; performance end end def set_score score = cohort.use_a</text>
	<text fill="#FFFFFFFF" x="0.0" y="197">ctivity_grade_percentage ? calculate_cohort_activity_grade_score : calculate_aggregate_score self.aggregate_score_num = score.numera</text>
	<text fill="#D5696FFF" x="79.2" y="197">t</text>
	<text fill="#BC1019FF" x="79.8" y="197">or self.aggregate_score_den = score.de</text>
	<text fill="#C83C43FF" x="102.6" y="197">n</text>
	<text fill="#FFFFFFFF" x="103.2" y="197">ominator end def calculate_aggregate_s</text>
	<text fill="#FBF0F1FF" x="126.0" y="197">c</text>
	<text fill="#EEC3C5FF" x="126.6" y="197">o</text>
	<text fill="#DD878CFF" x="127.19999999999999" y="197">r</text>
	<text fill="#D15A60FF" x="127.8" y="197">e</text>
	<text fill="#C01E27FF" x="128.4" y="197"> </text>
	<text fill="#BC1019FF" x="129.0" y="197">@co</text>
	<text fill="#CD4B52FF" x="130.79999999999998" y="197">h</text>
	<text fill="#D9787DFF" x="131.4" y="197">o</text>
	<text fill="#E2969AFF" x="132.0" y="197">r</text>
	<text fill="#F2D2D4FF" x="132.6" y="197">t</text>
	<text fill="#FFFFFFFF" x="133.2" y="197">_performance.performance.inject(0.to_r) do </text>
	<text fill="#F2D2D4FF" x="159.0" y="197">|</text>
	<text fill="#C42D35FF" x="159.6" y="197">s</text>
	<text fill="#BC1019FF" x="160.2" y="197">um, u</text>
	<text fill="#C01E27FF" x="163.2" y="197">a</text>
	<text fill="#F2D2D4FF" x="163.79999999999998" y="197">|</text>
	<text fill="#FFFFFFFF" x="164.4" y="197"> sum + Rational(ua.aggregate_score_num, ua.aggregate_score_den) * Rational(ua.weight || 0, total_weight) end end def calculate</text>
	<text fill="#FFFFFFFF" x="0.0" y="198">_cohort_activity_grade_score cohort_activity_grades = cohort.cohort_activity_grades cohort_user_activities = activities.where(learni</text>
	<text fill="#FBF0F1FF" x="79.2" y="198">n</text>
	<text fill="#C83C43FF" x="79.8" y="198">g</text>
	<text fill="#BC1019FF" x="80.39999999999999" y="198">_activity_id: cohort_activity_grades.m</text>
	<text fill="#D5696FFF" x="103.2" y="198">a</text>
	<text fill="#FFFFFFFF" x="103.8" y="198">p(&amp;:learning_activity_id)) score = </text>
	<text fill="#DD878CFF" x="124.8" y="198">c</text>
	<text fill="#D15A60FF" x="125.39999999999999" y="198">o</text>
	<text fill="#CD4B52FF" x="126.0" y="198">ho</text>
	<text fill="#DD878CFF" x="127.19999999999999" y="198">rt</text>
	<text fill="#E6A5A8FF" x="128.4" y="198">_</text>
	<text fill="#EEC3C5FF" x="129.0" y="198">u</text>
	<text fill="#FBF0F1FF" x="129.6" y="198">s</text>
	<text fill="#FFFFFFFF" x="130.2" y="198">er_activities.inject(0.to_r) do |score_sum, use</text>
	<text fill="#E6A5A8FF" x="158.4" y="198">r</text>
	<text fill="#C01E27FF" x="159.0" y="198">_</text>
	<text fill="#BC1019FF" x="159.6" y="198">activ</text>
	<text fill="#C01E27FF" x="162.6" y="198">i</text>
	<text fill="#F2D2D4FF" x="163.2" y="198">t</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="198">y| cohort_user_activity = cohort_activity_grades.find_by(learning_activity_id: user_activity.learning_activity_id) percentage =</text>
	<text fill="#FFFFFFFF" x="0.0" y="199"> cohort_user_activity.grade_percentage.to_f score_sum + user_activity.score_r * Rational(percentage,100) if percentage end score.rati</text>
	<text fill="#FBF0F1FF" x="79.8" y="199">o</text>
	<text fill="#C83C43FF" x="80.39999999999999" y="199">n</text>
	<text fill="#BC1019FF" x="81.0" y="199">alize(0.0005) end def reload @cohort_p</text>
	<text fill="#E2969AFF" x="103.8" y="199">e</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="199">rformance = nil super end def launch_read_only(token_masked = false) return true if toke</text>
	<text fill="#FBF0F1FF" x="157.2" y="199">n</text>
	<text fill="#D5696FFF" x="157.79999999999998" y="199">_</text>
	<text fill="#BC1019FF" x="158.4" y="199">masked</text>
	<text fill="#C42D35FF" x="162.0" y="199"> </text>
	<text fill="#F2D2D4FF" x="162.6" y="199">r</text>
	<text fill="#FFFFFFFF" x="163.2" y="199">eturn Time.current &gt; ends_on_with_end_of_day unless cohort.rolling_wihout_ends_on? false end def get_estimated_end_date() return</text>
	<text fill="#FFFFFFFF" x="0.0" y="200"> cohort.ends_on.to_s unless cohort.rolling? dates = ViewCohortDates.get_cohort_dates(cohort, user).first Time.at(dates[:ends_at]/1000)</text>
	<text fill="#FBF0F1FF" x="80.39999999999999" y="200">.</text>
	<text fill="#C83C43FF" x="81.0" y="200">s</text>
	<text fill="#BC1019FF" x="81.6" y="200">trftime("%Y-%m-%d") if dates.present? </text>
	<text fill="#E6A5A8FF" x="104.39999999999999" y="200">e</text>
	<text fill="#FFFFFFFF" x="105.0" y="200">nd def reset_to_initial_state! initial_attrs = {progress_num:           0, progress_de</text>
	<text fill="#F2D2D4FF" x="156.6" y="200">n</text>
	<text fill="#C83C43FF" x="157.2" y="200">:</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="200">      </text>
	<text fill="#C83C43FF" x="161.4" y="200"> </text>
	<text fill="#FBF0F1FF" x="162.0" y="200"> </text>
	<text fill="#FFFFFFFF" x="162.6" y="200">   1, aggregate_score_num:    0, aggregate_score_den:    1, percentage_score_num:   0, percentage_score_den:   1, mastered_object</text>
	<text fill="#FFFFFFFF" x="0.0" y="201">ive_num: 0, mastered_activities:    0, in_progress_activities: 0, available_activities:   0, at_risk_activities:     0, last_accessed_a</text>
	<text fill="#FBF0F1FF" x="81.0" y="201">t</text>
	<text fill="#C83C43FF" x="81.6" y="201">:</text>
	<text fill="#BC1019FF" x="82.2" y="201">       nil, duration_seconds:       0}</text>
	<text fill="#EEC3C5FF" x="105.0" y="201"> </text>
	<text fill="#FFFFFFFF" x="105.6" y="201">self.update_attributes!(initial_attrs) end private def self.instructor_active_cohort</text>
	<text fill="#E2969AFF" x="156.0" y="201">s</text>
	<text fill="#BC1019FF" x="156.6" y="201">(instru</text>
	<text fill="#D5696FFF" x="160.79999999999998" y="201">c</text>
	<text fill="#FBF0F1FF" x="161.4" y="201">t</text>
	<text fill="#FFFFFFFF" x="162.0" y="201">or_id) return CohortUser.none unless instructor_id self.select(:cohort_id).where(user_id: instructor_id, active: true, role: COHOR</text>
	<text fill="#FFFFFFFF" x="0.0" y="202">T_ROLES[:instructor]) end def set_proper_starts_on_date if self.cohort.standard? if !self.started_on_changed? &amp;&amp; !self.started_on.presen</text>
	<text fill="#FBF0F1FF" x="81.6" y="202">t</text>
	<text fill="#C83C43FF" x="82.2" y="202">?</text>
	<text fill="#BC1019FF" x="82.8" y="202"> self.started_on = self.cohort.starts</text>
	<text fill="#C01E27FF" x="105.0" y="202">_</text>
	<text fill="#F2D2D4FF" x="105.6" y="202">o</text>
	<text fill="#FFFFFFFF" x="106.2" y="202">n end end end def set_proper_ends_on_date if self.cohort.standard? if !self.ends_</text>
	<text fill="#F7E1E2FF" x="154.79999999999998" y="202">o</text>
	<text fill="#CD4B52FF" x="155.4" y="202">n</text>
	<text fill="#BC1019FF" x="156.0" y="202">.presen</text>
	<text fill="#DD878CFF" x="160.2" y="202">t</text>
	<text fill="#FFFFFFFF" x="160.79999999999998" y="202">? self.ends_on = self.cohort.ends_on end end end def ends_on_after_starts_on if self.ends_on.present? errors.add(:ends_on, "must be </text>
	<text fill="#FFFFFFFF" x="0.0" y="203">after start on date") unless (self.started_on &lt;= self.ends_on) end end def self.get_cohort_prev_next_for_user(params) cohort_id = params.</text>
	<text fill="#FBF0F1FF" x="82.2" y="203">f</text>
	<text fill="#C83C43FF" x="82.8" y="203">e</text>
	<text fill="#BC1019FF" x="83.39999999999999" y="203">tch(:cohort_id) results = get_enrollm</text>
	<text fill="#C01E27FF" x="105.6" y="203">e</text>
	<text fill="#F2D2D4FF" x="106.2" y="203">n</text>
	<text fill="#FFFFFFFF" x="106.8" y="203">ts_for_user(params) return_prev_next_cohort(results, cohort_id) end def self.ge</text>
	<text fill="#E2969AFF" x="154.2" y="203">t</text>
	<text fill="#C01E27FF" x="154.79999999999998" y="203">_</text>
	<text fill="#BC1019FF" x="155.4" y="203">enroll</text>
	<text fill="#C01E27FF" x="159.0" y="203">m</text>
	<text fill="#EAB4B7FF" x="159.6" y="203">e</text>
	<text fill="#FFFFFFFF" x="160.2" y="203">nts_for_user(params) join_params = { user_id: params.fetch(:user_id), active: true } join_params[:role] = params[:role] if params[:ro</text>
	<text fill="#FFFFFFFF" x="0.0" y="204">le].present? query = CohortUser.includes(cohort: :curriculum).where(join_params).order("#{Cohort.table_name}.ends_on DESC") query = query.s</text>
	<text fill="#D5696FFF" x="83.39999999999999" y="204">e</text>
	<text fill="#BC1019FF" x="84.0" y="204">arch(params[:q] ).result if params[:q</text>
	<text fill="#C01E27FF" x="106.2" y="204">]</text>
	<text fill="#EEC3C5FF" x="106.8" y="204">.</text>
	<text fill="#FFFFFFFF" x="107.39999999999999" y="204">present? query.all end def self.return_prev_next_cohort(results, cohort_id) </text>
	<text fill="#F2D2D4FF" x="153.0" y="204">i</text>
	<text fill="#CD4B52FF" x="153.6" y="204">n</text>
	<text fill="#BC1019FF" x="154.2" y="204">dex = r</text>
	<text fill="#C83C43FF" x="158.4" y="204">e</text>
	<text fill="#F7E1E2FF" x="159.0" y="204">s</text>
	<text fill="#FFFFFFFF" x="159.6" y="204">ults.find_index{|cu| cu.cohort_id == cohort_id} return if !index prev_item = results.at(index - 1) unless index - 1 &lt; 0 next_item = re</text>
	<text fill="#FFFFFFFF" x="0.0" y="205">sults.at(index + 1) item      = results.at(index) CohortRepresenter.new(item.cohort).to_hash(cohort_user: item, prev_item: prev_item, next_i</text>
	<text fill="#DD878CFF" x="84.0" y="205">t</text>
	<text fill="#BC1019FF" x="84.6" y="205">em: next_item) end def columns_activit</text>
	<text fill="#E6A5A8FF" x="107.39999999999999" y="205">i</text>
	<text fill="#FFFFFFFF" x="108.0" y="205">es_counters %{ COUNT(DISTINCT case when user_activities.state = 'mastered</text>
	<text fill="#FBF0F1FF" x="151.79999999999998" y="205">'</text>
	<text fill="#D9787DFF" x="152.4" y="205"> </text>
	<text fill="#BC1019FF" x="153.0" y="205">then use</text>
	<text fill="#D9787DFF" x="157.79999999999998" y="205">r</text>
	<text fill="#FBF0F1FF" x="158.4" y="205">_</text>
	<text fill="#FFFFFFFF" x="159.0" y="205">activities.id end) as mastered_activities, COUNT(DISTINCT case when user_activities.state = 'available' then user_activities.id end) as</text>
	<text fill="#FFFFFFFF" x="0.0" y="206"> available_activities, COUNT(DISTINCT case when user_activities.state = 'in_progress' or  user_activities.state = 'failed' or user_activities</text>
	<text fill="#E6A5A8FF" x="84.6" y="206">.</text>
	<text fill="#C01E27FF" x="85.2" y="206">s</text>
	<text fill="#BC1019FF" x="85.8" y="206">tate = 'awaiting_instructor_grading' </text>
	<text fill="#DD878CFF" x="108.0" y="206">o</text>
	<text fill="#FFFFFFFF" x="108.6" y="206">r user_activities.state = 'awaiting_grading' then user_activities.id en</text>
	<text fill="#E6A5A8FF" x="151.2" y="206">d</text>
	<text fill="#C01E27FF" x="151.79999999999998" y="206">)</text>
	<text fill="#BC1019FF" x="152.4" y="206"> as in_</text>
	<text fill="#C01E27FF" x="156.6" y="206">p</text>
	<text fill="#EAB4B7FF" x="157.2" y="206">r</text>
	<text fill="#FFFFFFFF" x="157.79999999999998" y="206">ogress_activities, COUNT(DISTINCT case when user_activities.at_risk = true then user_activities.id end) as at_risk_activities }.gsub(/\s+</text>
	<text fill="#FFFFFFFF" x="0.0" y="207">/, " ").strip end def self.risky_activities %{ INNER JOIN LATERAL ( SELECT COUNT (DISTINCT "user_activities".*) as at_risk_activities FROM "us</text>
	<text fill="#F2D2D4FF" x="85.2" y="207">e</text>
	<text fill="#C83C43FF" x="85.8" y="207">r</text>
	<text fill="#BC1019FF" x="86.39999999999999" y="207">_activities" INNER JOIN "learning_act</text>
	<text fill="#D5696FFF" x="108.6" y="207">i</text>
	<text fill="#FBF0F1FF" x="109.2" y="207">v</text>
	<text fill="#FFFFFFFF" x="109.8" y="207">ities" ON "learning_activities"."id" = "user_activities"."learning_</text>
	<text fill="#EEC3C5FF" x="150.0" y="207">a</text>
	<text fill="#C83C43FF" x="150.6" y="207">c</text>
	<text fill="#BC1019FF" x="151.2" y="207">tivity_i</text>
	<text fill="#CD4B52FF" x="156.0" y="207">d</text>
	<text fill="#FBF0F1FF" x="156.6" y="207">"</text>
	<text fill="#FFFFFFFF" x="157.2" y="207"> INNER JOIN "learning_activity_learning_objectives" ON "learning_activity_learning_objectives"."learning_activity_id" = "learning_activiti</text>
	<text fill="#FFFFFFFF" x="0.0" y="208">es"."id" INNER JOIN "learning_objectives" ON "learning_objectives"."id" = "learning_activity_learning_objectives"."learning_objective_id" INNER</text>
	<text fill="#FBF0F1FF" x="85.8" y="208"> </text>
	<text fill="#D5696FFF" x="86.39999999999999" y="208">J</text>
	<text fill="#BC1019FF" x="87.0" y="208">OIN "user_objectives" ON "user_object</text>
	<text fill="#C83C43FF" x="109.2" y="208">i</text>
	<text fill="#F2D2D4FF" x="109.8" y="208">v</text>
	<text fill="#FFFFFFFF" x="110.39999999999999" y="208">es"."learning_objective_id" = "learning_objectives"."id" INNER J</text>
	<text fill="#EEC3C5FF" x="148.79999999999998" y="208">O</text>
	<text fill="#CD4B52FF" x="149.4" y="208">I</text>
	<text fill="#BC1019FF" x="150.0" y="208">N "learn</text>
	<text fill="#C01E27FF" x="154.79999999999998" y="208">i</text>
	<text fill="#E2969AFF" x="155.4" y="208">n</text>
	<text fill="#FFFFFFFF" x="156.0" y="208">g_plan_contexts" ON "learning_plan_contexts"."user_objective_id" = "user_objectives"."id" WHERE "user_activities"."student_id" = cohort_user</text>
	<text fill="#FFFFFFFF" x="0.0" y="209">s.user_id AND "learning_plan_contexts"."cohort_id" = cohort_users.cohort_id AND "user_activities".at_risk = 't' ) as risky_activities ON TRUE }.g</text>
	<text fill="#EAB4B7FF" x="87.0" y="209">s</text>
	<text fill="#C01E27FF" x="87.6" y="209">u</text>
	<text fill="#BC1019FF" x="88.2" y="209">b(/\s+/, " ").strip end def objectiv</text>
	<text fill="#C01E27FF" x="109.8" y="209">e</text>
	<text fill="#E6A5A8FF" x="110.39999999999999" y="209">s</text>
	<text fill="#FFFFFFFF" x="111.0" y="209">_counters %{ COUNT(DISTINCT CASE WHEN user_objectives.state =</text>
	<text fill="#EEC3C5FF" x="147.6" y="209"> </text>
	<text fill="#CD4B52FF" x="148.2" y="209">'</text>
	<text fill="#BC1019FF" x="148.79999999999998" y="209">available</text>
	<text fill="#D15A60FF" x="154.2" y="209">'</text>
	<text fill="#FBF0F1FF" x="154.79999999999998" y="209"> </text>
	<text fill="#FFFFFFFF" x="155.4" y="209">then user_objectives.id end) as available_objectives, COUNT(DISTINCT CASE WHEN user_objectives.state = 'in_progress' or user_objectives.state</text>
	<text fill="#FFFFFFFF" x="0.0" y="210"> = 'failed' then user_objectives.id end) as in_progress_objectives, COUNT(DISTINCT CASE WHEN user_objectives.state = 'mastered' then user_objectiv</text>
	<text fill="#FBF0F1FF" x="87.6" y="210">e</text>
	<text fill="#D15A60FF" x="88.2" y="210">s</text>
	<text fill="#BC1019FF" x="88.8" y="210">.id end) as mastered_objectives, COUN</text>
	<text fill="#D15A60FF" x="111.0" y="210">T</text>
	<text fill="#FBF0F1FF" x="111.6" y="210">(</text>
	<text fill="#FFFFFFFF" x="112.2" y="210">DISTINCT CASE WHEN user_objectives.state = 'failed' and u</text>
	<text fill="#EEC3C5FF" x="146.4" y="210">s</text>
	<text fill="#CD4B52FF" x="147.0" y="210">e</text>
	<text fill="#BC1019FF" x="147.6" y="210">r_objecti</text>
	<text fill="#C42D35FF" x="153.0" y="210">v</text>
	<text fill="#EAB4B7FF" x="153.6" y="210">e</text>
	<text fill="#FFFFFFFF" x="154.2" y="210">s.at_risk = true then user_objectives.id end) as at_risk_objectives }.gsub(/\s+/, " ").strip end def self.cohorts_expired(user) cohorts_expired</text>
	<text fill="#FFFFFFFF" x="0.0" y="211">_ids = [] all_cohort_expired = user.cohorts.expired.uniq cohorts_expired_ids = all_cohort_expired - user.cohorts.expired_extended(user.days_expired_</text>
	<text fill="#EAB4B7FF" x="88.8" y="211">c</text>
	<text fill="#C42D35FF" x="89.39999999999999" y="211">o</text>
	<text fill="#BC1019FF" x="90.0" y="211">horts).uniq unless user.days_expired</text>
	<text fill="#C01E27FF" x="111.6" y="211">_</text>
	<text fill="#E2969AFF" x="112.2" y="211">c</text>
	<text fill="#FFFFFFFF" x="112.8" y="211">ohorts == 0 cohorts_expired_ids end # def single_score</text>
	<text fill="#E6A5A8FF" x="145.2" y="211">(</text>
	<text fill="#C83C43FF" x="145.79999999999998" y="211">c</text>
	<text fill="#BC1019FF" x="146.4" y="211">urriculum</text>
	<text fill="#C01E27FF" x="151.79999999999998" y="211">_</text>
	<text fill="#DD878CFF" x="152.4" y="211">i</text>
	<text fill="#FBF0F1FF" x="153.0" y="211">d</text>
	<text fill="#FFFFFFFF" x="153.6" y="211">) #   scores  = objectives.with_curriculum(curriculum_id) #     .order("learning_objective_id ASC").map(&amp;:score_f) # #   weights = curriculums.w</text>
	<text fill="#FFFFFFFF" x="0.0" y="212">here(:curriculum_id =&gt; curriculum_id) #     .order("curriculums_learning_objectives.learning_objective_id ASC").pluck(:weight) # #   return 0 if scor</text>
	<text fill="#FBF0F1FF" x="89.39999999999999" y="212">e</text>
	<text fill="#D9787DFF" x="90.0" y="212">s</text>
	<text fill="#BC1019FF" x="90.6" y="212">.empty? || weights.include?(nil) # # </text>
	<text fill="#CD4B52FF" x="112.8" y="212"> </text>
	<text fill="#EEC3C5FF" x="113.39999999999999" y="212"> </text>
	<text fill="#FFFFFFFF" x="114.0" y="212"># what I do here is the following. #   # since bo</text>
	<text fill="#F7E1E2FF" x="143.4" y="212">t</text>
	<text fill="#D9787DFF" x="144.0" y="212">h</text>
	<text fill="#C01E27FF" x="144.6" y="212"> </text>
	<text fill="#BC1019FF" x="145.2" y="212">arrays (sc</text>
	<text fill="#D5696FFF" x="151.2" y="212">o</text>
	<text fill="#F7E1E2FF" x="151.79999999999998" y="212">r</text>
	<text fill="#FFFFFFFF" x="152.4" y="212">es and weights) are are ordered by the same column it means the #   # score is properly joined to the weight, then we proceed to do something like</text>
	<text fill="#FFFFFFFF" x="0.0" y="213"> #   # obtained = (LO1*weight_1 + LO2*weight_2 + LO3*weight_3 + LON*weight_N) #   # expected = (100*weight_1 + 100*weight_2 + 100*weight_3 + 100*weight</text>
	<text fill="#F7E1E2FF" x="90.6" y="213">_</text>
	<text fill="#CD4B52FF" x="91.2" y="213">N</text>
	<text fill="#BC1019FF" x="91.8" y="213">) #   # it means, that if the Curricu</text>
	<text fill="#D15A60FF" x="114.0" y="213">l</text>
	<text fill="#F7E1E2FF" x="114.6" y="213">u</text>
	<text fill="#FFFFFFFF" x="115.19999999999999" y="213">m has 3 LO's but only one LO has score, then</text>
	<text fill="#FBF0F1FF" x="141.6" y="213"> </text>
	<text fill="#E6A5A8FF" x="142.2" y="213">t</text>
	<text fill="#CD4B52FF" x="142.79999999999998" y="213">h</text>
	<text fill="#BC1019FF" x="143.4" y="213">e Curriculu</text>
	<text fill="#CD4B52FF" x="150.0" y="213">m</text>
	<text fill="#EEC3C5FF" x="150.6" y="213"> </text>
	<text fill="#FFFFFFFF" x="151.2" y="213">Score would look like #   # score = (0.0 * 3 + 0.0 * 2 + 80 * 1) / (100 * 3 + 100 * 2 + 100 * 1) #   #       = 80/600 #   # score = 13.33 #   obtain</text>
	<text fill="#FFFFFFFF" x="0.0" y="214">ed = weights.zip(scores).map { |item|  (item[0]*item[1]) }.inject(:+) #   expected = weights.inject(0) { |total, weight| total + (weight*100) } #   (Rati</text>
	<text fill="#EEC3C5FF" x="91.8" y="214">o</text>
	<text fill="#CD4B52FF" x="92.39999999999999" y="214">n</text>
	<text fill="#BC1019FF" x="93.0" y="214">al(obtained, expected).to_f * 100).to</text>
	<text fill="#D5696FFF" x="115.19999999999999" y="214">_</text>
	<text fill="#F2D2D4FF" x="115.8" y="214">f</text>
	<text fill="#FFFFFFFF" x="116.39999999999999" y="214"> # end def update_activities_counters Co</text>
	<text fill="#EAB4B7FF" x="140.4" y="214">h</text>
	<text fill="#D5696FFF" x="141.0" y="214">o</text>
	<text fill="#C01E27FF" x="141.6" y="214">r</text>
	<text fill="#BC1019FF" x="142.2" y="214">tUserWorker</text>
	<text fill="#CD4B52FF" x="148.79999999999998" y="214">s</text>
	<text fill="#EEC3C5FF" x="149.4" y="214">:</text>
	<text fill="#FFFFFFFF" x="150.0" y="214">:ActivityCounters.perform_async([self.id]) CohortUserWorkers::ObjectiveCounters.perform_async(self.id) end end # == Schema Information # # Table name:</text>
	<text fill="#FFFFFFFF" x="0.0" y="215"> webex_meetings # #  id                  :integer          not null, primary key #  name                :string           not null #  meeting_key         :</text>
	<text fill="#EAB4B7FF" x="93.0" y="215">s</text>
	<text fill="#C42D35FF" x="93.6" y="215">t</text>
	<text fill="#BC1019FF" x="94.2" y="215">ring           not null #  url_host  </text>
	<text fill="#CD4B52FF" x="116.39999999999999" y="215"> </text>
	<text fill="#E6A5A8FF" x="117.0" y="215"> </text>
	<text fill="#FFFFFFFF" x="117.6" y="215">        :text             not null</text>
	<text fill="#FBF0F1FF" x="138.0" y="215"> </text>
	<text fill="#EAB4B7FF" x="138.6" y="215">#</text>
	<text fill="#D5696FFF" x="139.2" y="215"> </text>
	<text fill="#C01E27FF" x="139.79999999999998" y="215"> </text>
	<text fill="#BC1019FF" x="140.4" y="215">url_atendee </text>
	<text fill="#CD4B52FF" x="147.6" y="215"> </text>
	<text fill="#EEC3C5FF" x="148.2" y="215"> </text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="215">      :text             not null #  guest_token         :string #  instructor_id       :integer          not null #  cohort_id           :integer       </text>
	<text fill="#FFFFFFFF" x="0.0" y="216">   not null #  scheduled_date      :datetime         not null #  created_at          :datetime #  updated_at          :datetime #  duration            :integ</text>
	<text fill="#EEC3C5FF" x="94.2" y="216">e</text>
	<text fill="#CD4B52FF" x="94.8" y="216">r</text>
	<text fill="#BC1019FF" x="95.39999999999999" y="216">          default(0) #  host_url_upda</text>
	<text fill="#C01E27FF" x="117.6" y="216">t</text>
	<text fill="#D5696FFF" x="118.19999999999999" y="216">e</text>
	<text fill="#F2D2D4FF" x="118.8" y="216">d</text>
	<text fill="#FFFFFFFF" x="119.39999999999999" y="216">_at :datetime         not nu</text>
	<text fill="#F2D2D4FF" x="136.2" y="216">l</text>
	<text fill="#E2969AFF" x="136.79999999999998" y="216">l</text>
	<text fill="#CD4B52FF" x="137.4" y="216"> </text>
	<text fill="#BC1019FF" x="138.0" y="216"># class WebexM</text>
	<text fill="#D15A60FF" x="146.4" y="216">e</text>
	<text fill="#EEC3C5FF" x="147.0" y="216">e</text>
	<text fill="#FFFFFFFF" x="147.6" y="216">ting &lt; ActiveRecord::Base belongs_to :instructor, class_name: User.name belongs_to :cohort has_many :webex_meeting_participants, dependent: :destroy has_m</text>
	<text fill="#FFFFFFFF" x="0.0" y="217">any :users, through: :webex_meeting_participants validates :instructor, :cohort, :scheduled_date, :duration, :host_url_updated_at, presence: true validates_num</text>
	<text fill="#EEC3C5FF" x="95.39999999999999" y="217">e</text>
	<text fill="#D5696FFF" x="96.0" y="217">r</text>
	<text fill="#BC1019FF" x="96.6" y="217">icality_of :duration, greater_than: 0 </text>
	<text fill="#C01E27FF" x="119.39999999999999" y="217">b</text>
	<text fill="#D5696FFF" x="120.0" y="217">e</text>
	<text fill="#E6A5A8FF" x="120.6" y="217">f</text>
	<text fill="#F7E1E2FF" x="121.19999999999999" y="217">o</text>
	<text fill="#FFFFFFFF" x="121.8" y="217">re_save :set_partici</text>
	<text fill="#EEC3C5FF" x="133.79999999999998" y="217">p</text>
	<text fill="#E2969AFF" x="134.4" y="217">a</text>
	<text fill="#D15A60FF" x="135.0" y="217">n</text>
	<text fill="#C01E27FF" x="135.6" y="217">t</text>
	<text fill="#BC1019FF" x="136.2" y="217">s, unless: Pro</text>
	<text fill="#C01E27FF" x="144.6" y="217">c</text>
	<text fill="#D5696FFF" x="145.2" y="217">.</text>
	<text fill="#F7E1E2FF" x="145.79999999999998" y="217">n</text>
	<text fill="#FFFFFFFF" x="146.4" y="217">ew { |meeting| meeting.options[:participants] } before_destroy :delete_webex_meeting after_create :add_participants after_commit :add_webex_participants, on</text>
	<text fill="#FFFFFFFF" x="0.0" y="218">: :create scope :upcoming_sessions, lambda { where("? &lt; scheduled_date + ((duration || ' minute')::interval) ", Time.current) } scope :until_one_week, lambda { w</text>
	<text fill="#F7E1E2FF" x="96.6" y="218">h</text>
	<text fill="#DD878CFF" x="97.2" y="218">e</text>
	<text fill="#C42D35FF" x="97.8" y="218">r</text>
	<text fill="#BC1019FF" x="98.39999999999999" y="218">e("scheduled_date &lt; ?", Date.current + </text>
	<text fill="#C42D35FF" x="121.8" y="218">1</text>
	<text fill="#D15A60FF" x="122.39999999999999" y="218">.</text>
	<text fill="#DD878CFF" x="123.0" y="218">w</text>
	<text fill="#EAB4B7FF" x="123.6" y="218">e</text>
	<text fill="#EEC3C5FF" x="124.19999999999999" y="218">e</text>
	<text fill="#FBF0F1FF" x="124.8" y="218">k</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="218">) } attr</text>
	<text fill="#F2D2D4FF" x="130.2" y="218">_</text>
	<text fill="#EEC3C5FF" x="130.79999999999998" y="218">a</text>
	<text fill="#DD878CFF" x="131.4" y="218">c</text>
	<text fill="#D5696FFF" x="132.0" y="218">c</text>
	<text fill="#C83C43FF" x="132.6" y="218">e</text>
	<text fill="#BC1019FF" x="133.2" y="218">ssor :options def</text>
	<text fill="#C83C43FF" x="143.4" y="218"> </text>
	<text fill="#E6A5A8FF" x="144.0" y="218">o</text>
	<text fill="#FBF0F1FF" x="144.6" y="218">p</text>
	<text fill="#FFFFFFFF" x="145.2" y="218">tions @options || {filter: "webex_all_students"} end def permitted?(user, action) allowed = case action when Right::DELETE, Right::UPDATE if user.has_rights?(</text>
	<text fill="#FFFFFFFF" x="0.0" y="219">Right::DELETE, 'webex_meetings') self.instructor == user else false end end raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED </text>
	<text fill="#EAB4B7FF" x="98.39999999999999" y="219">#</text>
	<text fill="#D5696FFF" x="99.0" y="219">{</text>
	<text fill="#BC1019FF" x="99.6" y="219">action}") unless allowed allowed end def create_meeting options.merge(</text>
	<text fill="#C01E27FF" x="141.6" y="219">p</text>
	<text fill="#D9787DFF" x="142.2" y="219">a</text>
	<text fill="#F2D2D4FF" x="142.79999999999998" y="219">r</text>
	<text fill="#FFFFFFFF" x="143.4" y="219">ticipants: {number_of_participants: number_of_participants}) response = WebexApi.create_meeting(self.instructor, self.name, self.scheduled_date, self.duration, o</text>
	<text fill="#FFFFFFFF" x="0.0" y="220">ptions[:participants]) params = response_params(response.with_indifferent_access) self.assign_attributes(params) self.save! end def able_to_join_as_instructor?(user_i</text>
	<text fill="#FBF0F1FF" x="99.6" y="220">d</text>
	<text fill="#E6A5A8FF" x="100.2" y="220">)</text>
	<text fill="#D15A60FF" x="100.8" y="220"> </text>
	<text fill="#BC1019FF" x="101.39999999999999" y="220">able_to_join? &amp;&amp; self.webex_meeting_participants.instructors.map</text>
	<text fill="#C01E27FF" x="139.79999999999998" y="220">(</text>
	<text fill="#D5696FFF" x="140.4" y="220">&amp;</text>
	<text fill="#EAB4B7FF" x="141.0" y="220">:</text>
	<text fill="#FFFFFFFF" x="141.6" y="220">user_id).include?(user_id) end def able_to_join_as_student?(user_id) able_to_join? &amp;&amp; self.webex_meeting_participants.students.map(&amp;:user_id).include?(user_id) end </text>
	<text fill="#FFFFFFFF" x="0.0" y="221">def able_to_display? Time.current &lt; end_time end def end_time self.scheduled_date + self.duration.minutes end def mail_options {"name": self.name, "scheduled_date": self</text>
	<text fill="#FBF0F1FF" x="101.39999999999999" y="221">.</text>
	<text fill="#E6A5A8FF" x="102.0" y="221">s</text>
	<text fill="#D5696FFF" x="102.6" y="221">c</text>
	<text fill="#C01E27FF" x="103.2" y="221">h</text>
	<text fill="#BC1019FF" x="103.8" y="221">eduled_date.strftime("%A, %B %d, %Y %I:%M %P")} end def a</text>
	<text fill="#C42D35FF" x="138.0" y="221">b</text>
	<text fill="#D5696FFF" x="138.6" y="221">l</text>
	<text fill="#EAB4B7FF" x="139.2" y="221">e</text>
	<text fill="#FFFFFFFF" x="139.79999999999998" y="221">_to_join? able_to_display? &amp;&amp; Time.current &gt; self.scheduled_date - 11.minutes end def able_to_update_host_url(user_id = nil) able_to_join_as_instructor?(user_id) &amp;&amp; se</text>
	<text fill="#FFFFFFFF" x="0.0" y="222">lf.host_url_updated_at &lt; Time.current - 1.hour end def update_url_host(user_id = nil, skip_validation = false) if skip_validation || able_to_update_host_url(user_id) host_ur</text>
	<text fill="#F2D2D4FF" x="103.8" y="222">l</text>
	<text fill="#DD878CFF" x="104.39999999999999" y="222"> </text>
	<text fill="#CD4B52FF" x="105.0" y="222">=</text>
	<text fill="#BC1019FF" x="105.6" y="222"> WebexApi.get_host_url(self) rescue nil self.update</text>
	<text fill="#CD4B52FF" x="136.2" y="222">_</text>
	<text fill="#E2969AFF" x="136.79999999999998" y="222">a</text>
	<text fill="#F2D2D4FF" x="137.4" y="222">t</text>
	<text fill="#FFFFFFFF" x="138.0" y="222">tributes(url_host: host_url, host_url_updated_at: Time.current) if host_url end end private def response_params(response = {}) { meeting_key:    response[:meeting_info][:</text>
	<text fill="#FFFFFFFF" x="0.0" y="223">meeting_key], url_host:       response[:host_url], url_atendee:    response[:join_url], host_url_updated_at: Time.current } end def delete_webex_meeting WebexApi.delete_meeting(</text>
	<text fill="#EEC3C5FF" x="106.2" y="223">s</text>
	<text fill="#DD878CFF" x="106.8" y="223">e</text>
	<text fill="#D15A60FF" x="107.39999999999999" y="223">l</text>
	<text fill="#C42D35FF" x="108.0" y="223">f</text>
	<text fill="#BC1019FF" x="108.6" y="223">) end def set_participants @options = opt</text>
	<text fill="#C42D35FF" x="133.2" y="223">i</text>
	<text fill="#D15A60FF" x="133.79999999999998" y="223">o</text>
	<text fill="#E2969AFF" x="134.4" y="223">n</text>
	<text fill="#EEC3C5FF" x="135.0" y="223">s</text>
	<text fill="#FFFFFFFF" x="135.6" y="223">.merge(participants: map_participants) end def add_participants user_ids = options[:participants].map{|user| user[:id]} user_ids &lt;&lt; self.instructor_id user_ids.each do |user_</text>
	<text fill="#FFFFFFFF" x="0.0" y="224">id| role = user_id == self.instructor_id ? Role::INSTRUCTOR : Role::STUDENT params = {webex_meeting_id: self.id, user_id: user_id, role: role} self.webex_meeting_participants &lt;&lt; Web</text>
	<text fill="#FBF0F1FF" x="108.6" y="224">e</text>
	<text fill="#EEC3C5FF" x="109.2" y="224">x</text>
	<text fill="#E2969AFF" x="109.8" y="224">M</text>
	<text fill="#D9787DFF" x="110.39999999999999" y="224">e</text>
	<text fill="#CD4B52FF" x="111.0" y="224">e</text>
	<text fill="#C01E27FF" x="111.6" y="224">t</text>
	<text fill="#BC1019FF" x="112.2" y="224">ingParticipant.new(params) en</text>
	<text fill="#C01E27FF" x="129.6" y="224">d</text>
	<text fill="#CD4B52FF" x="130.2" y="224"> </text>
	<text fill="#D9787DFF" x="130.79999999999998" y="224">e</text>
	<text fill="#E2969AFF" x="131.4" y="224">n</text>
	<text fill="#EEC3C5FF" x="132.0" y="224">d</text>
	<text fill="#FBF0F1FF" x="132.6" y="224"> </text>
	<text fill="#FFFFFFFF" x="133.2" y="224">def map_participants get_participants.map{|u| {id: u.id, full_name: u.full_name, email: u.get_webex_email }} end def number_of_participants get_participants.size end def get_part</text>
	<text fill="#FFFFFFFF" x="0.0" y="225">icipants case options[:filter] when "webex_all_students" self.cohort.students when "webex_all_instructors" self.cohort.instructors when "webex_specific_users" if options[:user_ids] student</text>
	<text fill="#F2D2D4FF" x="112.8" y="225">s</text>
	<text fill="#EEC3C5FF" x="113.39999999999999" y="225"> </text>
	<text fill="#E2969AFF" x="114.0" y="225">=</text>
	<text fill="#DD878CFF" x="114.6" y="225"> s</text>
	<text fill="#D15A60FF" x="115.8" y="225">e</text>
	<text fill="#CD4B52FF" x="116.39999999999999" y="225">lf.</text>
	<text fill="#C42D35FF" x="118.19999999999999" y="225">c</text>
	<text fill="#BC1019FF" x="118.8" y="225">ohort.s</text>
	<text fill="#C42D35FF" x="123.0" y="225">t</text>
	<text fill="#CD4B52FF" x="123.6" y="225">uden</text>
	<text fill="#DD878CFF" x="126.0" y="225">ts</text>
	<text fill="#E2969AFF" x="127.19999999999999" y="225"> </text>
	<text fill="#EEC3C5FF" x="127.8" y="225">s</text>
	<text fill="#F2D2D4FF" x="128.4" y="225">t</text>
	<text fill="#FFFFFFFF" x="129.0" y="225">udents.select{|student| options[:user_ids].include?(student.id)} else self.cohort.students end else self.cohort.students end end def add_webex_participants WebexWorker.perform_async(sel</text>
	<text fill="#FFFFFFFF" x="0.0" y="226">f.id, options[:participants]) end end # == Schema Information # # Table name: user_rules # #  id                       :integer          not null, primary key #  student_id               :integer          not null #  user_activity_attempt_id :integer          not null #  rubric_rule_id           :integer          not null #  points                   :integer          not null #  instructor_id     </text>
	<text fill="#FFFFFFFF" x="0.0" y="227">       :integer #  created_at               :datetime #  updated_at               :datetime #  comment                  :text #  rubric_criterium_id      :integer # class UserRule &lt; ActiveRecord::Base belongs_to :student, class_name: User.name, inverse_of: :user_rules belongs_to :instructor, class_name: User.name belongs_to :user_activity_attempt belongs_to :rubric_rule belongs_to :rubric_criteriu</text>
	<text fill="#FFFFFFFF" x="0.0" y="228">m validates :student_id, presence: true validates :user_activity_attempt_id, presence: true validates :rubric_rule_id, presence: true validates :rubric_criterium_id, presence: true before_validation :set_rubric_criterium scope :by_user, -&gt;(student_id){where(student_id: student_id)} scope :ordered_by_criteria_id, -&gt; { joins(rubric_rule: :rubric_criterium).order("rubric_criteria.id asc") } def set_r</text>
	<text fill="#FFFFFFFF" x="0.0" y="229">ubric_criterium self.rubric_criterium = self.rubric_rule.rubric_criterium end end # == Schema Information # # Table name: data_student_cohort_lo_burnups_vw # #  user_id   :integer #  cohort_id :integer #  timestamp :datetime #  completed :decimal(, ) # class ViewStudentObjectiveBurnup &lt; ActiveRecord::Base self.table_name = 'data_student_cohort_lo_burnups_vw' # Be sure that no one tries to write to</text>
	<text fill="#FFFFFFFF" x="0.0" y="230"> this def readonly? true end def self.get_student_burnup(cohort, student) burnup_data = self.get_burnup_data(cohort, student) cohort_dates_result = ViewCohortDates.get_cohort_dates(cohort, student).first # TODO: make a view for user cohort dates and include this point in the burnup view. count_log = [] burnup_end = cohort_dates_result[:ends_at] count_log &lt;&lt; self.initial_point(cohort_dates_result[:</text>
	<text fill="#FFFFFFFF" x="0.0" y="231">starts_at]) burnup_data.each do |row| count_log &lt;&lt; val(row[:x].floor, row[:y].to_i) burnup_end = row[:x] if row[:x] &gt; burnup_end end count_log &lt;&lt; self.last_point(count_log.last[:y]) burnup = { :starts_on =&gt; cohort_dates_result[:starts_at].floor, :ends_on =&gt; burnup_end.floor, :total =&gt; burnup_data.size, :count_log =&gt; count_log, :num_learning_objectives =&gt; self.get_number_of_los(cohort.id, student.i</text>
	<text fill="#FFFFFFFF" x="0.0" y="232">d) } end def self.get_burnup_data(cohort, student) burnup = [] data = self.where(cohort_id: cohort.id, user_id: student.id).where("timestamp IS NOT NULL").order("timestamp ASC") data.each do |row| x = row.timestamp.to_time.to_i * 1000 burnup &lt;&lt; val(x, row.completed) end burnup end def self.val(x, y) { :name =&gt; x, :x =&gt; x, :y =&gt; y, :danger =&gt; false } end def self.initial_point(x) val(x.floor, 0) en</text>
	<text fill="#FFFFFFFF" x="0.0" y="233">d def self.last_point(y) val(Time.current.to_i * 1000.floor, y) end def self.get_number_of_los(cohort_id, student_id) LearningPlanContext.joins(:cohort) .joins(user_objective: :learning_objective) .where(cohorts: {id: cohort_id}, user_objectives: {student_id: student_id}) .count end end # == Schema Information # # Table name: user_activity_attempts # #  id                 :integer          not nul</text>
	<text fill="#FFFFFFFF" x="0.0" y="234">l, primary key #  user_activity_id   :integer          not null #  attempt_number     :integer          not null #  canonical_score_id :integer #  lock_version       :integer          default(0), not null #  state              :string(255)      not null #  started_at         :datetime #  completed_at       :datetime #  created_at         :datetime #  updated_at         :datetime #  invalid_comment</text>
	<text fill="#FFFFFFFF" x="0.0" y="235">s   :text #  invalid_reason     :string(255) #  duration_seconds   :integer          default(0), not null # class UserActivityAttempt &lt; ActiveRecord::Base include OptimisticLockHelpers include Async include AASM INVALID_REASONS = [ "incomplete", "disqualified", "other" ] VALID_ATTEMPTS_STATES = [ :mastered, :awaiting_instructor_grading, :awaiting_grading, :failed ] READABLE_STATE_NAMES = { "in_pro</text>
	<text fill="#FFFFFFFF" x="0.0" y="236">gress" =&gt; "In Progress", "mastered" =&gt; "Mastered", "awaiting_instructor_grading" =&gt; "Awaiting Instructor Grading", "awaiting_grading" =&gt; "In progress", "failed" =&gt; "Not Mastered", "not_valid" =&gt; "Invalid" } belongs_to :user_activity, inverse_of: :user_activity_attempts, :touch =&gt; true belongs_to :canonical_score, class_name: ActivityScore.name has_many :activity_scores, -&gt; { order(updated_at: :des</text>
	<text fill="#FFFFFFFF" x="0.0" y="237">c)}, inverse_of: :user_activity_attempt has_many :activity_score_comments, -&gt;{order("updated_at DESC")}, dependent: :destroy has_many :user_rules, inverse_of: :user_activity_attempt has_one :rubric_comment validates_presence_of :invalid_reason, :if =&gt; :not_valid?, :message =&gt; "invalid_reason must be included if attempt is invalid" validates :invalid_reason, :allow_nil =&gt; true, inclusion: { in: INV</text>
	<text fill="#FFFFFFFF" x="0.0" y="238">ALID_REASONS, message: "%{value} is not a valid reason code" } scope :sorted_by_attempt, -&gt; { order("attempt_number DESC") } scope :valid, -&gt; { where.not(state: :not_valid).recent } scope :invalid, -&gt; { where(state: :not_valid) } scope :awaiting_instructor_grading, -&gt; { where(state: :awaiting_instructor_grading) } scope :awaiting_grading, -&gt; { where(state: :awaiting_grading) } scope :exclude_gradi</text>
	<text fill="#FFFFFFFF" x="0.0" y="239">ng, -&gt; { where.not(state: :awaiting_instructor_grading).where.not(state: :awaiting_grading) } scope :failed, -&gt; { where(state: :failed) } scope :not_failed, -&gt; { where.not(state: :failed) } scope :mastered, -&gt; { where(state: :mastered) } scope :completed, -&gt; { where.not(completed_at: nil) } scope :recent, -&gt; { order(:attempt_number) } after_save :percolate_duration, if: :duration_seconds_changed? </text>
	<text fill="#FFFFFFFF" x="0.0" y="240">after_create :update_activity_state aasm :state, whiny_transitions: false do state :in_progress, initial: true state :mastered state :failed state :awaiting_grading state :awaiting_instructor_grading state :not_valid any = [:in_progress, :mastered, :failed, :awaiting_grading, :awaiting_instructor_grading, :not_valid] after_all_events :update_activity_state #   # Events --------------------- event </text>
	<text fill="#FFFFFFFF" x="0.0" y="241">:master do transitions from: any - [:not_valid], to: :mastered, guard: :activity_mastery? after do self.log_event(EventTemplate::ATTEMPT_MASTERED, self.completed_at) self.save end end event :flop do transitions from: any - [:not_valid], to: :failed, guard: :activity_failure? after do self.log_event(EventTemplate::ATTEMPT_FAILED, self.completed_at) self.save end end event :finish do transitions fro</text>
	<text fill="#FFFFFFFF" x="0.0" y="242">m: [:in_progress, :failed, :awaiting_instructor_grading], to: :awaiting_instructor_grading, :guard =&gt; :requires_instructor_grading? transitions from: [:in_progress, :failed, :awaiting_grading], to: :awaiting_grading after do self.save end end event :start do transitions from: any - [:mastered, :failed, :not_valid], to: :in_progress after do self.log_event(EventTemplate::ATTEMPT_STARTED, self.start</text>
	<text fill="#FFFFFFFF" x="0.0" y="243">ed_at) self.save end end event :invalidate do transitions from: any - [:in_progress], to: :not_valid, guard: :can_be_invalidated? after do self.log_event(EventTemplate::ATTEMPT_STARTED, self.started_at) self.save end end end def can_be_invalidated? !self.in_progress? end def update_state_and_time_from_scores self.reload.set_performance_numbers self.save retry_after_lock_failure { self.master! || s</text>
	<text fill="#FFFFFFFF" x="0.0" y="244">elf.flop! || self.start! || true } end def update_activity_state self.user_activity.reload.update_state_and_time_from_attempts end def set_performance_numbers # Store the canonical score self.canonical_score = self.score_to_use # Update completion and start times, if necessary #  - (ideally these would have been updated already, but we need to do this to make it associative) unless self.canonical_</text>
	<text fill="#FFFFFFFF" x="0.0" y="245">score.nil? self.completed_at = self.canonical_score.scored_at if self.completed_at.nil? || self.canonical_score.scored_at &lt; self.completed_at self.started_at = self.canonical_score.scored_at   if self.started_at.nil?   || self.canonical_score.scored_at &lt; self.started_at end true end def score_to_use @score_to_use ||= self.activity_scores.first end def reload @score_to_use = nil super end def log_e</text>
	<text fill="#FFFFFFFF" x="0.0" y="246">vent(template_id, ts = nil, whodunnit_id = nil) attrs = { template_identifier: template_id, grouping_id: self.user_activity_id.to_s, whodunnit_id: whodunnit_id || current_user.try(:id), subject_id: self.id, subject_type: self.class.name, user_id: self.user_activity.try(:student_id), data_1: self.attempt_number, data_2: self.student_score_f } unless ts.nil? attrs[:created_at] = ts attrs[:updated_at</text>
	<text fill="#FFFFFFFF" x="0.0" y="247">] = ts end Event.publish(attrs) end def activity_mastery? !self.score_to_use.nil? &amp;&amp; self.score_to_use.student_score &gt;= self.mastery_score end def activity_failure? !self.score_to_use.nil? &amp;&amp; self.score_to_use.student_score &lt; self.mastery_score end def mark_invalid!(reason, comments) retry_after_lock_failure do self.invalid_reason = reason self.invalid_comments = comments self.invalidate! end end </text>
	<text fill="#FFFFFFFF" x="0.0" y="248">def start_work!(start_time = nil) retry_after_lock_failure do start_time ||= Time.current   # Just in case we were passed nil self.started_at = start_time if self.started_at.nil? || start_time &lt; self.started_at # Do not update start time unless earlier self.start! end end def submit_work!(submission_time = nil) retry_after_lock_failure do submission_time ||= Time.current self.completed_at = submis</text>
	<text fill="#FFFFFFFF" x="0.0" y="249">sion_time self.started_at = submission_time if</text>
	<text fill="#9F9F9FFF" x="27.599999999999998" y="249"> </text>
	<text fill="#7F7F7FFF" x="28.2" y="249">self.started_at.n</text>
	<text fill="#DFDFDFFF" x="38.4" y="249">i</text>
	<text fill="#FFFFFFFF" x="39.0" y="249">l? if !self.requires_</text>
	<text fill="#DFDFDFFF" x="51.6" y="249">i</text>
	<text fill="#7F7F7FFF" x="52.199999999999996" y="249">nstructor_grad</text>
	<text fill="#DFDFDFFF" x="60.599999999999994" y="249">i</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="249">ng? &amp;&amp; self.not_cdp_item? # If not a C</text>
	<text fill="#DFDFDFFF" x="84.0" y="249">D</text>
	<text fill="#7F7F7FFF" x="84.6" y="249">P item</text>
	<text fill="#3F3F3FFF" x="88.2" y="249"> and i</text>
	<text fill="#6F6F6FFF" x="91.8" y="249">t</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="249"> doesn't require instructor grading, then add a score and master create_score(100) self.master! else # Just finish self.finish! end end end # Add to our current duration def add_duration!(secs) UpdateUserStats::IncrementWorker.perform_async(self.</text>
	<text fill="#FFFFFFFF" x="0.0" y="250">class.name, self.id, secs) end # Add to the du</text>
	<text fill="#3F3F3FFF" x="27.599999999999998" y="250">r</text>
	<text fill="#000000FF" x="28.2" y="250">ation of the tree</text>
	<text fill="#BFBFBFFF" x="38.4" y="250">.</text>
	<text fill="#FFFFFFFF" x="39.0" y="250"> This will get get ca</text>
	<text fill="#BFBFBFFF" x="51.6" y="250">l</text>
	<text fill="#000000FF" x="52.199999999999996" y="250">led in an afte</text>
	<text fill="#BFBFBFFF" x="60.599999999999994" y="250">r</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="250">_save callback def percolate_duration </text>
	<text fill="#BFBFBFFF" x="84.0" y="250">s</text>
	<text fill="#000000FF" x="84.6" y="250">elf.user_act</text>
	<text fill="#3F3F3FFF" x="91.8" y="250">i</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="250">vity.add_duration!(self.duration_seconds - self.duration_seconds_was) if self.duration_seconds_changed? end # If there is no score, but the attempt is mastered, then return 100% for the score. def student_score self.try(:canonical_score).try(:stu</text>
	<text fill="#FFFFFFFF" x="0.0" y="251">dent_score) end def student_score_f r = self.s</text>
	<text fill="#3F3F3FFF" x="27.599999999999998" y="251">t</text>
	<text fill="#000000FF" x="28.2" y="251">udent_score (r.ni</text>
	<text fill="#BFBFBFFF" x="38.4" y="251">l</text>
	<text fill="#FFFFFFFF" x="39.0" y="251">?) ? nil : (r * 100).</text>
	<text fill="#BFBFBFFF" x="51.6" y="251">t</text>
	<text fill="#000000FF" x="52.199999999999996" y="251">o_f.round(2) e</text>
	<text fill="#BFBFBFFF" x="60.599999999999994" y="251">n</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="251">d def self.find_or_create_by_with_retr</text>
	<text fill="#CFCFCFFF" x="84.0" y="251">y</text>
	<text fill="#000000FF" x="84.6" y="251">!(attrs={}) </text>
	<text fill="#3F3F3FFF" x="91.8" y="251">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="251">elf.retry_after_lock_failure do attempt = find_or_create_by!(attrs) end end def mastery_score Rational(self.user_activity.learning_activity.mastery_score, 100) end def not_cdp_item? !self.user_activity.learning_activity.content_type.eql?(CdpItem.</text>
	<text fill="#FFFFFFFF" x="0.0" y="252">name) end def requires_instructor_grading? sel</text>
	<text fill="#8F8F8FFF" x="27.599999999999998" y="252">f</text>
	<text fill="#000000FF" x="28.2" y="252">.user_activity.l</text>
	<text fill="#1F1F1FFF" x="37.8" y="252">e</text>
	<text fill="#EFEFEFFF" x="38.4" y="252">a</text>
	<text fill="#FFFFFFFF" x="39.0" y="252">rning_activity.require</text>
	<text fill="#5F5F5FFF" x="52.199999999999996" y="252">s</text>
	<text fill="#000000FF" x="52.8" y="252">_instructor</text>
	<text fill="#0F0F0FFF" x="59.4" y="252">_</text>
	<text fill="#3F3F3FFF" x="60.0" y="252">g</text>
	<text fill="#DFDFDFFF" x="60.599999999999994" y="252">r</text>
	<text fill="#FFFFFFFF" x="61.199999999999996" y="252">ading end def readable_state READABLE_S</text>
	<text fill="#2F2F2FFF" x="84.6" y="252">T</text>
	<text fill="#000000FF" x="85.2" y="252">ATE_NAMES[s</text>
	<text fill="#3F3F3FFF" x="91.8" y="252">t</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="252">ate] || state end def self.pending_of_grading_by_activity(ids) select("user_activity_id, count(*) as total")</text>
	<text fill="#7F7F7FFF" x="157.2" y="252">.</text>
	<text fill="#1F1F1FFF" x="157.79999999999998" y="252">w</text>
	<text fill="#000000FF" x="158.4" y="252">he</text>
	<text fill="#2F2F2FFF" x="159.6" y="252">r</text>
	<text fill="#9F9F9FFF" x="160.2" y="252">e</text>
	<text fill="#FFFFFFFF" x="160.79999999999998" y="252">(user_activity_id: ids, state: "awaiting_instructor_grading").group("user_activity_id").collect { |x| [x.user_activity_id, x.total] </text>
	<text fill="#FFFFFFFF" x="0.0" y="253">}.to_h end def self.last_attempt_for_user_in_co</text>
	<text fill="#DFDFDFFF" x="28.2" y="253">h</text>
	<text fill="#9F9F9FFF" x="28.799999999999997" y="253">o</text>
	<text fill="#2F2F2FFF" x="29.4" y="253">r</text>
	<text fill="#000000FF" x="30.0" y="253">t(user_id,</text>
	<text fill="#0F0F0FFF" x="36.0" y="253"> </text>
	<text fill="#8F8F8FFF" x="36.6" y="253">c</text>
	<text fill="#BFBFBFFF" x="37.199999999999996" y="253">o</text>
	<text fill="#FFFFFFFF" x="37.8" y="253">hort_id) # Needed due per</text>
	<text fill="#EFEFEFFF" x="52.8" y="253">f</text>
	<text fill="#9F9F9FFF" x="53.4" y="253">o</text>
	<text fill="#0F0F0FFF" x="54.0" y="253">r</text>
	<text fill="#000000FF" x="54.6" y="253">mance i</text>
	<text fill="#7F7F7FFF" x="58.8" y="253">s</text>
	<text fill="#FFFFFFFF" x="59.4" y="253">sues and the lack of functionality of the u</text>
	<text fill="#BFBFBFFF" x="85.2" y="253">n</text>
	<text fill="#9F9F9FFF" x="85.8" y="253">e</text>
	<text fill="#1F1F1FFF" x="86.39999999999999" y="253">s</text>
	<text fill="#000000FF" x="87.0" y="253">coped me</text>
	<text fill="#3F3F3FFF" x="91.8" y="253">t</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="253">hod # that allow default scopes to be applied in joins joins = %{INNER JOIN user_activities ON user_activi</text>
	<text fill="#EFEFEFFF" x="156.0" y="253">t</text>
	<text fill="#2F2F2FFF" x="156.6" y="253">i</text>
	<text fill="#000000FF" x="157.2" y="253">es.id </text>
	<text fill="#5F5F5FFF" x="160.79999999999998" y="253">=</text>
	<text fill="#FFFFFFFF" x="161.4" y="253"> user_activity_attempts.user_activity_id INNER JOIN learning_activities ON learning_activities.id = user_activities.learning_activi</text>
	<text fill="#FFFFFFFF" x="0.0" y="254">ty_id INNER JOIN learning_activity_learning_objec</text>
	<text fill="#EFEFEFFF" x="29.4" y="254">t</text>
	<text fill="#2F2F2FFF" x="30.0" y="254">i</text>
	<text fill="#000000FF" x="30.599999999999998" y="254">ves ON le</text>
	<text fill="#AFAFAFFF" x="36.0" y="254">a</text>
	<text fill="#FFFFFFFF" x="36.6" y="254">rning_activity_learning_objec</text>
	<text fill="#8F8F8FFF" x="54.0" y="254">t</text>
	<text fill="#000000FF" x="54.6" y="254">ives.l</text>
	<text fill="#7F7F7FFF" x="58.199999999999996" y="254">e</text>
	<text fill="#FFFFFFFF" x="58.8" y="254">arning_activity_id =learning_activities.id INN</text>
	<text fill="#DFDFDFFF" x="86.39999999999999" y="254">E</text>
	<text fill="#000000FF" x="87.0" y="254">R JOIN l</text>
	<text fill="#3F3F3FFF" x="91.8" y="254">e</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="254">arning_objectives ON learning_objectives.id = learning_activity_learning_objectives.learning_objective_id </text>
	<text fill="#6F6F6FFF" x="156.0" y="254">I</text>
	<text fill="#000000FF" x="156.6" y="254">NNER JOI</text>
	<text fill="#8F8F8FFF" x="161.4" y="254">N</text>
	<text fill="#FFFFFFFF" x="162.0" y="254"> user_objectives ON user_objectives.learning_objective_id = learning_objectives.id INNER JOIN learning_plan_contexts ON learning_p</text>
	<text fill="#FFFFFFFF" x="0.0" y="255">lan_contexts.user_objective_id = user_objectives .</text>
	<text fill="#BFBFBFFF" x="30.0" y="255">i</text>
	<text fill="#000000FF" x="30.599999999999998" y="255">d} self.j</text>
	<text fill="#9F9F9FFF" x="36.0" y="255">o</text>
	<text fill="#FFFFFFFF" x="36.6" y="255">ins(joins) .where(learning_pl</text>
	<text fill="#BFBFBFFF" x="54.0" y="255">a</text>
	<text fill="#000000FF" x="54.6" y="255">n_con</text>
	<text fill="#3F3F3FFF" x="57.599999999999994" y="255">t</text>
	<text fill="#FFFFFFFF" x="58.199999999999996" y="255">exts: {cohort_id: cohort_id}, user_activities: {</text>
	<text fill="#3F3F3FFF" x="87.0" y="255">s</text>
	<text fill="#000000FF" x="87.6" y="255">tudent_</text>
	<text fill="#3F3F3FFF" x="91.8" y="255">i</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="255">d: user_id}) .order("user_activity_attempts.created_at desc") .limit(1) .distinct end def create_score(sc</text>
	<text fill="#EFEFEFFF" x="155.4" y="255">o</text>
	<text fill="#000000FF" x="156.0" y="255">re, maxim</text>
	<text fill="#1F1F1FFF" x="161.4" y="255">u</text>
	<text fill="#FFFFFFFF" x="162.0" y="255">m_score = 100) self.activity_scores.create( user_activity_id: self.user_activity_id, score: score, maximum_score: maximum_score, s</text>
	<text fill="#FFFFFFFF" x="0.0" y="256">cored_at: self.completed_at ) end end # == Schema I</text>
	<text fill="#2F2F2FFF" x="30.599999999999998" y="256">n</text>
	<text fill="#000000FF" x="31.2" y="256">formatio</text>
	<text fill="#5F5F5FFF" x="36.0" y="256">n</text>
	<text fill="#FFFFFFFF" x="36.6" y="256"> # # Table name: competency_p</text>
	<text fill="#9F9F9FFF" x="54.0" y="256">r</text>
	<text fill="#000000FF" x="54.6" y="256">ogram</text>
	<text fill="#BFBFBFFF" x="57.599999999999994" y="256">s</text>
	<text fill="#FFFFFFFF" x="58.199999999999996" y="256"> # #  id            :integer          not null, </text>
	<text fill="#3F3F3FFF" x="87.0" y="256">p</text>
	<text fill="#000000FF" x="87.6" y="256">rimary </text>
	<text fill="#3F3F3FFF" x="91.8" y="256">k</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="256">ey #  competency_id :integer          not null #  program_id    :integer          not null #  created_at </text>
	<text fill="#BFBFBFFF" x="155.4" y="256"> </text>
	<text fill="#000000FF" x="156.0" y="256">  :datetim</text>
	<text fill="#DFDFDFFF" x="162.0" y="256">e</text>
	<text fill="#FFFFFFFF" x="162.6" y="256"> #  updated_at </text>
	<text fill="#BFBFBFFF" x="171.6" y="256"> </text>
	<text fill="#9F9F9FFF" x="172.2" y="256"> </text>
	<text fill="#7F7F7FFF" x="172.79999999999998" y="256"> :d</text>
	<text fill="#5F5F5FFF" x="174.6" y="256">a</text>
	<text fill="#3F3F3FFF" x="175.2" y="256">t</text>
	<text fill="#CFCFCFFF" x="175.79999999999998" y="256">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="256">time # class CompetencyProgram &lt; ActiveRecord::Base belongs_to :program, :inverse_of =&gt; :competency_progra</text>
	<text fill="#FFFFFFFF" x="0.0" y="257">ms belongs_to :competency, :inverse_of =&gt; :competen</text>
	<text fill="#9F9F9FFF" x="30.599999999999998" y="257">c</text>
	<text fill="#000000FF" x="31.2" y="257">y_progra</text>
	<text fill="#0F0F0FFF" x="36.0" y="257">m</text>
	<text fill="#FFFFFFFF" x="36.6" y="257">s after_create :copy_acl prot</text>
	<text fill="#5F5F5FFF" x="54.0" y="257">e</text>
	<text fill="#000000FF" x="54.6" y="257">cted</text>
	<text fill="#3F3F3FFF" x="57.0" y="257"> </text>
	<text fill="#FFFFFFFF" x="57.599999999999994" y="257"># Ensure the CompetencyLibrtary has the same ACL </text>
	<text fill="#3F3F3FFF" x="87.0" y="257">a</text>
	<text fill="#000000FF" x="87.6" y="257">s me. T</text>
	<text fill="#3F3F3FFF" x="91.8" y="257">h</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="257">is will ensure that all competencies in the # library are accessible to the program. # # TODO: Verify thi</text>
	<text fill="#BFBFBFFF" x="155.4" y="257">s</text>
	<text fill="#000000FF" x="156.0" y="257"> is what w</text>
	<text fill="#BFBFBFFF" x="162.0" y="257">e</text>
	<text fill="#FFFFFFFF" x="162.6" y="257"> really want t</text>
	<text fill="#3F3F3FFF" x="171.0" y="257">o</text>
	<text fill="#000000FF" x="171.6" y="257"> do. # </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="257">d</text>
	<text fill="#FFFFFFFF" x="176.4" y="257">ef copy_acl self.program.copy_acl(self.competency.competency_library) end end # == Schema Information # # </text>
	<text fill="#FFFFFFFF" x="0.0" y="258">Table name: learning_activity_learning_objectives #</text>
	<text fill="#EFEFEFFF" x="30.599999999999998" y="258"> </text>
	<text fill="#0F0F0FFF" x="31.2" y="258">#</text>
	<text fill="#000000FF" x="31.799999999999997" y="258">  id    </text>
	<text fill="#AFAFAFFF" x="36.6" y="258"> </text>
	<text fill="#FFFFFFFF" x="37.199999999999996" y="258">               :integer     </text>
	<text fill="#1F1F1FFF" x="54.0" y="258"> </text>
	<text fill="#000000FF" x="54.6" y="258">    </text>
	<text fill="#9F9F9FFF" x="57.0" y="258">n</text>
	<text fill="#FFFFFFFF" x="57.599999999999994" y="258">ot null, primary key #  learning_activity_id  :in</text>
	<text fill="#3F3F3FFF" x="87.0" y="258">t</text>
	<text fill="#000000FF" x="87.6" y="258">eger   </text>
	<text fill="#3F3F3FFF" x="91.8" y="258"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="258">      not null #  learning_objective_id :integer          not null #  created_at            :datetime    </text>
	<text fill="#CFCFCFFF" x="155.4" y="258"> </text>
	<text fill="#000000FF" x="156.0" y="258">    not nu</text>
	<text fill="#FFFFFFFF" x="162.0" y="258">ll #  updated_a</text>
	<text fill="#000000FF" x="171.0" y="258">t       </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="258"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="258">    :datetime         not null #  weight                :integer          default(0), not null #  position</text>
	<text fill="#FFFFFFFF" x="0.0" y="259">              :integer # class LearningActivityLearn</text>
	<text fill="#5F5F5FFF" x="31.2" y="259">i</text>
	<text fill="#000000FF" x="31.799999999999997" y="259">ngObject</text>
	<text fill="#5F5F5FFF" x="36.6" y="259">i</text>
	<text fill="#FFFFFFFF" x="37.199999999999996" y="259">ve &lt; ActiveRecord::Base bel</text>
	<text fill="#BFBFBFFF" x="53.4" y="259">o</text>
	<text fill="#000000FF" x="54.0" y="259">ngs_</text>
	<text fill="#0F0F0FFF" x="56.4" y="259">t</text>
	<text fill="#FFFFFFFF" x="57.0" y="259">o :learning_activity, inverse_of: :learning_activi</text>
	<text fill="#3F3F3FFF" x="87.0" y="259">t</text>
	<text fill="#000000FF" x="87.6" y="259">y_learn</text>
	<text fill="#3F3F3FFF" x="91.8" y="259">i</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="259">ng_objectives belongs_to :learning_objective, inverse_of: :learning_activity_learning_objectives validates</text>
	<text fill="#1F1F1FFF" x="156.0" y="259">_</text>
	<text fill="#000000FF" x="156.6" y="259">presence</text>
	<text fill="#5F5F5FFF" x="161.4" y="259">_</text>
	<text fill="#FFFFFFFF" x="162.0" y="259">of :learning_ac</text>
	<text fill="#000000FF" x="171.0" y="259">tivity, </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="259">:</text>
	<text fill="#FFFFFFFF" x="176.4" y="259">learning_objective validates_numericality_of :weight, :only_integer =&gt; true, :allow_nil =&gt; false, :greater</text>
	<text fill="#FFFFFFFF" x="0.0" y="260">_than_or_equal_to =&gt; 0, :message =&gt; "must be a non-n</text>
	<text fill="#BFBFBFFF" x="31.2" y="260">e</text>
	<text fill="#000000FF" x="31.799999999999997" y="260">gative in</text>
	<text fill="#EFEFEFFF" x="37.199999999999996" y="260">t</text>
	<text fill="#FFFFFFFF" x="37.8" y="260">eger" acts_as_list scope: </text>
	<text fill="#5F5F5FFF" x="53.4" y="260">:</text>
	<text fill="#000000FF" x="54.0" y="260">lear</text>
	<text fill="#5F5F5FFF" x="56.4" y="260">n</text>
	<text fill="#FFFFFFFF" x="57.0" y="260">ing_objective_id after_create :copy_acl scope :wei</text>
	<text fill="#3F3F3FFF" x="87.0" y="260">g</text>
	<text fill="#000000FF" x="87.6" y="260">hted, -</text>
	<text fill="#3F3F3FFF" x="91.8" y="260">&gt;</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="260"> { where("weight &gt; 0") } protected # Ensure the LA has the same ACL as the LO def copy_acl self.learning_o</text>
	<text fill="#BFBFBFFF" x="156.0" y="260">b</text>
	<text fill="#000000FF" x="156.6" y="260">jective</text>
	<text fill="#0F0F0FFF" x="160.79999999999998" y="260">.</text>
	<text fill="#DFDFDFFF" x="161.4" y="260">c</text>
	<text fill="#FFFFFFFF" x="162.0" y="260">opy_acl(self.le</text>
	<text fill="#000000FF" x="171.0" y="260">arning_a</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="260">c</text>
	<text fill="#FFFFFFFF" x="176.4" y="260">tivity) end end # == Schema Information # # Table name: institutions # #  id                              </text>
	<text fill="#FFFFFFFF" x="0.0" y="261">:integer          not null, primary key #  name      </text>
	<text fill="#1F1F1FFF" x="31.799999999999997" y="261"> </text>
	<text fill="#000000FF" x="32.4" y="261">        </text>
	<text fill="#9F9F9FFF" x="37.199999999999996" y="261"> </text>
	<text fill="#FFFFFFFF" x="37.8" y="261">            :string(255) </text>
	<text fill="#EFEFEFFF" x="52.8" y="261"> </text>
	<text fill="#0F0F0FFF" x="53.4" y="261"> </text>
	<text fill="#000000FF" x="54.0" y="261">   n</text>
	<text fill="#CFCFCFFF" x="56.4" y="261">o</text>
	<text fill="#FFFFFFFF" x="57.0" y="261">t null #  address1                        :string(</text>
	<text fill="#3F3F3FFF" x="87.0" y="261">2</text>
	<text fill="#000000FF" x="87.6" y="261">55) #  </text>
	<text fill="#3F3F3FFF" x="91.8" y="261">c</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="261">ity                            :string(255) #  state                           :string(255) #  postal_code </text>
	<text fill="#AFAFAFFF" x="156.6" y="261"> </text>
	<text fill="#0F0F0FFF" x="157.2" y="261"> </text>
	<text fill="#000000FF" x="157.79999999999998" y="261">    </text>
	<text fill="#2F2F2FFF" x="160.2" y="261"> </text>
	<text fill="#CFCFCFFF" x="160.79999999999998" y="261"> </text>
	<text fill="#FFFFFFFF" x="161.4" y="261">            :str</text>
	<text fill="#000000FF" x="171.0" y="261">ing(255)</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="261"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="261">#  contact                         :string(255) #  contact_phone                   :string(255) #  contact</text>
	<text fill="#FFFFFFFF" x="0.0" y="262">_email                   :string(255) #  ancestry    </text>
	<text fill="#7F7F7FFF" x="31.799999999999997" y="262"> </text>
	<text fill="#000000FF" x="32.4" y="262">        </text>
	<text fill="#2F2F2FFF" x="37.199999999999996" y="262"> </text>
	<text fill="#FFFFFFFF" x="37.8" y="262">          :string(255) # </text>
	<text fill="#9F9F9FFF" x="52.8" y="262"> </text>
	<text fill="#000000FF" x="53.4" y="262">crea</text>
	<text fill="#2F2F2FFF" x="55.8" y="262">t</text>
	<text fill="#FFFFFFFF" x="56.4" y="262">ed_at                      :datetime         not nu</text>
	<text fill="#3F3F3FFF" x="87.0" y="262">l</text>
	<text fill="#000000FF" x="87.6" y="262">l #  up</text>
	<text fill="#3F3F3FFF" x="91.8" y="262">d</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="262">ated_at                      :datetime         not null #  time_zone                       :string(255)      </text>
	<text fill="#AFAFAFFF" x="157.79999999999998" y="262">d</text>
	<text fill="#7F7F7FFF" x="158.4" y="262">ef</text>
	<text fill="#AFAFAFFF" x="159.6" y="262">a</text>
	<text fill="#FFFFFFFF" x="160.2" y="262">ult("Eastern Time </text>
	<text fill="#000000FF" x="171.0" y="262">(US &amp; Ca</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="262">n</text>
	<text fill="#FFFFFFFF" x="176.4" y="262">ada)"), not null #  institution_type                :string(255) #  address2                        :strin</text>
	<text fill="#FFFFFFFF" x="0.0" y="263">g(255) #  eocustomer                      :string(5) </text>
	<text fill="#DFDFDFFF" x="31.799999999999997" y="263"> </text>
	<text fill="#000000FF" x="32.4" y="263">      not</text>
	<text fill="#DFDFDFFF" x="37.8" y="263"> </text>
	<text fill="#FFFFFFFF" x="38.4" y="263">null #  enabled         </text>
	<text fill="#3F3F3FFF" x="52.8" y="263"> </text>
	<text fill="#000000FF" x="53.4" y="263">    </text>
	<text fill="#8F8F8FFF" x="55.8" y="263"> </text>
	<text fill="#FFFFFFFF" x="56.4" y="263">          :boolean          default(TRUE), not null</text>
	<text fill="#3F3F3FFF" x="87.0" y="263"> </text>
	<text fill="#000000FF" x="87.6" y="263">#  addr</text>
	<text fill="#3F3F3FFF" x="91.8" y="263">e</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="263">ss_id                      :integer #  lti_oauth_consumer_key          :string(255) #  lti_oauth_consumer_secret       :string(255)</text>
	<text fill="#000000FF" x="171.0" y="263"> #  whit</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="263">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="263">_label_folder              :string(255) #  inactivity_days                 :integer          default(7) # </text>
	<text fill="#FFFFFFFF" x="0.0" y="264"> instructor_inactivity_days      :integer          def</text>
	<text fill="#3F3F3FFF" x="32.4" y="264">a</text>
	<text fill="#000000FF" x="33.0" y="264">ult(5), </text>
	<text fill="#6F6F6FFF" x="37.8" y="264">n</text>
	<text fill="#FFFFFFFF" x="38.4" y="264">ot null #  days_to_disp</text>
	<text fill="#DFDFDFFF" x="52.199999999999996" y="264">l</text>
	<text fill="#000000FF" x="52.8" y="264">ay_ex</text>
	<text fill="#EFEFEFFF" x="55.8" y="264">p</text>
	<text fill="#FFFFFFFF" x="56.4" y="264">ired_cohorts :integer          default(0) #  demo_i</text>
	<text fill="#3F3F3FFF" x="87.0" y="264">n</text>
	<text fill="#000000FF" x="87.6" y="264">stituti</text>
	<text fill="#3F3F3FFF" x="91.8" y="264">o</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="264">n                :boolean          default(FALSE) #  dns_name                        :string(255) #  display_grades                </text>
	<text fill="#000000FF" x="171.0" y="264">  :boole</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="264">a</text>
	<text fill="#FFFFFFFF" x="176.4" y="264">n          default(FALSE) #  webex                           :boolean          default(FALSE) #  webex_id </text>
	<text fill="#FFFFFFFF" x="0.0" y="265">                       :string #  webex_site_id       </text>
	<text fill="#9F9F9FFF" x="32.4" y="265"> </text>
	<text fill="#000000FF" x="33.0" y="265">        </text>
	<text fill="#1F1F1FFF" x="37.8" y="265"> </text>
	<text fill="#FFFFFFFF" x="38.4" y="265">  :integer #  webex_sit</text>
	<text fill="#7F7F7FFF" x="52.199999999999996" y="265">e</text>
	<text fill="#000000FF" x="52.8" y="265">_nam</text>
	<text fill="#5F5F5FFF" x="55.199999999999996" y="265">e</text>
	<text fill="#FFFFFFFF" x="55.8" y="265">                 :string #  webex_partner_id        </text>
	<text fill="#3F3F3FFF" x="87.0" y="265"> </text>
	<text fill="#000000FF" x="87.6" y="265">       </text>
	<text fill="#3F3F3FFF" x="91.8" y="265">:</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="265">string #  help_desk_email                 :string           default("tcmsupport@meteorlearning.com") #  help_desk_phone_number    </text>
	<text fill="#DFDFDFFF" x="170.4" y="265"> </text>
	<text fill="#000000FF" x="171.0" y="265">     :st</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="265">r</text>
	<text fill="#FFFFFFFF" x="176.4" y="265">ing           default("800-501-2578") # class Institution &lt; ActiveRecord::Base TYPE_ROOT      = 'Root' TYP</text>
	<text fill="#FFFFFFFF" x="0.0" y="266">E_HIGHER_ED = 'Higher Ed' TYPE_K12       = 'K12' TYPE_</text>
	<text fill="#EFEFEFFF" x="32.4" y="266">P</text>
	<text fill="#0F0F0FFF" x="33.0" y="266">A</text>
	<text fill="#000000FF" x="33.6" y="266">RTNER   </text>
	<text fill="#AFAFAFFF" x="38.4" y="266">=</text>
	<text fill="#FFFFFFFF" x="39.0" y="266"> 'Partner/Reseller' at</text>
	<text fill="#1F1F1FFF" x="52.199999999999996" y="266">t</text>
	<text fill="#000000FF" x="52.8" y="266">r_ac</text>
	<text fill="#AFAFAFFF" x="55.199999999999996" y="266">c</text>
	<text fill="#FFFFFFFF" x="55.8" y="266">essor :update_descendants, :update_cohorts validates</text>
	<text fill="#3F3F3FFF" x="87.0" y="266"> </text>
	<text fill="#000000FF" x="87.6" y="266">:eocust</text>
	<text fill="#3F3F3FFF" x="91.8" y="266">o</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="266">mer, :institution_type, :name, :time_zone, presence: true validates :name, length: {in: 0..100}, allow_blank: true validates :cont</text>
	<text fill="#AFAFAFFF" x="170.4" y="266">a</text>
	<text fill="#000000FF" x="171.0" y="266">ct, leng</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="266">t</text>
	<text fill="#FFFFFFFF" x="176.4" y="266">h: {in: 0..100}, allow_blank: true validates :contact_phone, phone: true, allow_blank: true validates :con</text>
	<text fill="#FFFFFFFF" x="0.0" y="267">tact_email, email: true, allow_blank: true validates :e</text>
	<text fill="#5F5F5FFF" x="33.0" y="267">o</text>
	<text fill="#000000FF" x="33.6" y="267">customer</text>
	<text fill="#5F5F5FFF" x="38.4" y="267">,</text>
	<text fill="#FFFFFFFF" x="39.0" y="267"> length: {is: 5}, for</text>
	<text fill="#BFBFBFFF" x="51.6" y="267">m</text>
	<text fill="#000000FF" x="52.199999999999996" y="267">at: </text>
	<text fill="#1F1F1FFF" x="54.6" y="267">{</text>
	<text fill="#FFFFFFFF" x="55.199999999999996" y="267"> with: /\A[a-z0-9]+</text>
	<text fill="#EFEFEFFF" x="66.6" y="267">\</text>
	<text fill="#BFBFBFFF" x="67.2" y="267">z</text>
	<text fill="#7F7F7FFF" x="67.8" y="267">/</text>
	<text fill="#5F5F5FFF" x="68.39999999999999" y="267">i</text>
	<text fill="#3F3F3FFF" x="69.0" y="267"> }, u</text>
	<text fill="#7F7F7FFF" x="72.0" y="267">n</text>
	<text fill="#9F9F9FFF" x="72.6" y="267">i</text>
	<text fill="#DFDFDFFF" x="73.2" y="267">q</text>
	<text fill="#FFFFFFFF" x="73.8" y="267">ueness: true validates</text>
	<text fill="#3F3F3FFF" x="87.0" y="267">_</text>
	<text fill="#000000FF" x="87.6" y="267">numeric</text>
	<text fill="#3F3F3FFF" x="91.8" y="267">a</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="267">lity_of :days_to_display_e</text>
	<text fill="#BFBFBFFF" x="108.0" y="267">x</text>
	<text fill="#7F7F7FFF" x="108.6" y="267">p</text>
	<text fill="#6F6F6FFF" x="109.2" y="267">i</text>
	<text fill="#3F3F3FFF" x="109.8" y="267">red_c</text>
	<text fill="#6F6F6FFF" x="112.8" y="267">o</text>
	<text fill="#8F8F8FFF" x="113.39999999999999" y="267">h</text>
	<text fill="#BFBFBFFF" x="114.0" y="267">o</text>
	<text fill="#FFFFFFFF" x="114.6" y="267">rts, greater_than_or_equal_to: 0 valid</text>
	<text fill="#DFDFDFFF" x="137.4" y="267">a</text>
	<text fill="#AFAFAFFF" x="138.0" y="267">t</text>
	<text fill="#7F7F7FFF" x="138.6" y="267">e</text>
	<text fill="#5F5F5FFF" x="139.2" y="267">s</text>
	<text fill="#3F3F3FFF" x="139.79999999999998" y="267"> :tim</text>
	<text fill="#7F7F7FFF" x="142.79999999999998" y="267">e</text>
	<text fill="#8F8F8FFF" x="143.4" y="267">_</text>
	<text fill="#BFBFBFFF" x="144.0" y="267">z</text>
	<text fill="#FFFFFFFF" x="144.6" y="267">one, inclusion: { in: ActiveSupport::TimeZ</text>
	<text fill="#EFEFEFFF" x="169.79999999999998" y="267">o</text>
	<text fill="#2F2F2FFF" x="170.4" y="267">n</text>
	<text fill="#000000FF" x="171.0" y="267">e.us_zon</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="267">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="267">s.map(&amp;:name), message: "%{value} is not a valid US Time Zone"} validates :webex_site_id, :webex_site_name</text>
	<text fill="#FFFFFFFF" x="0.0" y="268">, presence: true, if: proc {|institution| institution.t</text>
	<text fill="#BFBFBFFF" x="33.0" y="268">r</text>
	<text fill="#000000FF" x="33.6" y="268">y(:webex?</text>
	<text fill="#EFEFEFFF" x="39.0" y="268">)</text>
	<text fill="#FFFFFFFF" x="39.6" y="268"> } validates :help_d</text>
	<text fill="#5F5F5FFF" x="51.6" y="268">e</text>
	<text fill="#000000FF" x="52.199999999999996" y="268">sk_p</text>
	<text fill="#7F7F7FFF" x="54.6" y="268">h</text>
	<text fill="#FFFFFFFF" x="55.199999999999996" y="268">one_number, phon</text>
	<text fill="#EFEFEFFF" x="64.8" y="268">e</text>
	<text fill="#9F9F9FFF" x="65.39999999999999" y="268">:</text>
	<text fill="#3F3F3FFF" x="66.0" y="268"> </text>
	<text fill="#000000FF" x="66.6" y="268">true, allow_</text>
	<text fill="#2F2F2FFF" x="73.8" y="268">b</text>
	<text fill="#8F8F8FFF" x="74.39999999999999" y="268">l</text>
	<text fill="#EFEFEFFF" x="75.0" y="268">a</text>
	<text fill="#FFFFFFFF" x="75.6" y="268">nk: true validates </text>
	<text fill="#3F3F3FFF" x="87.0" y="268">:</text>
	<text fill="#000000FF" x="87.6" y="268">help_de</text>
	<text fill="#3F3F3FFF" x="91.8" y="268">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="268">k_email, email: true, a</text>
	<text fill="#AFAFAFFF" x="106.2" y="268">l</text>
	<text fill="#4F4F4FFF" x="106.8" y="268">l</text>
	<text fill="#000000FF" x="107.39999999999999" y="268">ow_blank: tru</text>
	<text fill="#4F4F4FFF" x="115.19999999999999" y="268">e</text>
	<text fill="#9F9F9FFF" x="115.8" y="268"> </text>
	<text fill="#FFFFFFFF" x="116.39999999999999" y="268">has_many :users has_many :cohort</text>
	<text fill="#DFDFDFFF" x="135.6" y="268">s</text>
	<text fill="#7F7F7FFF" x="136.2" y="268"> </text>
	<text fill="#2F2F2FFF" x="136.79999999999998" y="268">h</text>
	<text fill="#000000FF" x="137.4" y="268">as_many :inst</text>
	<text fill="#4F4F4FFF" x="145.2" y="268">i</text>
	<text fill="#9F9F9FFF" x="145.79999999999998" y="268">t</text>
	<text fill="#FFFFFFFF" x="146.4" y="268">ution_acls, :</text>
	<text fill="#9F9F9FFF" x="154.2" y="268">i</text>
	<text fill="#7F7F7FFF" x="154.79999999999998" y="268">nve</text>
	<text fill="#5F5F5FFF" x="156.6" y="268">r</text>
	<text fill="#3F3F3FFF" x="157.2" y="268">se_of =</text>
	<text fill="#6F6F6FFF" x="161.4" y="268">&gt;</text>
	<text fill="#FFFFFFFF" x="162.0" y="268"> :instituti</text>
	<text fill="#EFEFEFFF" x="168.6" y="268">o</text>
	<text fill="#9F9F9FFF" x="169.2" y="268">n</text>
	<text fill="#2F2F2FFF" x="169.79999999999998" y="268"> </text>
	<text fill="#000000FF" x="170.4" y="268">has_many </text>
	<text fill="#5F5F5FFF" x="175.79999999999998" y="268">:</text>
	<text fill="#7F7F7FFF" x="176.4" y="268">programs,</text>
	<text fill="#DFDFDFFF" x="181.79999999999998" y="268"> </text>
	<text fill="#FFFFFFFF" x="182.4" y="268"> -&gt;</text>
	<text fill="#DFDFDFFF" x="184.2" y="268"> </text>
	<text fill="#7F7F7FFF" x="184.79999999999998" y="268">{ skip_institution_</text>
	<text fill="#DFDFDFFF" x="196.2" y="268">s</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="268">ecured }, </text>
	<text fill="#9F9F9FFF" x="202.79999999999998" y="268">:</text>
	<text fill="#7F7F7FFF" x="203.4" y="268">through =&gt; :in</text>
	<text fill="#9F9F9FFF" x="211.79999999999998" y="268">s</text>
	<text fill="#FFFFFFFF" x="212.4" y="268">titution_acls, :source =&gt; :subject, :source_ty</text>
	<text fill="#FFFFFFFF" x="0.0" y="269">pe =&gt; 'Program' has_many :competency_libraries, -&gt; { ski</text>
	<text fill="#1F1F1FFF" x="33.6" y="269">p</text>
	<text fill="#000000FF" x="34.199999999999996" y="269">_institu</text>
	<text fill="#9F9F9FFF" x="39.0" y="269">t</text>
	<text fill="#FFFFFFFF" x="39.6" y="269">ion_secured }, :thr</text>
	<text fill="#EFEFEFFF" x="51.0" y="269">o</text>
	<text fill="#000000FF" x="51.6" y="269">ugh =</text>
	<text fill="#DFDFDFFF" x="54.6" y="269">&gt;</text>
	<text fill="#FFFFFFFF" x="55.199999999999996" y="269"> :institution_</text>
	<text fill="#EFEFEFFF" x="63.599999999999994" y="269">a</text>
	<text fill="#7F7F7FFF" x="64.2" y="269">c</text>
	<text fill="#0F0F0FFF" x="64.8" y="269">l</text>
	<text fill="#000000FF" x="65.39999999999999" y="269">s, :source =&gt; :s</text>
	<text fill="#0F0F0FFF" x="75.0" y="269">u</text>
	<text fill="#7F7F7FFF" x="75.6" y="269">b</text>
	<text fill="#FFFFFFFF" x="76.2" y="269">ject, :source_type</text>
	<text fill="#3F3F3FFF" x="87.0" y="269"> </text>
	<text fill="#000000FF" x="87.6" y="269">=&gt; 'Com</text>
	<text fill="#3F3F3FFF" x="91.8" y="269">p</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="269">etencyLibrary' has_ma</text>
	<text fill="#9F9F9FFF" x="105.0" y="269">n</text>
	<text fill="#1F1F1FFF" x="105.6" y="269">y</text>
	<text fill="#000000FF" x="106.2" y="269"> :competencies, -</text>
	<text fill="#0F0F0FFF" x="116.39999999999999" y="269">&gt;</text>
	<text fill="#7F7F7FFF" x="117.0" y="269"> </text>
	<text fill="#EFEFEFFF" x="117.6" y="269">{</text>
	<text fill="#FFFFFFFF" x="118.19999999999999" y="269"> skip_institution_secured }</text>
	<text fill="#BFBFBFFF" x="134.4" y="269">,</text>
	<text fill="#4F4F4FFF" x="135.0" y="269"> </text>
	<text fill="#000000FF" x="135.6" y="269">:through =&gt; :insti</text>
	<text fill="#0F0F0FFF" x="146.4" y="269">t</text>
	<text fill="#8F8F8FFF" x="147.0" y="269">u</text>
	<text fill="#FFFFFFFF" x="147.6" y="269">tion_acls, </text>
	<text fill="#3F3F3FFF" x="154.2" y="269">:</text>
	<text fill="#000000FF" x="154.79999999999998" y="269">source =&gt; :</text>
	<text fill="#3F3F3FFF" x="161.4" y="269">s</text>
	<text fill="#FFFFFFFF" x="162.0" y="269">ubject, :</text>
	<text fill="#CFCFCFFF" x="167.4" y="269">s</text>
	<text fill="#2F2F2FFF" x="168.0" y="269">o</text>
	<text fill="#000000FF" x="168.6" y="269">urce_type =&gt; 'Competen</text>
	<text fill="#BFBFBFFF" x="181.79999999999998" y="269">c</text>
	<text fill="#FFFFFFFF" x="182.4" y="269">y' </text>
	<text fill="#BFBFBFFF" x="184.2" y="269">h</text>
	<text fill="#000000FF" x="184.79999999999998" y="269">as_many :curriculum</text>
	<text fill="#BFBFBFFF" x="196.2" y="269">s</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="269">, -&gt; { ski</text>
	<text fill="#3F3F3FFF" x="202.79999999999998" y="269">p</text>
	<text fill="#000000FF" x="203.4" y="269">_institution_s</text>
	<text fill="#3F3F3FFF" x="211.79999999999998" y="269">e</text>
	<text fill="#FFFFFFFF" x="212.4" y="269">cured }, :through =&gt; :institution_acls, :sourc</text>
	<text fill="#FFFFFFFF" x="0.0" y="270">e =&gt; :subject, :source_type =&gt; 'Curriculum' has_many :le</text>
	<text fill="#7F7F7FFF" x="33.6" y="270">a</text>
	<text fill="#000000FF" x="34.199999999999996" y="270">rning_ob</text>
	<text fill="#2F2F2FFF" x="39.0" y="270">j</text>
	<text fill="#FFFFFFFF" x="39.6" y="270">ectives, -&gt; { skip_</text>
	<text fill="#9F9F9FFF" x="51.0" y="270">i</text>
	<text fill="#000000FF" x="51.6" y="270">nsti</text>
	<text fill="#4F4F4FFF" x="54.0" y="270">t</text>
	<text fill="#FFFFFFFF" x="54.6" y="270">ution_secured </text>
	<text fill="#BFBFBFFF" x="63.0" y="270">}</text>
	<text fill="#1F1F1FFF" x="63.599999999999994" y="270">,</text>
	<text fill="#000000FF" x="64.2" y="270"> :through =&gt; :instit</text>
	<text fill="#2F2F2FFF" x="76.2" y="270">u</text>
	<text fill="#DFDFDFFF" x="76.8" y="270">t</text>
	<text fill="#FFFFFFFF" x="77.39999999999999" y="270">ion_acls, :sourc</text>
	<text fill="#3F3F3FFF" x="87.0" y="270">e</text>
	<text fill="#000000FF" x="87.6" y="270"> =&gt; :su</text>
	<text fill="#3F3F3FFF" x="91.8" y="270">b</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="270">ject, :source_type </text>
	<text fill="#CFCFCFFF" x="103.8" y="270">=</text>
	<text fill="#2F2F2FFF" x="104.39999999999999" y="270">&gt;</text>
	<text fill="#000000FF" x="105.0" y="270"> 'Learni</text>
	<text fill="#3F3F3FFF" x="109.8" y="270">n</text>
	<text fill="#4F4F4FFF" x="110.39999999999999" y="270">g</text>
	<text fill="#7F7F7FFF" x="111.0" y="270">O</text>
	<text fill="#4F4F4FFF" x="111.6" y="270">b</text>
	<text fill="#3F3F3FFF" x="112.2" y="270">j</text>
	<text fill="#000000FF" x="112.8" y="270">ective' </text>
	<text fill="#0F0F0FFF" x="117.6" y="270">h</text>
	<text fill="#AFAFAFFF" x="118.19999999999999" y="270">a</text>
	<text fill="#FFFFFFFF" x="118.8" y="270">s_many :learning_activit</text>
	<text fill="#EFEFEFFF" x="133.2" y="270">i</text>
	<text fill="#5F5F5FFF" x="133.79999999999998" y="270">e</text>
	<text fill="#000000FF" x="134.4" y="270">s, -&gt; { </text>
	<text fill="#1F1F1FFF" x="139.2" y="270">s</text>
	<text fill="#3F3F3FFF" x="139.79999999999998" y="270">k</text>
	<text fill="#7F7F7FFF" x="140.4" y="270">i</text>
	<text fill="#4F4F4FFF" x="141.0" y="270">p</text>
	<text fill="#3F3F3FFF" x="141.6" y="270">_</text>
	<text fill="#000000FF" x="142.2" y="270">instituti</text>
	<text fill="#3F3F3FFF" x="147.6" y="270">o</text>
	<text fill="#EFEFEFFF" x="148.2" y="270">n</text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="270">_secured </text>
	<text fill="#3F3F3FFF" x="154.2" y="270">}</text>
	<text fill="#000000FF" x="154.79999999999998" y="270">, :through </text>
	<text fill="#3F3F3FFF" x="161.4" y="270">=</text>
	<text fill="#FFFFFFFF" x="162.0" y="270">&gt; :instit</text>
	<text fill="#0F0F0FFF" x="167.4" y="270">u</text>
	<text fill="#000000FF" x="168.0" y="270">tion_acls, :source =&gt; :</text>
	<text fill="#BFBFBFFF" x="181.79999999999998" y="270">s</text>
	<text fill="#FFFFFFFF" x="182.4" y="270">ubj</text>
	<text fill="#BFBFBFFF" x="184.2" y="270">e</text>
	<text fill="#000000FF" x="184.79999999999998" y="270">ct, :source_type =&gt;</text>
	<text fill="#BFBFBFFF" x="196.2" y="270"> </text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="270">'LearningA</text>
	<text fill="#3F3F3FFF" x="202.79999999999998" y="270">c</text>
	<text fill="#000000FF" x="203.4" y="270">tivity' has_ma</text>
	<text fill="#4F4F4FFF" x="211.79999999999998" y="270">n</text>
	<text fill="#FFFFFFFF" x="212.4" y="270">y :rubrics, -&gt; { skip_institution_secured }, :</text>
	<text fill="#FFFFFFFF" x="0.0" y="271">through =&gt; :institution_acls, :source =&gt; :subject, :sour</text>
	<text fill="#DFDFDFFF" x="33.6" y="271">c</text>
	<text fill="#000000FF" x="34.199999999999996" y="271">e_type =&gt;</text>
	<text fill="#DFDFDFFF" x="39.6" y="271"> </text>
	<text fill="#FFFFFFFF" x="40.199999999999996" y="271">'Rubric' has_ances</text>
	<text fill="#2F2F2FFF" x="51.0" y="271">t</text>
	<text fill="#000000FF" x="51.6" y="271">ry a</text>
	<text fill="#9F9F9FFF" x="54.0" y="271">c</text>
	<text fill="#FFFFFFFF" x="54.6" y="271">ts_as_tagger </text>
	<text fill="#6F6F6FFF" x="62.4" y="271">b</text>
	<text fill="#000000FF" x="63.0" y="271">efore_c</text>
	<text fill="#0F0F0FFF" x="67.2" y="271">r</text>
	<text fill="#6F6F6FFF" x="67.8" y="271">e</text>
	<text fill="#AFAFAFFF" x="68.39999999999999" y="271">a</text>
	<text fill="#EFEFEFFF" x="69.0" y="271">t</text>
	<text fill="#FFFFFFFF" x="69.6" y="271">e </text>
	<text fill="#CFCFCFFF" x="70.8" y="271">:</text>
	<text fill="#9F9F9FFF" x="71.39999999999999" y="271">g</text>
	<text fill="#3F3F3FFF" x="72.0" y="271">e</text>
	<text fill="#000000FF" x="72.6" y="271">nerate_</text>
	<text fill="#0F0F0FFF" x="76.8" y="271">l</text>
	<text fill="#CFCFCFFF" x="77.39999999999999" y="271">t</text>
	<text fill="#FFFFFFFF" x="78.0" y="271">i_oauth_consume</text>
	<text fill="#3F3F3FFF" x="87.0" y="271">r</text>
	<text fill="#000000FF" x="87.6" y="271">_info b</text>
	<text fill="#3F3F3FFF" x="91.8" y="271">e</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="271">fore_save :set_def</text>
	<text fill="#8F8F8FFF" x="103.2" y="271">a</text>
	<text fill="#000000FF" x="103.8" y="271">ult_whi</text>
	<text fill="#1F1F1FFF" x="108.0" y="271">t</text>
	<text fill="#9F9F9FFF" x="108.6" y="271">e</text>
	<text fill="#EFEFEFFF" x="109.2" y="271">_</text>
	<text fill="#FFFFFFFF" x="109.8" y="271">label </text>
	<text fill="#9F9F9FFF" x="113.39999999999999" y="271">b</text>
	<text fill="#3F3F3FFF" x="114.0" y="271">e</text>
	<text fill="#000000FF" x="114.6" y="271">fore_sa</text>
	<text fill="#4F4F4FFF" x="118.8" y="271">v</text>
	<text fill="#EFEFEFFF" x="119.39999999999999" y="271">e</text>
	<text fill="#FFFFFFFF" x="120.0" y="271"> :update_children, if</text>
	<text fill="#AFAFAFFF" x="132.6" y="271">:</text>
	<text fill="#0F0F0FFF" x="133.2" y="271"> </text>
	<text fill="#000000FF" x="133.79999999999998" y="271">:candi</text>
	<text fill="#0F0F0FFF" x="137.4" y="271">d</text>
	<text fill="#7F7F7FFF" x="138.0" y="271">a</text>
	<text fill="#DFDFDFFF" x="138.6" y="271">t</text>
	<text fill="#FFFFFFFF" x="139.2" y="271">e_to_</text>
	<text fill="#EFEFEFFF" x="142.2" y="271">u</text>
	<text fill="#7F7F7FFF" x="142.79999999999998" y="271">p</text>
	<text fill="#000000FF" x="143.4" y="271">date_chi</text>
	<text fill="#2F2F2FFF" x="148.2" y="271">l</text>
	<text fill="#EFEFEFFF" x="148.79999999999998" y="271">d</text>
	<text fill="#FFFFFFFF" x="149.4" y="271">ren? bef</text>
	<text fill="#AFAFAFFF" x="154.2" y="271">o</text>
	<text fill="#000000FF" x="154.79999999999998" y="271">re_save :up</text>
	<text fill="#3F3F3FFF" x="161.4" y="271">d</text>
	<text fill="#FFFFFFFF" x="162.0" y="271">ate_all_c</text>
	<text fill="#000000FF" x="167.4" y="271">ohorts, if: :update_coho</text>
	<text fill="#BFBFBFFF" x="181.79999999999998" y="271">r</text>
	<text fill="#FFFFFFFF" x="182.4" y="271">ts b</text>
	<text fill="#2F2F2FFF" x="184.79999999999998" y="271">e</text>
	<text fill="#000000FF" x="185.4" y="271">fore_update :chec</text>
	<text fill="#2F2F2FFF" x="195.6" y="271">k</text>
	<text fill="#EFEFEFFF" x="196.2" y="271">_</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="271">for_root b</text>
	<text fill="#9F9F9FFF" x="202.79999999999998" y="271">e</text>
	<text fill="#000000FF" x="203.4" y="271">longs_to :addr</text>
	<text fill="#AFAFAFFF" x="211.79999999999998" y="271">e</text>
	<text fill="#FFFFFFFF" x="212.4" y="271">ss, autosave: true # Default scope to limit us</text>
	<text fill="#FFFFFFFF" x="0.0" y="272">er access to institution tree default_scope { default_sco</text>
	<text fill="#3F3F3FFF" x="34.199999999999996" y="272">p</text>
	<text fill="#000000FF" x="34.8" y="272">e_relati</text>
	<text fill="#6F6F6FFF" x="39.6" y="272">o</text>
	<text fill="#FFFFFFFF" x="40.199999999999996" y="272">n } def students </text>
	<text fill="#DFDFDFFF" x="50.4" y="272">s</text>
	<text fill="#000000FF" x="51.0" y="272">elf.</text>
	<text fill="#0F0F0FFF" x="53.4" y="272">u</text>
	<text fill="#FFFFFFFF" x="54.0" y="272">sers.students</text>
	<text fill="#5F5F5FFF" x="61.8" y="272"> </text>
	<text fill="#000000FF" x="62.4" y="272">end def</text>
	<text fill="#6F6F6FFF" x="66.6" y="272"> </text>
	<text fill="#EFEFEFFF" x="67.2" y="272">i</text>
	<text fill="#FFFFFFFF" x="67.8" y="272">nstructo</text>
	<text fill="#BFBFBFFF" x="72.6" y="272">r</text>
	<text fill="#0F0F0FFF" x="73.2" y="272">s</text>
	<text fill="#000000FF" x="73.8" y="272"> self.</text>
	<text fill="#0F0F0FFF" x="77.39999999999999" y="272">u</text>
	<text fill="#CFCFCFFF" x="78.0" y="272">s</text>
	<text fill="#FFFFFFFF" x="78.6" y="272">ers.instructor</text>
	<text fill="#3F3F3FFF" x="87.0" y="272">s</text>
	<text fill="#000000FF" x="87.6" y="272"> end de</text>
	<text fill="#3F3F3FFF" x="91.8" y="272">f</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="272"> enable! self.upd</text>
	<text fill="#5F5F5FFF" x="102.6" y="272">a</text>
	<text fill="#000000FF" x="103.2" y="272">te_attr</text>
	<text fill="#5F5F5FFF" x="107.39999999999999" y="272">i</text>
	<text fill="#EFEFEFFF" x="108.0" y="272">b</text>
	<text fill="#FFFFFFFF" x="108.6" y="272">ute(:enabl</text>
	<text fill="#8F8F8FFF" x="114.6" y="272">e</text>
	<text fill="#000000FF" x="115.19999999999999" y="272">d, true</text>
	<text fill="#2F2F2FFF" x="119.39999999999999" y="272">)</text>
	<text fill="#EFEFEFFF" x="120.0" y="272"> </text>
	<text fill="#FFFFFFFF" x="120.6" y="272">end def disable! se</text>
	<text fill="#7F7F7FFF" x="132.0" y="272">l</text>
	<text fill="#000000FF" x="132.6" y="272">f.updat</text>
	<text fill="#2F2F2FFF" x="136.79999999999998" y="272">e</text>
	<text fill="#DFDFDFFF" x="137.4" y="272">_</text>
	<text fill="#FFFFFFFF" x="138.0" y="272">attribute</text>
	<text fill="#8F8F8FFF" x="143.4" y="272">(</text>
	<text fill="#000000FF" x="144.0" y="272">:enabled</text>
	<text fill="#7F7F7FFF" x="148.79999999999998" y="272">,</text>
	<text fill="#FFFFFFFF" x="149.4" y="272"> false) e</text>
	<text fill="#DFDFDFFF" x="154.79999999999998" y="272">n</text>
	<text fill="#AFAFAFFF" x="155.4" y="272">d</text>
	<text fill="#2F2F2FFF" x="156.0" y="272"> </text>
	<text fill="#000000FF" x="156.6" y="272"># # Defi</text>
	<text fill="#3F3F3FFF" x="161.4" y="272">n</text>
	<text fill="#FFFFFFFF" x="162.0" y="272">e full na</text>
	<text fill="#000000FF" x="167.4" y="272">me so that polymorphic a</text>
	<text fill="#BFBFBFFF" x="181.79999999999998" y="272">s</text>
	<text fill="#FFFFFFFF" x="182.4" y="272">sociat</text>
	<text fill="#9F9F9FFF" x="186.0" y="272">i</text>
	<text fill="#1F1F1FFF" x="186.6" y="272">o</text>
	<text fill="#000000FF" x="187.2" y="272">ns for cale</text>
	<text fill="#4F4F4FFF" x="193.79999999999998" y="272">n</text>
	<text fill="#7F7F7FFF" x="194.4" y="272">d</text>
	<text fill="#BFBFBFFF" x="195.0" y="272">a</text>
	<text fill="#FFFFFFFF" x="195.6" y="272">rs can displa</text>
	<text fill="#EFEFEFFF" x="203.4" y="272">y</text>
	<text fill="#9F9F9FFF" x="204.0" y="272"> </text>
	<text fill="#4F4F4FFF" x="204.6" y="272">t</text>
	<text fill="#000000FF" x="205.2" y="272">his # TO</text>
	<text fill="#2F2F2FFF" x="210.0" y="272">D</text>
	<text fill="#BFBFBFFF" x="210.6" y="272">O</text>
	<text fill="#FFFFFFFF" x="211.2" y="272"> - rollup a name is this is the subdept of a ins</text>
	<text fill="#FFFFFFFF" x="0.0" y="273">titution. def full_name "#{name}" end def address super |</text>
	<text fill="#9F9F9FFF" x="34.199999999999996" y="273">|</text>
	<text fill="#000000FF" x="34.8" y="273"> build_a</text>
	<text fill="#1F1F1FFF" x="39.6" y="273">d</text>
	<text fill="#FFFFFFFF" x="40.199999999999996" y="273">dress end def is_</text>
	<text fill="#6F6F6FFF" x="50.4" y="273">d</text>
	<text fill="#000000FF" x="51.0" y="273">emo_</text>
	<text fill="#6F6F6FFF" x="53.4" y="273">i</text>
	<text fill="#FFFFFFFF" x="54.0" y="273">nstitution? </text>
	<text fill="#5F5F5FFF" x="61.199999999999996" y="273">s</text>
	<text fill="#000000FF" x="61.8" y="273">elf.dem</text>
	<text fill="#9F9F9FFF" x="66.0" y="273">o</text>
	<text fill="#FFFFFFFF" x="66.6" y="273">_institutio</text>
	<text fill="#DFDFDFFF" x="73.2" y="273">n</text>
	<text fill="#1F1F1FFF" x="73.8" y="273"> </text>
	<text fill="#000000FF" x="74.39999999999999" y="273">end de</text>
	<text fill="#0F0F0FFF" x="78.0" y="273">f</text>
	<text fill="#EFEFEFFF" x="78.6" y="273"> </text>
	<text fill="#FFFFFFFF" x="79.2" y="273">permitted?(us</text>
	<text fill="#3F3F3FFF" x="87.0" y="273">e</text>
	<text fill="#000000FF" x="87.6" y="273">r, acti</text>
	<text fill="#3F3F3FFF" x="91.8" y="273">o</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="273">n) allowed = tru</text>
	<text fill="#5F5F5FFF" x="102.0" y="273">e</text>
	<text fill="#000000FF" x="102.6" y="273"> case a</text>
	<text fill="#6F6F6FFF" x="106.8" y="273">c</text>
	<text fill="#FFFFFFFF" x="107.39999999999999" y="273">tion when Rig</text>
	<text fill="#BFBFBFFF" x="115.19999999999999" y="273">h</text>
	<text fill="#000000FF" x="115.8" y="273">t::MANA</text>
	<text fill="#0F0F0FFF" x="120.0" y="273">G</text>
	<text fill="#CFCFCFFF" x="120.6" y="273">E</text>
	<text fill="#FFFFFFFF" x="121.19999999999999" y="273">_DEMO_INSTITUTION</text>
	<text fill="#5F5F5FFF" x="131.4" y="273"> </text>
	<text fill="#000000FF" x="132.0" y="273">allowed</text>
	<text fill="#5F5F5FFF" x="136.2" y="273"> </text>
	<text fill="#FFFFFFFF" x="136.79999999999998" y="273">= self.is_de</text>
	<text fill="#000000FF" x="144.0" y="273">mo_insti</text>
	<text fill="#0F0F0FFF" x="148.79999999999998" y="273">t</text>
	<text fill="#FFFFFFFF" x="149.4" y="273">ution? end </text>
	<text fill="#EFEFEFFF" x="156.0" y="273">r</text>
	<text fill="#0F0F0FFF" x="156.6" y="273">a</text>
	<text fill="#000000FF" x="157.2" y="273">ise Per</text>
	<text fill="#3F3F3FFF" x="161.4" y="273">m</text>
	<text fill="#FFFFFFFF" x="162.0" y="273">ittedErro</text>
	<text fill="#BFBFBFFF" x="167.4" y="273">r.new(</text>
	<text fill="#000000FF" x="171.0" y="273">"#{self.</text>
	<text fill="#8F8F8FFF" x="175.79999999999998" y="273">c</text>
	<text fill="#BFBFBFFF" x="176.4" y="273">lass.name</text>
	<text fill="#EFEFEFFF" x="181.79999999999998" y="273">}</text>
	<text fill="#FFFFFFFF" x="182.4" y="273">: #{use</text>
	<text fill="#EFEFEFFF" x="186.6" y="273">r</text>
	<text fill="#2F2F2FFF" x="187.2" y="273">.</text>
	<text fill="#000000FF" x="187.79999999999998" y="273">username}</text>
	<text fill="#5F5F5FFF" x="193.2" y="273"> </text>
	<text fill="#FFFFFFFF" x="193.79999999999998" y="273">DENIED #{action}") </text>
	<text fill="#4F4F4FFF" x="205.2" y="273">u</text>
	<text fill="#000000FF" x="205.79999999999998" y="273">nless </text>
	<text fill="#2F2F2FFF" x="209.4" y="273">a</text>
	<text fill="#EFEFEFFF" x="210.0" y="273">l</text>
	<text fill="#FFFFFFFF" x="210.6" y="273">lowed allowed end def requires_webex? self.webex?</text>
	<text fill="#FFFFFFFF" x="0.0" y="274"> end protected # This will limit the institutions returne</text>
	<text fill="#EFEFEFFF" x="34.199999999999996" y="274">d</text>
	<text fill="#0F0F0FFF" x="34.8" y="274"> </text>
	<text fill="#000000FF" x="35.4" y="274">to the c</text>
	<text fill="#AFAFAFFF" x="40.199999999999996" y="274">u</text>
	<text fill="#FFFFFFFF" x="40.8" y="274">rrent user's ins</text>
	<text fill="#1F1F1FFF" x="50.4" y="274">t</text>
	<text fill="#000000FF" x="51.0" y="274">itut</text>
	<text fill="#CFCFCFFF" x="53.4" y="274">i</text>
	<text fill="#FFFFFFFF" x="54.0" y="274">ons def sel</text>
	<text fill="#6F6F6FFF" x="60.599999999999994" y="274">f</text>
	<text fill="#000000FF" x="61.199999999999996" y="274">.defaul</text>
	<text fill="#9F9F9FFF" x="65.39999999999999" y="274">t</text>
	<text fill="#FFFFFFFF" x="66.0" y="274">_scope_relati</text>
	<text fill="#CFCFCFFF" x="73.8" y="274">o</text>
	<text fill="#000000FF" x="74.39999999999999" y="274">n r = n</text>
	<text fill="#4F4F4FFF" x="78.6" y="274">i</text>
	<text fill="#FFFFFFFF" x="79.2" y="274">l if !current</text>
	<text fill="#3F3F3FFF" x="87.0" y="274">_</text>
	<text fill="#000000FF" x="87.6" y="274">user.ni</text>
	<text fill="#3F3F3FFF" x="91.8" y="274">l</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="274">? &amp;&amp; !current_u</text>
	<text fill="#6F6F6FFF" x="101.39999999999999" y="274">s</text>
	<text fill="#000000FF" x="102.0" y="274">er.root</text>
	<text fill="#5F5F5FFF" x="106.2" y="274">?</text>
	<text fill="#FFFFFFFF" x="106.8" y="274"> &amp;&amp; !current_us</text>
	<text fill="#9F9F9FFF" x="115.8" y="274">e</text>
	<text fill="#000000FF" x="116.39999999999999" y="274">r.insti</text>
	<text fill="#2F2F2FFF" x="120.6" y="274">t</text>
	<text fill="#EFEFEFFF" x="121.19999999999999" y="274">u</text>
	<text fill="#FFFFFFFF" x="121.8" y="274">tion_subtree_id</text>
	<text fill="#5F5F5FFF" x="130.79999999999998" y="274">s</text>
	<text fill="#000000FF" x="131.4" y="274">.empty?</text>
	<text fill="#2F2F2FFF" x="135.6" y="274"> </text>
	<text fill="#EFEFEFFF" x="136.2" y="274">r</text>
	<text fill="#FFFFFFFF" x="136.79999999999998" y="274"> = where(id:</text>
	<text fill="#000000FF" x="144.0" y="274"> current_</text>
	<text fill="#BFBFBFFF" x="149.4" y="274">u</text>
	<text fill="#FFFFFFFF" x="150.0" y="274">ser.institu</text>
	<text fill="#3F3F3FFF" x="156.6" y="274">t</text>
	<text fill="#000000FF" x="157.2" y="274">ion_sub</text>
	<text fill="#3F3F3FFF" x="161.4" y="274">t</text>
	<text fill="#FFFFFFFF" x="162.0" y="274">ree_ids) end r </text>
	<text fill="#000000FF" x="171.0" y="274">end def </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="274">c</text>
	<text fill="#FFFFFFFF" x="176.4" y="274">heck_for_root retu</text>
	<text fill="#DFDFDFFF" x="187.2" y="274">r</text>
	<text fill="#0F0F0FFF" x="187.79999999999998" y="274">n</text>
	<text fill="#000000FF" x="188.4" y="274"> !(self.</text>
	<text fill="#1F1F1FFF" x="193.2" y="274">e</text>
	<text fill="#FFFFFFFF" x="193.79999999999998" y="274">nabled_changed? &amp;&amp; </text>
	<text fill="#7F7F7FFF" x="205.2" y="274">!</text>
	<text fill="#000000FF" x="205.79999999999998" y="274">self.</text>
	<text fill="#0F0F0FFF" x="208.79999999999998" y="274">e</text>
	<text fill="#DFDFDFFF" x="209.4" y="274">n</text>
	<text fill="#FFFFFFFF" x="210.0" y="274">abled? &amp;&amp; self.root?) end def candidate_to_update_</text>
	<text fill="#FFFFFFFF" x="0.0" y="275">children? self.update_descendants &amp;&amp; self.enabled_changed?</text>
	<text fill="#5F5F5FFF" x="34.8" y="275"> </text>
	<text fill="#000000FF" x="35.4" y="275">end def </text>
	<text fill="#4F4F4FFF" x="40.199999999999996" y="275">u</text>
	<text fill="#FFFFFFFF" x="40.8" y="275">pdate_children </text>
	<text fill="#AFAFAFFF" x="49.8" y="275">s</text>
	<text fill="#000000FF" x="50.4" y="275">elf.</text>
	<text fill="#2F2F2FFF" x="52.8" y="275">d</text>
	<text fill="#FFFFFFFF" x="53.4" y="275">escendants.</text>
	<text fill="#BFBFBFFF" x="60.0" y="275">f</text>
	<text fill="#000000FF" x="60.599999999999994" y="275">ind_eac</text>
	<text fill="#4F4F4FFF" x="64.8" y="275">h</text>
	<text fill="#FFFFFFFF" x="65.39999999999999" y="275"> do |d| d.enabl</text>
	<text fill="#6F6F6FFF" x="74.39999999999999" y="275">e</text>
	<text fill="#000000FF" x="75.0" y="275">d = sel</text>
	<text fill="#AFAFAFFF" x="79.2" y="275">f</text>
	<text fill="#FFFFFFFF" x="79.8" y="275">.enabled d.s</text>
	<text fill="#3F3F3FFF" x="87.0" y="275">a</text>
	<text fill="#000000FF" x="87.6" y="275">ve! end</text>
	<text fill="#3F3F3FFF" x="91.8" y="275"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="275">end def update</text>
	<text fill="#AFAFAFFF" x="100.8" y="275">_</text>
	<text fill="#000000FF" x="101.39999999999999" y="275">all_coh</text>
	<text fill="#0F0F0FFF" x="105.6" y="275">o</text>
	<text fill="#EFEFEFFF" x="106.2" y="275">r</text>
	<text fill="#FFFFFFFF" x="106.8" y="275">ts self.cohorts.</text>
	<text fill="#4F4F4FFF" x="116.39999999999999" y="275">e</text>
	<text fill="#000000FF" x="117.0" y="275">ach do </text>
	<text fill="#3F3F3FFF" x="121.19999999999999" y="275">|</text>
	<text fill="#FFFFFFFF" x="121.8" y="275">cohort| cohort</text>
	<text fill="#9F9F9FFF" x="130.2" y="275">.</text>
	<text fill="#000000FF" x="130.79999999999998" y="275">update_</text>
	<text fill="#0F0F0FFF" x="135.0" y="275">a</text>
	<text fill="#DFDFDFFF" x="135.6" y="275">t</text>
	<text fill="#FFFFFFFF" x="136.2" y="275">tributes(dis</text>
	<text fill="#CFCFCFFF" x="143.4" y="275">p</text>
	<text fill="#000000FF" x="144.0" y="275">lay_grade</text>
	<text fill="#BFBFBFFF" x="149.4" y="275">:</text>
	<text fill="#FFFFFFFF" x="150.0" y="275"> self.displ</text>
	<text fill="#7F7F7FFF" x="156.6" y="275">a</text>
	<text fill="#000000FF" x="157.2" y="275">y_grade</text>
	<text fill="#3F3F3FFF" x="161.4" y="275">s</text>
	<text fill="#FFFFFFFF" x="162.0" y="275">) end end def g</text>
	<text fill="#000000FF" x="171.0" y="275">enerate_</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="275">l</text>
	<text fill="#FFFFFFFF" x="176.4" y="275">ti_oauth_consumer_i</text>
	<text fill="#7F7F7FFF" x="187.79999999999998" y="275">n</text>
	<text fill="#000000FF" x="188.4" y="275">fo self.l</text>
	<text fill="#CFCFCFFF" x="193.79999999999998" y="275">t</text>
	<text fill="#FFFFFFFF" x="194.4" y="275">i_oauth_consumer_k</text>
	<text fill="#7F7F7FFF" x="205.2" y="275">e</text>
	<text fill="#000000FF" x="205.79999999999998" y="275">y = S</text>
	<text fill="#7F7F7FFF" x="208.79999999999998" y="275">e</text>
	<text fill="#FFFFFFFF" x="209.4" y="275">cureRandom.hex(10) self.lti_oauth_consumer_secret =</text>
	<text fill="#FFFFFFFF" x="0.0" y="276"> SecureRandom.hex(10) end def set_default_white_label self</text>
	<text fill="#BFBFBFFF" x="34.8" y="276">.</text>
	<text fill="#000000FF" x="35.4" y="276">white_lab</text>
	<text fill="#EFEFEFFF" x="40.8" y="276">e</text>
	<text fill="#FFFFFFFF" x="41.4" y="276">l_folder ||= '</text>
	<text fill="#5F5F5FFF" x="49.8" y="276">e</text>
	<text fill="#000000FF" x="50.4" y="276">duca</text>
	<text fill="#9F9F9FFF" x="52.8" y="276">t</text>
	<text fill="#FFFFFFFF" x="53.4" y="276">e-online' </text>
	<text fill="#EFEFEFFF" x="59.4" y="276">e</text>
	<text fill="#1F1F1FFF" x="60.0" y="276">n</text>
	<text fill="#000000FF" x="60.599999999999994" y="276">d end </text>
	<text fill="#0F0F0FFF" x="64.2" y="276">#</text>
	<text fill="#DFDFDFFF" x="64.8" y="276"> </text>
	<text fill="#FFFFFFFF" x="65.39999999999999" y="276">== Schema Infor</text>
	<text fill="#DFDFDFFF" x="74.39999999999999" y="276">m</text>
	<text fill="#000000FF" x="75.0" y="276">ation #</text>
	<text fill="#1F1F1FFF" x="79.2" y="276"> </text>
	<text fill="#FFFFFFFF" x="79.8" y="276"># Table name</text>
	<text fill="#3F3F3FFF" x="87.0" y="276">:</text>
	<text fill="#000000FF" x="87.6" y="276"> compet</text>
	<text fill="#3F3F3FFF" x="91.8" y="276">e</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="276">ncy_libraries</text>
	<text fill="#EFEFEFFF" x="100.2" y="276"> </text>
	<text fill="#0F0F0FFF" x="100.8" y="276">#</text>
	<text fill="#000000FF" x="101.39999999999999" y="276"> #  id </text>
	<text fill="#9F9F9FFF" x="105.6" y="276"> </text>
	<text fill="#FFFFFFFF" x="106.2" y="276">                 </text>
	<text fill="#DFDFDFFF" x="116.39999999999999" y="276">:</text>
	<text fill="#000000FF" x="117.0" y="276">integer </text>
	<text fill="#8F8F8FFF" x="121.8" y="276"> </text>
	<text fill="#FFFFFFFF" x="122.39999999999999" y="276">        not </text>
	<text fill="#CFCFCFFF" x="129.6" y="276">n</text>
	<text fill="#0F0F0FFF" x="130.2" y="276">u</text>
	<text fill="#000000FF" x="130.79999999999998" y="276">ll, pri</text>
	<text fill="#7F7F7FFF" x="135.0" y="276">m</text>
	<text fill="#FFFFFFFF" x="135.6" y="276">ary key #  na</text>
	<text fill="#BFBFBFFF" x="143.4" y="276">m</text>
	<text fill="#000000FF" x="144.0" y="276">e        </text>
	<text fill="#BFBFBFFF" x="149.4" y="276"> </text>
	<text fill="#FFFFFFFF" x="150.0" y="276">        :st</text>
	<text fill="#7F7F7FFF" x="156.6" y="276">r</text>
	<text fill="#000000FF" x="157.2" y="276">ing(100</text>
	<text fill="#3F3F3FFF" x="161.4" y="276">)</text>
	<text fill="#FFFFFFFF" x="162.0" y="276"> #  description</text>
	<text fill="#000000FF" x="171.0" y="276">        </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="276"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="276"> :text #  root_id  </text>
	<text fill="#EFEFEFFF" x="187.79999999999998" y="276"> </text>
	<text fill="#0F0F0FFF" x="188.4" y="276"> </text>
	<text fill="#000000FF" x="189.0" y="276">        </text>
	<text fill="#5F5F5FFF" x="193.79999999999998" y="276"> </text>
	<text fill="#FFFFFFFF" x="194.4" y="276"> :integer #  creat</text>
	<text fill="#3F3F3FFF" x="205.2" y="276">e</text>
	<text fill="#000000FF" x="205.79999999999998" y="276">d_at</text>
	<text fill="#0F0F0FFF" x="208.2" y="276"> </text>
	<text fill="#EFEFEFFF" x="208.79999999999998" y="276"> </text>
	<text fill="#FFFFFFFF" x="209.4" y="276">         :datetime         not null #  updated_at  </text>
	<text fill="#FFFFFFFF" x="0.0" y="277">         :datetime         not null #  owner_institution_id</text>
	<text fill="#1F1F1FFF" x="35.4" y="277"> </text>
	<text fill="#000000FF" x="36.0" y="277">:integer</text>
	<text fill="#8F8F8FFF" x="40.8" y="277"> </text>
	<text fill="#FFFFFFFF" x="41.4" y="277">         not </text>
	<text fill="#EFEFEFFF" x="49.199999999999996" y="277">n</text>
	<text fill="#000000FF" x="49.8" y="277">ull #</text>
	<text fill="#EFEFEFFF" x="52.8" y="277"> </text>
	<text fill="#FFFFFFFF" x="53.4" y="277"> version_n</text>
	<text fill="#7F7F7FFF" x="59.4" y="277">u</text>
	<text fill="#000000FF" x="60.0" y="277">mber   </text>
	<text fill="#5F5F5FFF" x="64.2" y="277"> </text>
	<text fill="#FFFFFFFF" x="64.8" y="277">   :integer      </text>
	<text fill="#3F3F3FFF" x="75.0" y="277"> </text>
	<text fill="#000000FF" x="75.6" y="277">   defa</text>
	<text fill="#9F9F9FFF" x="79.8" y="277">u</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="277">lt(1), not </text>
	<text fill="#3F3F3FFF" x="87.0" y="277">n</text>
	<text fill="#000000FF" x="87.6" y="277">ull #  </text>
	<text fill="#3F3F3FFF" x="91.8" y="277">a</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="277">ncestor_id   </text>
	<text fill="#5F5F5FFF" x="100.2" y="277"> </text>
	<text fill="#000000FF" x="100.8" y="277">      :</text>
	<text fill="#1F1F1FFF" x="105.0" y="277">i</text>
	<text fill="#FFFFFFFF" x="105.6" y="277">nteger #  published</text>
	<text fill="#5F5F5FFF" x="117.0" y="277"> </text>
	<text fill="#000000FF" x="117.6" y="277">       </text>
	<text fill="#0F0F0FFF" x="121.8" y="277"> </text>
	<text fill="#DFDFDFFF" x="122.39999999999999" y="277"> </text>
	<text fill="#FFFFFFFF" x="123.0" y="277">  :boolean </text>
	<text fill="#3F3F3FFF" x="129.6" y="277"> </text>
	<text fill="#000000FF" x="130.2" y="277">       </text>
	<text fill="#0F0F0FFF" x="134.4" y="277"> </text>
	<text fill="#EFEFEFFF" x="135.0" y="277">d</text>
	<text fill="#FFFFFFFF" x="135.6" y="277">efault(FALSE)</text>
	<text fill="#BFBFBFFF" x="143.4" y="277">,</text>
	<text fill="#000000FF" x="144.0" y="277"> not null</text>
	<text fill="#DFDFDFFF" x="149.4" y="277"> </text>
	<text fill="#FFFFFFFF" x="150.0" y="277">#  identifi</text>
	<text fill="#7F7F7FFF" x="156.6" y="277">e</text>
	<text fill="#000000FF" x="157.2" y="277">r      </text>
	<text fill="#3F3F3FFF" x="161.4" y="277"> </text>
	<text fill="#FFFFFFFF" x="162.0" y="277">    :string(255</text>
	<text fill="#000000FF" x="171.0" y="277">)      n</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="277">o</text>
	<text fill="#FFFFFFFF" x="176.4" y="277">t null # class Compe</text>
	<text fill="#7F7F7FFF" x="188.4" y="277">t</text>
	<text fill="#000000FF" x="189.0" y="277">encyLibr</text>
	<text fill="#0F0F0FFF" x="193.79999999999998" y="277">a</text>
	<text fill="#EFEFEFFF" x="194.4" y="277">r</text>
	<text fill="#FFFFFFFF" x="195.0" y="277">y &lt; ActiveRecord</text>
	<text fill="#EFEFEFFF" x="204.6" y="277">:</text>
	<text fill="#000000FF" x="205.2" y="277">:Base</text>
	<text fill="#5F5F5FFF" x="208.2" y="277"> </text>
	<text fill="#FFFFFFFF" x="208.79999999999998" y="277">include InstitutionSecured include Versioned EO_TAXO</text>
	<text fill="#FFFFFFFF" x="0.0" y="278">NOMY_NAME = 'Meteor Learning' ACUITY_TAXONOMY_NAME = 'Acuit</text>
	<text fill="#7F7F7FFF" x="35.4" y="278">y</text>
	<text fill="#000000FF" x="36.0" y="278"> Framewo</text>
	<text fill="#2F2F2FFF" x="40.8" y="278">r</text>
	<text fill="#FFFFFFFF" x="41.4" y="278">k' has_many :</text>
	<text fill="#9F9F9FFF" x="49.199999999999996" y="278">c</text>
	<text fill="#000000FF" x="49.8" y="278">ompe</text>
	<text fill="#5F5F5FFF" x="52.199999999999996" y="278">t</text>
	<text fill="#FFFFFFFF" x="52.8" y="278">encies, :i</text>
	<text fill="#EFEFEFFF" x="58.8" y="278">n</text>
	<text fill="#0F0F0FFF" x="59.4" y="278">v</text>
	<text fill="#000000FF" x="60.0" y="278">erse_of</text>
	<text fill="#CFCFCFFF" x="64.2" y="278"> </text>
	<text fill="#FFFFFFFF" x="64.8" y="278">=&gt; :competency_li</text>
	<text fill="#7F7F7FFF" x="75.0" y="278">b</text>
	<text fill="#000000FF" x="75.6" y="278">rary be</text>
	<text fill="#4F4F4FFF" x="79.8" y="278">l</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="278">ongs_to :ro</text>
	<text fill="#3F3F3FFF" x="87.0" y="278">o</text>
	<text fill="#000000FF" x="87.6" y="278">t, :cla</text>
	<text fill="#3F3F3FFF" x="91.8" y="278">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="278">s_name =&gt; "C</text>
	<text fill="#DFDFDFFF" x="99.6" y="278">o</text>
	<text fill="#000000FF" x="100.2" y="278">mpetency</text>
	<text fill="#6F6F6FFF" x="105.0" y="278">"</text>
	<text fill="#FFFFFFFF" x="105.6" y="278">, :dependent =&gt; :de</text>
	<text fill="#AFAFAFFF" x="117.0" y="278">s</text>
	<text fill="#000000FF" x="117.6" y="278">troy aft</text>
	<text fill="#5F5F5FFF" x="122.39999999999999" y="278">e</text>
	<text fill="#FFFFFFFF" x="123.0" y="278">r_create :</text>
	<text fill="#9F9F9FFF" x="129.0" y="278">c</text>
	<text fill="#000000FF" x="129.6" y="278">reate_ro</text>
	<text fill="#7F7F7FFF" x="134.4" y="278">o</text>
	<text fill="#FFFFFFFF" x="135.0" y="278">t validates :na</text>
	<text fill="#1F1F1FFF" x="144.0" y="278">m</text>
	<text fill="#000000FF" x="144.6" y="278">e, leng</text>
	<text fill="#6F6F6FFF" x="148.79999999999998" y="278">t</text>
	<text fill="#FFFFFFFF" x="149.4" y="278">h: { maximum</text>
	<text fill="#7F7F7FFF" x="156.6" y="278">:</text>
	<text fill="#000000FF" x="157.2" y="278"> 100 } </text>
	<text fill="#3F3F3FFF" x="161.4" y="278">v</text>
	<text fill="#FFFFFFFF" x="162.0" y="278">alidates :ident</text>
	<text fill="#000000FF" x="171.0" y="278">ifier, l</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="278">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="278">ngth: { maximum: 255</text>
	<text fill="#EFEFEFFF" x="188.4" y="278"> </text>
	<text fill="#0F0F0FFF" x="189.0" y="278">}</text>
	<text fill="#000000FF" x="189.6" y="278"> def ran</text>
	<text fill="#7F7F7FFF" x="194.4" y="278">s</text>
	<text fill="#FFFFFFFF" x="195.0" y="278">ackable_attribut</text>
	<text fill="#9F9F9FFF" x="204.6" y="278">e</text>
	<text fill="#000000FF" x="205.2" y="278">s(aut</text>
	<text fill="#DFDFDFFF" x="208.2" y="278">h</text>
	<text fill="#FFFFFFFF" x="208.79999999999998" y="278">_object = nil) [:name] end def update_children_count</text>
	<text fill="#FFFFFFFF" x="0.0" y="279">! self.root.subtree.each { |topic| topic.update_children_co</text>
	<text fill="#DFDFDFFF" x="35.4" y="279">u</text>
	<text fill="#000000FF" x="36.0" y="279">nt! } end</text>
	<text fill="#CFCFCFFF" x="41.4" y="279"> </text>
	<text fill="#FFFFFFFF" x="42.0" y="279">def leaf_com</text>
	<text fill="#2F2F2FFF" x="49.199999999999996" y="279">p</text>
	<text fill="#000000FF" x="49.8" y="279">eten</text>
	<text fill="#BFBFBFFF" x="52.199999999999996" y="279">c</text>
	<text fill="#FFFFFFFF" x="52.8" y="279">ies self.r</text>
	<text fill="#9F9F9FFF" x="58.8" y="279">o</text>
	<text fill="#000000FF" x="59.4" y="279">ot.leaf</text>
	<text fill="#1F1F1FFF" x="63.599999999999994" y="279">_</text>
	<text fill="#FFFFFFFF" x="64.2" y="279">competencies end d</text>
	<text fill="#BFBFBFFF" x="75.0" y="279">e</text>
	<text fill="#000000FF" x="75.6" y="279">f create</text>
	<text fill="#EFEFEFFF" x="80.39999999999999" y="279">_</text>
	<text fill="#FFFFFFFF" x="81.0" y="279">draft! # T</text>
	<text fill="#3F3F3FFF" x="87.0" y="279">O</text>
	<text fill="#000000FF" x="87.6" y="279">DO: Ver</text>
	<text fill="#3F3F3FFF" x="91.8" y="279">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="279">ioned: Clone</text>
	<text fill="#5F5F5FFF" x="99.6" y="279"> </text>
	<text fill="#000000FF" x="100.2" y="279">the enti</text>
	<text fill="#CFCFCFFF" x="105.0" y="279">r</text>
	<text fill="#FFFFFFFF" x="105.6" y="279">e tree and keep the </text>
	<text fill="#0F0F0FFF" x="117.6" y="279">v</text>
	<text fill="#000000FF" x="118.19999999999999" y="279">ersion n</text>
	<text fill="#DFDFDFFF" x="123.0" y="279">u</text>
	<text fill="#FFFFFFFF" x="123.6" y="279">mber of t</text>
	<text fill="#1F1F1FFF" x="129.0" y="279">h</text>
	<text fill="#000000FF" x="129.6" y="279">e topic </text>
	<text fill="#DFDFDFFF" x="134.4" y="279">i</text>
	<text fill="#FFFFFFFF" x="135.0" y="279">n check self.cr</text>
	<text fill="#CFCFCFFF" x="144.0" y="279">e</text>
	<text fill="#2F2F2FFF" x="144.6" y="279">a</text>
	<text fill="#000000FF" x="145.2" y="279">te_to</text>
	<text fill="#5F5F5FFF" x="148.2" y="279">p</text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="279">_clone! do |c</text>
	<text fill="#7F7F7FFF" x="156.6" y="279">l</text>
	<text fill="#000000FF" x="157.2" y="279">1| cl1.</text>
	<text fill="#3F3F3FFF" x="161.4" y="279">c</text>
	<text fill="#FFFFFFFF" x="162.0" y="279">ompetencies.is_</text>
	<text fill="#000000FF" x="171.0" y="279">publishe</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="279">d</text>
	<text fill="#FFFFFFFF" x="176.4" y="279">.find_each do |c| c.c</text>
	<text fill="#5F5F5FFF" x="189.0" y="279">l</text>
	<text fill="#000000FF" x="189.6" y="279">ear_draf</text>
	<text fill="#1F1F1FFF" x="194.4" y="279">t</text>
	<text fill="#FFFFFFFF" x="195.0" y="279">_and_latest_cach</text>
	<text fill="#4F4F4FFF" x="204.6" y="279">e</text>
	<text fill="#000000FF" x="205.2" y="279"> c.p</text>
	<text fill="#3F3F3FFF" x="207.6" y="279">u</text>
	<text fill="#FFFFFFFF" x="208.2" y="279">blished = false c.version_number += 1 c.save! end end</text>
	<text fill="#FFFFFFFF" x="0.0" y="280"> end def publish! super do self.competencies.is_draft.find_e</text>
	<text fill="#3F3F3FFF" x="36.0" y="280">a</text>
	<text fill="#000000FF" x="36.6" y="280">ch do |c</text>
	<text fill="#6F6F6FFF" x="41.4" y="280">|</text>
	<text fill="#FFFFFFFF" x="42.0" y="280"> c.clear_dr</text>
	<text fill="#DFDFDFFF" x="48.6" y="280">a</text>
	<text fill="#000000FF" x="49.199999999999996" y="280">ft_a</text>
	<text fill="#1F1F1FFF" x="51.6" y="280">n</text>
	<text fill="#FFFFFFFF" x="52.199999999999996" y="280">d_latest_ca</text>
	<text fill="#2F2F2FFF" x="58.8" y="280">c</text>
	<text fill="#000000FF" x="59.4" y="280">he c.pu</text>
	<text fill="#5F5F5FFF" x="63.599999999999994" y="280">b</text>
	<text fill="#FFFFFFFF" x="64.2" y="280">lished = true c.sa</text>
	<text fill="#BFBFBFFF" x="75.0" y="280">v</text>
	<text fill="#000000FF" x="75.6" y="280">e! end e</text>
	<text fill="#AFAFAFFF" x="80.39999999999999" y="280">n</text>
	<text fill="#FFFFFFFF" x="81.0" y="280">d end def </text>
	<text fill="#3F3F3FFF" x="87.0" y="280">g</text>
	<text fill="#000000FF" x="87.6" y="280">rant_in</text>
	<text fill="#3F3F3FFF" x="91.8" y="280">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="280">titution_ac</text>
	<text fill="#EFEFEFFF" x="99.0" y="280">c</text>
	<text fill="#000000FF" x="99.6" y="280">ess(inst</text>
	<text fill="#0F0F0FFF" x="104.39999999999999" y="280">i</text>
	<text fill="#FFFFFFFF" x="105.0" y="280">tution_id) super do C</text>
	<text fill="#5F5F5FFF" x="117.6" y="280">o</text>
	<text fill="#000000FF" x="118.19999999999999" y="280">mpetency</text>
	<text fill="#7F7F7FFF" x="123.0" y="280">.</text>
	<text fill="#FFFFFFFF" x="123.6" y="280">unscoped</text>
	<text fill="#AFAFAFFF" x="128.4" y="280"> </text>
	<text fill="#000000FF" x="129.0" y="280">do self.</text>
	<text fill="#2F2F2FFF" x="133.79999999999998" y="280">c</text>
	<text fill="#FFFFFFFF" x="134.4" y="280">ompetencies.each {</text>
	<text fill="#AFAFAFFF" x="145.2" y="280"> </text>
	<text fill="#7F7F7FFF" x="145.79999999999998" y="280">|co</text>
	<text fill="#CFCFCFFF" x="147.6" y="280">m</text>
	<text fill="#FFFFFFFF" x="148.2" y="280">petency| compe</text>
	<text fill="#7F7F7FFF" x="156.6" y="280">t</text>
	<text fill="#000000FF" x="157.2" y="280">ency.se</text>
	<text fill="#3F3F3FFF" x="161.4" y="280">n</text>
	<text fill="#FFFFFFFF" x="162.0" y="280">d(:grant_instit</text>
	<text fill="#000000FF" x="171.0" y="280">ution_ac</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="280">c</text>
	<text fill="#FFFFFFFF" x="176.4" y="280">ess, institution_id) </text>
	<text fill="#DFDFDFFF" x="189.0" y="280">}</text>
	<text fill="#000000FF" x="189.6" y="280"> end end </text>
	<text fill="#9F9F9FFF" x="195.0" y="280">e</text>
	<text fill="#FFFFFFFF" x="195.6" y="280">nd def remove_</text>
	<text fill="#DFDFDFFF" x="204.0" y="280">i</text>
	<text fill="#000000FF" x="204.6" y="280">nstit</text>
	<text fill="#AFAFAFFF" x="207.6" y="280">u</text>
	<text fill="#FFFFFFFF" x="208.2" y="280">tion_access(institution_id) super do Competency.unsco</text>
	<text fill="#FFFFFFFF" x="0.0" y="281">ped do self.competencies.each { |competency| competency.send</text>
	<text fill="#9F9F9FFF" x="36.0" y="281">(</text>
	<text fill="#000000FF" x="36.6" y="281">:remove_</text>
	<text fill="#0F0F0FFF" x="41.4" y="281">i</text>
	<text fill="#FFFFFFFF" x="42.0" y="281">nstitution_</text>
	<text fill="#6F6F6FFF" x="48.6" y="281">a</text>
	<text fill="#000000FF" x="49.199999999999996" y="281">cces</text>
	<text fill="#7F7F7FFF" x="51.6" y="281">s</text>
	<text fill="#FFFFFFFF" x="52.199999999999996" y="281">, institut</text>
	<text fill="#DFDFDFFF" x="58.199999999999996" y="281">i</text>
	<text fill="#000000FF" x="58.8" y="281">on_id) }</text>
	<text fill="#8F8F8FFF" x="63.599999999999994" y="281"> </text>
	<text fill="#FFFFFFFF" x="64.2" y="281">end end end protect</text>
	<text fill="#000000FF" x="75.6" y="281">ed def c</text>
	<text fill="#6F6F6FFF" x="80.39999999999999" y="281">r</text>
	<text fill="#FFFFFFFF" x="81.0" y="281">eate_root </text>
	<text fill="#3F3F3FFF" x="87.0" y="281">s</text>
	<text fill="#000000FF" x="87.6" y="281">elf.roo</text>
	<text fill="#3F3F3FFF" x="91.8" y="281">t</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="281"> = Competen</text>
	<text fill="#8F8F8FFF" x="99.0" y="281">c</text>
	<text fill="#000000FF" x="99.6" y="281">y.unscop</text>
	<text fill="#4F4F4FFF" x="104.39999999999999" y="281">e</text>
	<text fill="#FFFFFFFF" x="105.0" y="281">d.create!(name: self.</text>
	<text fill="#8F8F8FFF" x="117.6" y="281">n</text>
	<text fill="#000000FF" x="118.19999999999999" y="281">ame, des</text>
	<text fill="#1F1F1FFF" x="123.0" y="281">c</text>
	<text fill="#FFFFFFFF" x="123.6" y="281">ription:</text>
	<text fill="#4F4F4FFF" x="128.4" y="281"> </text>
	<text fill="#000000FF" x="129.0" y="281">"#{self.</text>
	<text fill="#6F6F6FFF" x="133.79999999999998" y="281">n</text>
	<text fill="#FFFFFFFF" x="134.4" y="281">ame} Root", competency_library_id: se</text>
	<text fill="#7F7F7FFF" x="156.6" y="281">l</text>
	<text fill="#000000FF" x="157.2" y="281">f.id, o</text>
	<text fill="#3F3F3FFF" x="161.4" y="281">w</text>
	<text fill="#FFFFFFFF" x="162.0" y="281">ner_institution</text>
	<text fill="#000000FF" x="171.0" y="281">_id: sel</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="281">f</text>
	<text fill="#FFFFFFFF" x="176.4" y="281">.owner_institution_id)</text>
	<text fill="#5F5F5FFF" x="189.6" y="281"> </text>
	<text fill="#000000FF" x="190.2" y="281">self.sav</text>
	<text fill="#1F1F1FFF" x="195.0" y="281">e</text>
	<text fill="#FFFFFFFF" x="195.6" y="281">! end end # ==</text>
	<text fill="#8F8F8FFF" x="204.0" y="281"> </text>
	<text fill="#000000FF" x="204.6" y="281">Sche</text>
	<text fill="#1F1F1FFF" x="207.0" y="281">m</text>
	<text fill="#FFFFFFFF" x="207.6" y="281">a Information # # Table name: learning_activities # # </text>
	<text fill="#FFFFFFFF" x="0.0" y="282"> id                          :integer          not null, pri</text>
	<text fill="#EFEFEFFF" x="36.0" y="282">m</text>
	<text fill="#0F0F0FFF" x="36.6" y="282">a</text>
	<text fill="#000000FF" x="37.199999999999996" y="282">ry key #</text>
	<text fill="#AFAFAFFF" x="42.0" y="282"> </text>
	<text fill="#FFFFFFFF" x="42.6" y="282"> identifie</text>
	<text fill="#1F1F1FFF" x="48.6" y="282">r</text>
	<text fill="#000000FF" x="49.199999999999996" y="282">    </text>
	<text fill="#DFDFDFFF" x="51.6" y="282"> </text>
	<text fill="#FFFFFFFF" x="52.199999999999996" y="282">          </text>
	<text fill="#9F9F9FFF" x="58.199999999999996" y="282"> </text>
	<text fill="#000000FF" x="58.8" y="282">  :strin</text>
	<text fill="#BFBFBFFF" x="63.599999999999994" y="282">g</text>
	<text fill="#FFFFFFFF" x="64.2" y="282">(255)      not null</text>
	<text fill="#000000FF" x="75.6" y="282"> #  meta</text>
	<text fill="#3F3F3FFF" x="80.39999999999999" y="282">d</text>
	<text fill="#FFFFFFFF" x="81.0" y="282">ata       </text>
	<text fill="#3F3F3FFF" x="87.0" y="282"> </text>
	<text fill="#000000FF" x="87.6" y="282">       </text>
	<text fill="#3F3F3FFF" x="91.8" y="282"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="282">    :text #</text>
	<text fill="#3F3F3FFF" x="99.0" y="282"> </text>
	<text fill="#000000FF" x="99.6" y="282"> ancesto</text>
	<text fill="#7F7F7FFF" x="104.39999999999999" y="282">r</text>
	<text fill="#FFFFFFFF" x="105.0" y="282">_id                 :</text>
	<text fill="#BFBFBFFF" x="117.6" y="282">i</text>
	<text fill="#000000FF" x="118.19999999999999" y="282">nteger # </text>
	<text fill="#DFDFDFFF" x="123.6" y="282"> </text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="282">publish</text>
	<text fill="#0F0F0FFF" x="128.4" y="282">e</text>
	<text fill="#000000FF" x="129.0" y="282">d       </text>
	<text fill="#AFAFAFFF" x="133.79999999999998" y="282"> </text>
	<text fill="#FFFFFFFF" x="134.4" y="282">           :boolean          default(</text>
	<text fill="#7F7F7FFF" x="156.6" y="282">F</text>
	<text fill="#000000FF" x="157.2" y="282">ALSE), </text>
	<text fill="#3F3F3FFF" x="161.4" y="282">n</text>
	<text fill="#FFFFFFFF" x="162.0" y="282">ot null #  lock</text>
	<text fill="#000000FF" x="171.0" y="282">_version</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="282"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="282">               :intege</text>
	<text fill="#CFCFCFFF" x="189.6" y="282">r</text>
	<text fill="#000000FF" x="190.2" y="282">         </text>
	<text fill="#9F9F9FFF" x="195.6" y="282"> </text>
	<text fill="#FFFFFFFF" x="196.2" y="282">default(0), n</text>
	<text fill="#1F1F1FFF" x="204.0" y="282">o</text>
	<text fill="#000000FF" x="204.6" y="282">t nu</text>
	<text fill="#9F9F9FFF" x="207.0" y="282">l</text>
	<text fill="#FFFFFFFF" x="207.6" y="282">l #  created_at                  :datetime         not</text>
	<text fill="#FFFFFFFF" x="0.0" y="283"> null #  updated_at                  :datetime         not nu</text>
	<text fill="#5F5F5FFF" x="36.6" y="283">l</text>
	<text fill="#000000FF" x="37.199999999999996" y="283">l #  ver</text>
	<text fill="#4F4F4FFF" x="42.0" y="283">s</text>
	<text fill="#FFFFFFFF" x="42.6" y="283">ion_numbe</text>
	<text fill="#AFAFAFFF" x="48.0" y="283">r</text>
	<text fill="#000000FF" x="48.6" y="283">    </text>
	<text fill="#4F4F4FFF" x="51.0" y="283"> </text>
	<text fill="#FFFFFFFF" x="51.6" y="283">         :i</text>
	<text fill="#6F6F6FFF" x="58.199999999999996" y="283">n</text>
	<text fill="#000000FF" x="58.8" y="283">teger   </text>
	<text fill="#2F2F2FFF" x="63.599999999999994" y="283"> </text>
	<text fill="#3F3F3FFF" x="64.2" y="283">      default(1), n</text>
	<text fill="#000000FF" x="75.6" y="283">ot null </text>
	<text fill="#0F0F0FFF" x="80.39999999999999" y="283">#</text>
	<text fill="#FFFFFFFF" x="81.0" y="283">  mastery_</text>
	<text fill="#3F3F3FFF" x="87.0" y="283">s</text>
	<text fill="#000000FF" x="87.6" y="283">core   </text>
	<text fill="#3F3F3FFF" x="91.8" y="283"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="283">           </text>
	<text fill="#000000FF" x="99.0" y="283">:integer </text>
	<text fill="#BFBFBFFF" x="104.39999999999999" y="283"> </text>
	<text fill="#FFFFFFFF" x="105.0" y="283">        default(80), </text>
	<text fill="#EFEFEFFF" x="117.6" y="283">n</text>
	<text fill="#000000FF" x="118.19999999999999" y="283">ot null #</text>
	<text fill="#9F9F9FFF" x="123.6" y="283"> </text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="283"> descr</text>
	<text fill="#BFBFBFFF" x="127.8" y="283">i</text>
	<text fill="#000000FF" x="128.4" y="283">ption    </text>
	<text fill="#CFCFCFFF" x="133.79999999999998" y="283"> </text>
	<text fill="#FFFFFFFF" x="134.4" y="283">            :text             not nul</text>
	<text fill="#7F7F7FFF" x="156.6" y="283">l</text>
	<text fill="#000000FF" x="157.2" y="283"> #  own</text>
	<text fill="#3F3F3FFF" x="161.4" y="283">e</text>
	<text fill="#FFFFFFFF" x="162.0" y="283">r_institution_i</text>
	<text fill="#000000FF" x="171.0" y="283">d       </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="283"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="283">:integer          not n</text>
	<text fill="#3F3F3FFF" x="190.2" y="283">u</text>
	<text fill="#000000FF" x="190.79999999999998" y="283">ll #  co</text>
	<text fill="#3F3F3FFF" x="195.6" y="283">n</text>
	<text fill="#FFFFFFFF" x="196.2" y="283">tent_id     </text>
	<text fill="#AFAFAFFF" x="203.4" y="283"> </text>
	<text fill="#000000FF" x="204.0" y="283">    </text>
	<text fill="#0F0F0FFF" x="206.4" y="283"> </text>
	<text fill="#EFEFEFFF" x="207.0" y="283"> </text>
	<text fill="#FFFFFFFF" x="207.6" y="283">      :integer #  content_type                :string(</text>
	<text fill="#FFFFFFFF" x="0.0" y="284">255) #  requires_instructor_grading :boolean          default</text>
	<text fill="#BFBFBFFF" x="36.6" y="284">(</text>
	<text fill="#000000FF" x="37.199999999999996" y="284">FALSE) # </text>
	<text fill="#EFEFEFFF" x="42.6" y="284"> </text>
	<text fill="#FFFFFFFF" x="43.199999999999996" y="284">proposed</text>
	<text fill="#5F5F5FFF" x="48.0" y="284">_</text>
	<text fill="#000000FF" x="48.6" y="284">hour</text>
	<text fill="#9F9F9FFF" x="51.0" y="284">s</text>
	<text fill="#FFFFFFFF" x="51.6" y="284">           </text>
	<text fill="#3F3F3FFF" x="58.199999999999996" y="284"> </text>
	<text fill="#000000FF" x="58.8" y="284">  :integer #  activity_type          </text>
	<text fill="#FFFFFFFF" x="81.0" y="284">     :stri</text>
	<text fill="#3F3F3FFF" x="87.0" y="284">n</text>
	<text fill="#000000FF" x="87.6" y="284">g(255) </text>
	<text fill="#3F3F3FFF" x="91.8" y="284"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="284">    defaul</text>
	<text fill="#BFBFBFFF" x="98.39999999999999" y="284">t</text>
	<text fill="#000000FF" x="99.0" y="284">("web_con</text>
	<text fill="#BFBFBFFF" x="104.39999999999999" y="284">t</text>
	<text fill="#FFFFFFFF" x="105.0" y="284">ent"), not null #  rub</text>
	<text fill="#000000FF" x="118.19999999999999" y="284">ric_id   </text>
	<text fill="#6F6F6FFF" x="123.6" y="284"> </text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="284">      </text>
	<text fill="#7F7F7FFF" x="127.8" y="284"> </text>
	<text fill="#000000FF" x="128.4" y="284">        :</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="284">integer #  instructions               </text>
	<text fill="#7F7F7FFF" x="156.6" y="284"> </text>
	<text fill="#000000FF" x="157.2" y="284">:text #</text>
	<text fill="#3F3F3FFF" x="161.4" y="284"> </text>
	<text fill="#FFFFFFFF" x="162.0" y="284"> show_rubric   </text>
	<text fill="#000000FF" x="171.0" y="284">        </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="284"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="284">     :boolean          </text>
	<text fill="#BFBFBFFF" x="190.2" y="284">d</text>
	<text fill="#000000FF" x="190.79999999999998" y="284">efault(TR</text>
	<text fill="#BFBFBFFF" x="196.2" y="284">U</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="284">E) #  read_</text>
	<text fill="#4F4F4FFF" x="203.4" y="284">o</text>
	<text fill="#000000FF" x="204.0" y="284">nly </text>
	<text fill="#6F6F6FFF" x="206.4" y="284"> </text>
	<text fill="#FFFFFFFF" x="207.0" y="284">                 :boolean          default(FALSE) #  ty</text>
	<text fill="#FFFFFFFF" x="0.0" y="285">pe_of_score               :string           default("highest")</text>
	<text fill="#1F1F1FFF" x="37.199999999999996" y="285">,</text>
	<text fill="#000000FF" x="37.8" y="285"> not nul</text>
	<text fill="#8F8F8FFF" x="42.6" y="285">l</text>
	<text fill="#FFFFFFFF" x="43.199999999999996" y="285"> #  gra</text>
	<text fill="#EFEFEFFF" x="47.4" y="285">d</text>
	<text fill="#000000FF" x="48.0" y="285">able</text>
	<text fill="#0F0F0FFF" x="50.4" y="285"> </text>
	<text fill="#FFFFFFFF" x="51.0" y="285">            </text>
	<text fill="#1F1F1FFF" x="58.199999999999996" y="285"> </text>
	<text fill="#000000FF" x="58.8" y="285">      :boolean          default(TRUE)</text>
	<text fill="#FFFFFFFF" x="81.0" y="285"> # # In IM</text>
	<text fill="#3F3F3FFF" x="87.0" y="285">S</text>
	<text fill="#000000FF" x="87.6" y="285"> CC, I </text>
	<text fill="#3F3F3FFF" x="91.8" y="285">m</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="285">ap an Orga</text>
	<text fill="#9F9F9FFF" x="98.39999999999999" y="285">n</text>
	<text fill="#000000FF" x="99.0" y="285">ization t</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="285">o a LearningActivity cl</text>
	<text fill="#2F2F2FFF" x="118.19999999999999" y="285">a</text>
	<text fill="#000000FF" x="118.8" y="285">ss Learn</text>
	<text fill="#3F3F3FFF" x="123.6" y="285">i</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="285">ngActi</text>
	<text fill="#6F6F6FFF" x="127.8" y="285">v</text>
	<text fill="#000000FF" x="128.4" y="285">ity &lt; Act</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="285">iveRecord::Base include Versioned incl</text>
	<text fill="#7F7F7FFF" x="156.6" y="285">u</text>
	<text fill="#000000FF" x="157.2" y="285">de Inst</text>
	<text fill="#3F3F3FFF" x="161.4" y="285">i</text>
	<text fill="#FFFFFFFF" x="162.0" y="285">tutionSecured i</text>
	<text fill="#000000FF" x="171.0" y="285">nclude H</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="285">t</text>
	<text fill="#FFFFFFFF" x="176.4" y="285">mlSanitize DEFAULT_MASTE</text>
	<text fill="#2F2F2FFF" x="190.79999999999998" y="285">R</text>
	<text fill="#000000FF" x="191.4" y="285">Y_SCORE </text>
	<text fill="#3F3F3FFF" x="196.2" y="285">=</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="285"> 80 SUPPOR</text>
	<text fill="#DFDFDFFF" x="202.79999999999998" y="285">T</text>
	<text fill="#000000FF" x="203.4" y="285">ED_AC</text>
	<text fill="#DFDFDFFF" x="206.4" y="285">T</text>
	<text fill="#FFFFFFFF" x="207.0" y="285">IVITY_CONTENT_TYPES = %w(AuthenticItem CdpItem LtiProvi</text>
	<text fill="#FFFFFFFF" x="0.0" y="286">der DiscussionActivity) SUPPORTED_ACTIVITY_TYPES = %w(web_cont</text>
	<text fill="#7F7F7FFF" x="37.199999999999996" y="286">e</text>
	<text fill="#000000FF" x="37.8" y="286">nt asses</text>
	<text fill="#2F2F2FFF" x="42.6" y="286">s</text>
	<text fill="#FFFFFFFF" x="43.199999999999996" y="286">ment as</text>
	<text fill="#9F9F9FFF" x="47.4" y="286">s</text>
	<text fill="#000000FF" x="48.0" y="286">ignm</text>
	<text fill="#6F6F6FFF" x="50.4" y="286">e</text>
	<text fill="#FFFFFFFF" x="51.0" y="286">nt web_link </text>
	<text fill="#000000FF" x="58.199999999999996" y="286">blti) SUPPORTED_TYPE_OF_SCORES = %w(hi</text>
	<text fill="#FFFFFFFF" x="81.0" y="286">ghest lowe</text>
	<text fill="#3F3F3FFF" x="87.0" y="286">s</text>
	<text fill="#000000FF" x="87.6" y="286">t avera</text>
	<text fill="#3F3F3FFF" x="91.8" y="286">g</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="286">e latest) </text>
	<text fill="#7F7F7FFF" x="98.39999999999999" y="286">L</text>
	<text fill="#000000FF" x="99.0" y="286">TI_CONTEX</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="286">T_ROLES = { CohortUser:</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="286">:</text>
	<text fill="#000000FF" x="118.8" y="286">COHORT_R</text>
	<text fill="#3F3F3FFF" x="123.6" y="286">O</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="286">LES[:s</text>
	<text fill="#3F3F3FFF" x="127.8" y="286">t</text>
	<text fill="#000000FF" x="128.4" y="286">udent] =</text>
	<text fill="#3F3F3FFF" x="133.2" y="286">&gt;</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="286"> 'Student', CohortUser::COHORT_ROLES[:</text>
	<text fill="#7F7F7FFF" x="156.6" y="286">i</text>
	<text fill="#000000FF" x="157.2" y="286">nstruct</text>
	<text fill="#3F3F3FFF" x="161.4" y="286">o</text>
	<text fill="#FFFFFFFF" x="162.0" y="286">r] =&gt; 'Instruct</text>
	<text fill="#000000FF" x="171.0" y="286">or' } va</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="286">l</text>
	<text fill="#FFFFFFFF" x="176.4" y="286">idates :description, pre</text>
	<text fill="#9F9F9FFF" x="190.79999999999998" y="286">s</text>
	<text fill="#000000FF" x="191.4" y="286">ence: tru</text>
	<text fill="#DFDFDFFF" x="196.79999999999998" y="286">e</text>
	<text fill="#FFFFFFFF" x="197.4" y="286"> validate</text>
	<text fill="#6F6F6FFF" x="202.79999999999998" y="286">s</text>
	<text fill="#000000FF" x="203.4" y="286"> :ma</text>
	<text fill="#4F4F4FFF" x="205.79999999999998" y="286">s</text>
	<text fill="#FFFFFFFF" x="206.4" y="286">tery_score, presence: true, numericality: {only_integer:</text>
	<text fill="#FFFFFFFF" x="0.0" y="287"> true, :greater_than_or_equal_to =&gt; 0, :less_than_or_equal_to </text>
	<text fill="#DFDFDFFF" x="37.199999999999996" y="287">=</text>
	<text fill="#000000FF" x="37.8" y="287">&gt; 100} va</text>
	<text fill="#CFCFCFFF" x="43.199999999999996" y="287">l</text>
	<text fill="#FFFFFFFF" x="43.8" y="287">idates</text>
	<text fill="#2F2F2FFF" x="47.4" y="287"> </text>
	<text fill="#000000FF" x="48.0" y="287">:con</text>
	<text fill="#CFCFCFFF" x="50.4" y="287">t</text>
	<text fill="#FFFFFFFF" x="51.0" y="287">ent_type, pr</text>
	<text fill="#000000FF" x="58.199999999999996" y="287">esence: f</text>
	<text fill="#7F7F7FFF" x="63.599999999999994" y="287">alse, inclusion: {in: SUPPORT</text>
	<text fill="#FFFFFFFF" x="81.0" y="287">ED_ACTIVIT</text>
	<text fill="#3F3F3FFF" x="87.0" y="287">Y</text>
	<text fill="#000000FF" x="87.6" y="287">_CONTEN</text>
	<text fill="#3F3F3FFF" x="91.8" y="287">T</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="287">_TYPES}, a</text>
	<text fill="#7F7F7FFF" x="98.39999999999999" y="287">l</text>
	<text fill="#000000FF" x="99.0" y="287">low_nil: </text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="287">true validates :activit</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="287">y</text>
	<text fill="#000000FF" x="118.8" y="287">_type, pr</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="287">esence</text>
	<text fill="#3F3F3FFF" x="127.8" y="287">:</text>
	<text fill="#000000FF" x="128.4" y="287"> true, i</text>
	<text fill="#3F3F3FFF" x="133.2" y="287">n</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="287">clusion: {in: SUPPORTED_ACTIVITY_TYPES</text>
	<text fill="#7F7F7FFF" x="156.6" y="287">}</text>
	<text fill="#000000FF" x="157.2" y="287">, allow</text>
	<text fill="#3F3F3FFF" x="161.4" y="287">_</text>
	<text fill="#FFFFFFFF" x="162.0" y="287">nil: false vali</text>
	<text fill="#000000FF" x="171.0" y="287">dates :t</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="287">y</text>
	<text fill="#FFFFFFFF" x="176.4" y="287">pe_of_score, presence: tr</text>
	<text fill="#1F1F1FFF" x="191.4" y="287">u</text>
	<text fill="#000000FF" x="192.0" y="287">e, inclu</text>
	<text fill="#5F5F5FFF" x="196.79999999999998" y="287">s</text>
	<text fill="#FFFFFFFF" x="197.4" y="287">ion: {in</text>
	<text fill="#EFEFEFFF" x="202.2" y="287">:</text>
	<text fill="#0F0F0FFF" x="202.79999999999998" y="287"> </text>
	<text fill="#000000FF" x="203.4" y="287">SUPP</text>
	<text fill="#BFBFBFFF" x="205.79999999999998" y="287">O</text>
	<text fill="#FFFFFFFF" x="206.4" y="287">RTED_TYPE_OF_SCORES}, allow_nil: false belongs_to :conte</text>
	<text fill="#FFFFFFFF" x="0.0" y="288">nt, :polymorphic =&gt; true has_many :topics has_many :learning_ac</text>
	<text fill="#3F3F3FFF" x="37.8" y="288">t</text>
	<text fill="#000000FF" x="38.4" y="288">ivity_le</text>
	<text fill="#6F6F6FFF" x="43.199999999999996" y="288">a</text>
	<text fill="#FFFFFFFF" x="43.8" y="288">rning</text>
	<text fill="#DFDFDFFF" x="46.8" y="288">_</text>
	<text fill="#000000FF" x="47.4" y="288">obje</text>
	<text fill="#2F2F2FFF" x="49.8" y="288">c</text>
	<text fill="#FFFFFFFF" x="50.4" y="288">tives, :inver</text>
	<text fill="#000000FF" x="58.199999999999996" y="288">se_of =&gt;</text>
	<text fill="#2F2F2FFF" x="63.0" y="288"> </text>
	<text fill="#FFFFFFFF" x="63.599999999999994" y="288">:learning_activity, :dependent =&gt; :dest</text>
	<text fill="#3F3F3FFF" x="87.0" y="288">r</text>
	<text fill="#000000FF" x="87.6" y="288">oy has_</text>
	<text fill="#3F3F3FFF" x="91.8" y="288">m</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="288">any :learn</text>
	<text fill="#5F5F5FFF" x="98.39999999999999" y="288">i</text>
	<text fill="#000000FF" x="99.0" y="288">ng_object</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="288">ives, :through =&gt; :lear</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="288">n</text>
	<text fill="#000000FF" x="118.8" y="288">ing_activ</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="288">ity_le</text>
	<text fill="#3F3F3FFF" x="127.8" y="288">a</text>
	<text fill="#000000FF" x="128.4" y="288">rning_ob</text>
	<text fill="#3F3F3FFF" x="133.2" y="288">j</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="288">ectives has_many :curriculums_learning</text>
	<text fill="#7F7F7FFF" x="156.6" y="288">_</text>
	<text fill="#000000FF" x="157.2" y="288">objecti</text>
	<text fill="#3F3F3FFF" x="161.4" y="288">v</text>
	<text fill="#FFFFFFFF" x="162.0" y="288">es, :through =&gt;</text>
	<text fill="#000000FF" x="171.0" y="288"> :learni</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="288">n</text>
	<text fill="#FFFFFFFF" x="176.4" y="288">g_objectives has_many :cu</text>
	<text fill="#9F9F9FFF" x="191.4" y="288">r</text>
	<text fill="#000000FF" x="192.0" y="288">riculums,</text>
	<text fill="#DFDFDFFF" x="197.4" y="288"> </text>
	<text fill="#FFFFFFFF" x="198.0" y="288">:throug</text>
	<text fill="#9F9F9FFF" x="202.2" y="288">h</text>
	<text fill="#000000FF" x="202.79999999999998" y="288"> =&gt; </text>
	<text fill="#2F2F2FFF" x="205.2" y="288">:</text>
	<text fill="#FFFFFFFF" x="205.79999999999998" y="288">curriculums_learning_objectives has_many :curriculum_acti</text>
	<text fill="#FFFFFFFF" x="0.0" y="289">vity_grades, dependent: :destroy has_many :gradable_curriculums</text>
	<text fill="#9F9F9FFF" x="37.8" y="289">,</text>
	<text fill="#000000FF" x="38.4" y="289"> through</text>
	<text fill="#0F0F0FFF" x="43.199999999999996" y="289">:</text>
	<text fill="#FFFFFFFF" x="43.8" y="289"> :cur</text>
	<text fill="#6F6F6FFF" x="46.8" y="289">r</text>
	<text fill="#000000FF" x="47.4" y="289">icul</text>
	<text fill="#9F9F9FFF" x="49.8" y="289">u</text>
	<text fill="#FFFFFFFF" x="50.4" y="289">m_activity_gr</text>
	<text fill="#000000FF" x="58.199999999999996" y="289">ades has</text>
	<text fill="#0F0F0FFF" x="63.0" y="289">_</text>
	<text fill="#FFFFFFFF" x="63.599999999999994" y="289">many :cohort_activity_grades, dependent</text>
	<text fill="#3F3F3FFF" x="87.0" y="289">:</text>
	<text fill="#000000FF" x="87.6" y="289"> :destr</text>
	<text fill="#3F3F3FFF" x="91.8" y="289">o</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="289">y has_many</text>
	<text fill="#4F4F4FFF" x="98.39999999999999" y="289"> </text>
	<text fill="#000000FF" x="99.0" y="289">:cohorts,</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="289"> through: :cohort_activ</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="289">i</text>
	<text fill="#000000FF" x="118.8" y="289">ty_grade</text>
	<text fill="#0F0F0FFF" x="123.6" y="289">s</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="289"> has_m</text>
	<text fill="#3F3F3FFF" x="127.8" y="289">a</text>
	<text fill="#000000FF" x="128.4" y="289">ny :user_</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="289">activities, :inverse_of =&gt; :learning_a</text>
	<text fill="#7F7F7FFF" x="156.6" y="289">c</text>
	<text fill="#000000FF" x="157.2" y="289">tivity,</text>
	<text fill="#3F3F3FFF" x="161.4" y="289"> </text>
	<text fill="#FFFFFFFF" x="162.0" y="289">:dependent =&gt; :</text>
	<text fill="#000000FF" x="171.0" y="289">destroy </text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="289">h</text>
	<text fill="#FFFFFFFF" x="176.4" y="289">as_many :students, -&gt; { i</text>
	<text fill="#EFEFEFFF" x="191.4" y="289">n</text>
	<text fill="#0F0F0FFF" x="192.0" y="289">c</text>
	<text fill="#000000FF" x="192.6" y="289">ludes :u</text>
	<text fill="#5F5F5FFF" x="197.4" y="289">s</text>
	<text fill="#FFFFFFFF" x="198.0" y="289">er_acti</text>
	<text fill="#1F1F1FFF" x="202.2" y="289">v</text>
	<text fill="#000000FF" x="202.79999999999998" y="289">itie</text>
	<text fill="#9F9F9FFF" x="205.2" y="289">s</text>
	<text fill="#FFFFFFFF" x="205.79999999999998" y="289"> }, :through =&gt; :user_activities belongs_to :rubric, inve</text>
	<text fill="#FFFFFFFF" x="0.0" y="290">rse_of: :learning_activities # Some helpers to retrieve specific</text>
	<text fill="#0F0F0FFF" x="38.4" y="290"> </text>
	<text fill="#000000FF" x="39.0" y="290">types of</text>
	<text fill="#9F9F9FFF" x="43.8" y="290"> </text>
	<text fill="#FFFFFFFF" x="44.4" y="290">LAs </text>
	<text fill="#0F0F0FFF" x="46.8" y="290">s</text>
	<text fill="#000000FF" x="47.4" y="290">cope</text>
	<text fill="#EFEFEFFF" x="49.8" y="290"> </text>
	<text fill="#FFFFFFFF" x="50.4" y="290">:cdp_items,  </text>
	<text fill="#000000FF" x="58.199999999999996" y="290">         </text>
	<text fill="#FFFFFFFF" x="63.599999999999994" y="290">  -&gt; { where(content_type: CdpItem.name</text>
	<text fill="#3F3F3FFF" x="87.0" y="290">)</text>
	<text fill="#000000FF" x="87.6" y="290"> } scop</text>
	<text fill="#3F3F3FFF" x="91.8" y="290">e</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="290"> :authenti</text>
	<text fill="#7F7F7FFF" x="98.39999999999999" y="290">c</text>
	<text fill="#000000FF" x="99.0" y="290">_items,  </text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="290">     -&gt; { where(content</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="290">_</text>
	<text fill="#000000FF" x="118.8" y="290">type: Au</text>
	<text fill="#3F3F3FFF" x="123.6" y="290">t</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="290">hentic</text>
	<text fill="#3F3F3FFF" x="127.8" y="290">I</text>
	<text fill="#000000FF" x="128.4" y="290">tem.name)</text>
	<text fill="#FFFFFFFF" x="133.79999999999998" y="290"> } scope :lti_providers,         -&gt; { </text>
	<text fill="#7F7F7FFF" x="156.6" y="290">w</text>
	<text fill="#000000FF" x="157.2" y="290">here(co</text>
	<text fill="#3F3F3FFF" x="161.4" y="290">n</text>
	<text fill="#FFFFFFFF" x="162.0" y="290">tent_type: LtiP</text>
	<text fill="#000000FF" x="171.0" y="290">rovider.</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="290">n</text>
	<text fill="#FFFFFFFF" x="176.4" y="290">ame) } scope :discussion_a</text>
	<text fill="#7F7F7FFF" x="192.0" y="290">c</text>
	<text fill="#000000FF" x="192.6" y="290">tivities</text>
	<text fill="#0F0F0FFF" x="197.4" y="290">,</text>
	<text fill="#EFEFEFFF" x="198.0" y="290"> </text>
	<text fill="#FFFFFFFF" x="198.6" y="290">-&gt; { </text>
	<text fill="#BFBFBFFF" x="201.6" y="290">w</text>
	<text fill="#000000FF" x="202.2" y="290">here</text>
	<text fill="#0F0F0FFF" x="204.6" y="290">(</text>
	<text fill="#FFFFFFFF" x="205.2" y="290">content_type: "DiscussionActivity") } scope :gradable,    </text>
	<text fill="#FFFFFFFF" x="0.0" y="291">          -&gt; { where(gradable: true )} scope :exclude_activities</text>
	<text fill="#5F5F5FFF" x="38.4" y="291">_</text>
	<text fill="#000000FF" x="39.0" y="291">with_ids</text>
	<text fill="#4F4F4FFF" x="43.8" y="291">,</text>
	<text fill="#FFFFFFFF" x="44.4" y="291"> -&gt;</text>
	<text fill="#AFAFAFFF" x="46.199999999999996" y="291">(</text>
	<text fill="#000000FF" x="46.8" y="291">ids)</text>
	<text fill="#5F5F5FFF" x="49.199999999999996" y="291"> </text>
	<text fill="#FFFFFFFF" x="49.8" y="291">{ where.not(id</text>
	<text fill="#2F2F2FFF" x="58.199999999999996" y="291">:</text>
	<text fill="#000000FF" x="58.8" y="291"> ids) } </text>
	<text fill="#FFFFFFFF" x="63.599999999999994" y="291">scope :with_ids, -&gt;(ids) {where(id: ids</text>
	<text fill="#3F3F3FFF" x="87.0" y="291">)</text>
	<text fill="#000000FF" x="87.6" y="291">} scope</text>
	<text fill="#3F3F3FFF" x="91.8" y="291"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="291">:for_curri</text>
	<text fill="#7F7F7FFF" x="98.39999999999999" y="291">c</text>
	<text fill="#000000FF" x="99.0" y="291">ulums, -&gt;</text>
	<text fill="#FFFFFFFF" x="104.39999999999999" y="291">(curr_ids) { joins(:cur</text>
	<text fill="#3F3F3FFF" x="118.19999999999999" y="291">r</text>
	<text fill="#000000FF" x="118.8" y="291">iculums)</text>
	<text fill="#3F3F3FFF" x="123.6" y="291">.</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="291">where(</text>
	<text fill="#6F6F6FFF" x="127.8" y="291">"</text>
	<text fill="#000000FF" x="128.4" y="291">curriculu</text>
	<text fill="#CFCFCFFF" x="133.79999999999998" y="291">m</text>
	<text fill="#FFFFFFFF" x="134.4" y="291">s.ancestry SIMILAR TO '(#{curr_ids.jo</text>
	<text fill="#7F7F7FFF" x="156.6" y="291">i</text>
	<text fill="#000000FF" x="157.2" y="291">n("|")}</text>
	<text fill="#3F3F3FFF" x="161.4" y="291">)</text>
	<text fill="#FFFFFFFF" x="162.0" y="291">%' OR curriculu</text>
	<text fill="#000000FF" x="171.0" y="291">ms.id IN</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="291">(</text>
	<text fill="#FFFFFFFF" x="176.4" y="291">#{curr_ids.join(",")})").d</text>
	<text fill="#EFEFEFFF" x="192.0" y="291">i</text>
	<text fill="#0F0F0FFF" x="192.6" y="291">s</text>
	<text fill="#000000FF" x="193.2" y="291">tinct } </text>
	<text fill="#7F7F7FFF" x="198.0" y="291">s</text>
	<text fill="#FFFFFFFF" x="198.6" y="291">cope </text>
	<text fill="#4F4F4FFF" x="201.6" y="291">:</text>
	<text fill="#000000FF" x="202.2" y="291">stru</text>
	<text fill="#7F7F7FFF" x="204.6" y="291">c</text>
	<text fill="#FFFFFFFF" x="205.2" y="291">tured, -&gt; { reorder("curriculums_learning_objectives.posit</text>
	<text fill="#FFFFFFFF" x="0.0" y="292">ion ASC, learning_activity_learning_objectives.position ASC") } </text>
	<text fill="#CFCFCFFF" x="38.4" y="292">S</text>
	<text fill="#000000FF" x="39.0" y="292">UPPORTED_</text>
	<text fill="#DFDFDFFF" x="44.4" y="292">A</text>
	<text fill="#FFFFFFFF" x="45.0" y="292">CT</text>
	<text fill="#4F4F4FFF" x="46.199999999999996" y="292">I</text>
	<text fill="#000000FF" x="46.8" y="292">VITY</text>
	<text fill="#BFBFBFFF" x="49.199999999999996" y="292">_</text>
	<text fill="#FFFFFFFF" x="49.8" y="292">TYPES.each do </text>
	<text fill="#3F3F3FFF" x="58.199999999999996" y="292">|</text>
	<text fill="#000000FF" x="58.8" y="292">activity</text>
	<text fill="#BFBFBFFF" x="63.599999999999994" y="292">_</text>
	<text fill="#FFFFFFFF" x="64.2" y="292">type| define_method("is_#{activity_typ</text>
	<text fill="#3F3F3FFF" x="87.0" y="292">e</text>
	<text fill="#000000FF" x="87.6" y="292">}?") { </text>
	<text fill="#3F3F3FFF" x="91.8" y="292">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="292">elf.activi</text>
	<text fill="#8F8F8FFF" x="98.39999999999999" y="292">t</text>
	<text fill="#000000FF" x="99.0" y="292">y_type ==</text>
	<text fill="#BFBFBFFF" x="104.39999999999999" y="292"> </text>
	<text fill="#FFFFFFFF" x="105.0" y="292">activity_type } end de</text>
	<text fill="#2F2F2FFF" x="118.19999999999999" y="292">f</text>
	<text fill="#000000FF" x="118.8" y="292">ault_val</text>
	<text fill="#6F6F6FFF" x="123.6" y="292">u</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="292">e_for </text>
	<text fill="#7F7F7FFF" x="127.8" y="292">:</text>
	<text fill="#000000FF" x="128.4" y="292">mastery_s</text>
	<text fill="#AFAFAFFF" x="133.79999999999998" y="292">c</text>
	<text fill="#FFFFFFFF" x="134.4" y="292">ore do DEFAULT_MASTERY_SCORE end def </text>
	<text fill="#7F7F7FFF" x="156.6" y="292">i</text>
	<text fill="#000000FF" x="157.2" y="292">dentifi</text>
	<text fill="#3F3F3FFF" x="161.4" y="292">e</text>
	<text fill="#FFFFFFFF" x="162.0" y="292">r=(value) super</text>
	<text fill="#000000FF" x="171.0" y="292">(value.l</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="292">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="292">ngth &gt;= 15 ? value : "#{val</text>
	<text fill="#5F5F5FFF" x="192.6" y="292">u</text>
	<text fill="#000000FF" x="193.2" y="292">e}-#{Sec</text>
	<text fill="#0F0F0FFF" x="198.0" y="292">u</text>
	<text fill="#EFEFEFFF" x="198.6" y="292">r</text>
	<text fill="#FFFFFFFF" x="199.2" y="292">eRa</text>
	<text fill="#DFDFDFFF" x="201.0" y="292">n</text>
	<text fill="#000000FF" x="201.6" y="292">dom.h</text>
	<text fill="#DFDFDFFF" x="204.6" y="292">e</text>
	<text fill="#FFFFFFFF" x="205.2" y="292">x}") end def instructions=(value) super(sanitize_string(va</text>
	<text fill="#FFFFFFFF" x="0.0" y="293">lue)) end def show_rubric? return unless self.rubric.present? if </text>
	<text fill="#1F1F1FFF" x="39.0" y="293">s</text>
	<text fill="#000000FF" x="39.6" y="293">elf.show</text>
	<text fill="#8F8F8FFF" x="44.4" y="293">_</text>
	<text fill="#FFFFFFFF" x="45.0" y="293">r</text>
	<text fill="#EFEFEFFF" x="45.6" y="293">u</text>
	<text fill="#000000FF" x="46.199999999999996" y="293">bric</text>
	<text fill="#1F1F1FFF" x="48.6" y="293"> </text>
	<text fill="#FFFFFFFF" x="49.199999999999996" y="293">!!self.rubric e</text>
	<text fill="#7F7F7FFF" x="58.199999999999996" y="293">n</text>
	<text fill="#000000FF" x="58.8" y="293">d end de</text>
	<text fill="#9F9F9FFF" x="63.599999999999994" y="293">f</text>
	<text fill="#FFFFFFFF" x="64.2" y="293"> link_rubric(rubric) self.update_attri</text>
	<text fill="#3F3F3FFF" x="87.0" y="293">b</text>
	<text fill="#000000FF" x="87.6" y="293">utes(ru</text>
	<text fill="#3F3F3FFF" x="91.8" y="293">b</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="293">ric: rubri</text>
	<text fill="#BFBFBFFF" x="98.39999999999999" y="293">c</text>
	<text fill="#000000FF" x="99.0" y="293">) end # H</text>
	<text fill="#BFBFBFFF" x="104.39999999999999" y="293">a</text>
	<text fill="#FFFFFFFF" x="105.0" y="293">ve to do destroy this </text>
	<text fill="#000000FF" x="118.19999999999999" y="293">way becau</text>
	<text fill="#9F9F9FFF" x="123.6" y="293">s</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="293">e Rail</text>
	<text fill="#BFBFBFFF" x="127.8" y="293">s</text>
	<text fill="#000000FF" x="128.4" y="293"> does the</text>
	<text fill="#6F6F6FFF" x="133.79999999999998" y="293"> </text>
	<text fill="#FFFFFFFF" x="134.4" y="293">dependents before a before_destroy. #</text>
	<text fill="#7F7F7FFF" x="156.6" y="293"> </text>
	<text fill="#000000FF" x="157.2" y="293">Since w</text>
	<text fill="#3F3F3FFF" x="161.4" y="293">e</text>
	<text fill="#FFFFFFFF" x="162.0" y="293"> want to check </text>
	<text fill="#000000FF" x="171.0" y="293">for asso</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="293">c</text>
	<text fill="#FFFFFFFF" x="176.4" y="293">iations, we have to do it f</text>
	<text fill="#DFDFDFFF" x="192.6" y="293">i</text>
	<text fill="#000000FF" x="193.2" y="293">rst. def </text>
	<text fill="#8F8F8FFF" x="198.6" y="293">d</text>
	<text fill="#FFFFFFFF" x="199.2" y="293">est</text>
	<text fill="#7F7F7FFF" x="201.0" y="293">r</text>
	<text fill="#000000FF" x="201.6" y="293">oy i</text>
	<text fill="#5F5F5FFF" x="204.0" y="293">f</text>
	<text fill="#FFFFFFFF" x="204.6" y="293"> self.user_activities.count &gt; 0 errors.add(:base, :user_act</text>
	<text fill="#FFFFFFFF" x="0.0" y="294">ivity_count) false else super end end def ransackable [:identifie</text>
	<text fill="#8F8F8FFF" x="39.0" y="294">r</text>
	<text fill="#000000FF" x="39.6" y="294">, :descr</text>
	<text fill="#1F1F1FFF" x="44.4" y="294">i</text>
	<text fill="#FFFFFFFF" x="45.0" y="294">p</text>
	<text fill="#8F8F8FFF" x="45.6" y="294">t</text>
	<text fill="#000000FF" x="46.199999999999996" y="294">ion]</text>
	<text fill="#8F8F8FFF" x="48.6" y="294"> </text>
	<text fill="#FFFFFFFF" x="49.199999999999996" y="294">end def get_wei</text>
	<text fill="#BFBFBFFF" x="58.199999999999996" y="294">g</text>
	<text fill="#000000FF" x="58.8" y="294">ht_for_o</text>
	<text fill="#5F5F5FFF" x="63.599999999999994" y="294">b</text>
	<text fill="#FFFFFFFF" x="64.2" y="294">jective_id(learning_objective_id) self</text>
	<text fill="#3F3F3FFF" x="87.0" y="294">.</text>
	<text fill="#000000FF" x="87.6" y="294">learnin</text>
	<text fill="#3F3F3FFF" x="91.8" y="294">g</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="294">_activity_l</text>
	<text fill="#000000FF" x="99.0" y="294">earning_o</text>
	<text fill="#7F7F7FFF" x="104.39999999999999" y="294">b</text>
	<text fill="#FFFFFFFF" x="105.0" y="294">jectives.order(weight</text>
	<text fill="#EFEFEFFF" x="117.6" y="294">:</text>
	<text fill="#000000FF" x="118.19999999999999" y="294"> :desc).f</text>
	<text fill="#DFDFDFFF" x="123.6" y="294">i</text>
	<text fill="#FFFFFFFF" x="124.19999999999999" y="294">nd_by!(</text>
	<text fill="#000000FF" x="128.4" y="294">learning_</text>
	<text fill="#2F2F2FFF" x="133.79999999999998" y="294">o</text>
	<text fill="#FFFFFFFF" x="134.4" y="294">bjective_id: learning_objective_id).w</text>
	<text fill="#7F7F7FFF" x="156.6" y="294">e</text>
	<text fill="#000000FF" x="157.2" y="294">ight re</text>
	<text fill="#3F3F3FFF" x="161.4" y="294">s</text>
	<text fill="#FFFFFFFF" x="162.0" y="294">cue 0 end def g</text>
	<text fill="#000000FF" x="171.0" y="294">et_posit</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="294">i</text>
	<text fill="#FFFFFFFF" x="176.4" y="294">on_for_objective_id(learning</text>
	<text fill="#5F5F5FFF" x="193.2" y="294">_</text>
	<text fill="#000000FF" x="193.79999999999998" y="294">objectiv</text>
	<text fill="#1F1F1FFF" x="198.6" y="294">e</text>
	<text fill="#FFFFFFFF" x="199.2" y="294">_id</text>
	<text fill="#0F0F0FFF" x="201.0" y="294">)</text>
	<text fill="#000000FF" x="201.6" y="294"> sel</text>
	<text fill="#CFCFCFFF" x="204.0" y="294">f</text>
	<text fill="#FFFFFFFF" x="204.6" y="294">.learning_activity_learning_objectives.find_by!(learning_ob</text>
	<text fill="#FFFFFFFF" x="0.0" y="295">jective_id: learning_objective_id).position end # Override this m</text>
	<text fill="#DFDFDFFF" x="39.0" y="295">e</text>
	<text fill="#000000FF" x="39.6" y="295">thod to r</text>
	<text fill="#CFCFCFFF" x="45.0" y="295">e</text>
	<text fill="#2F2F2FFF" x="45.6" y="295">t</text>
	<text fill="#000000FF" x="46.199999999999996" y="295">urn </text>
	<text fill="#DFDFDFFF" x="48.6" y="295">t</text>
	<text fill="#FFFFFFFF" x="49.199999999999996" y="295">he 2 character c</text>
	<text fill="#0F0F0FFF" x="58.8" y="295">o</text>
	<text fill="#000000FF" x="59.4" y="295">de stri</text>
	<text fill="#0F0F0FFF" x="63.599999999999994" y="295">n</text>
	<text fill="#FFFFFFFF" x="64.2" y="295">g def code 'UN' end # Override this me</text>
	<text fill="#3F3F3FFF" x="87.0" y="295">t</text>
	<text fill="#000000FF" x="87.6" y="295">hod to </text>
	<text fill="#3F3F3FFF" x="91.8" y="295">r</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="295">eturn descr</text>
	<text fill="#4F4F4FFF" x="99.0" y="295">i</text>
	<text fill="#000000FF" x="99.6" y="295">ption of</text>
	<text fill="#5F5F5FFF" x="104.39999999999999" y="295"> </text>
	<text fill="#FFFFFFFF" x="105.0" y="295">this learning activit</text>
	<text fill="#BFBFBFFF" x="117.6" y="295">y</text>
	<text fill="#000000FF" x="118.19999999999999" y="295"> type de</text>
	<text fill="#1F1F1FFF" x="123.0" y="295">f</text>
	<text fill="#FFFFFFFF" x="123.6" y="295"> name 'U</text>
	<text fill="#4F4F4FFF" x="128.4" y="295">n</text>
	<text fill="#000000FF" x="129.0" y="295">known' en</text>
	<text fill="#DFDFDFFF" x="134.4" y="295">d</text>
	<text fill="#FFFFFFFF" x="135.0" y="295"> def permitted?(user, action) allowe</text>
	<text fill="#7F7F7FFF" x="156.6" y="295">d</text>
	<text fill="#000000FF" x="157.2" y="295"> = supe</text>
	<text fill="#3F3F3FFF" x="161.4" y="295">r</text>
	<text fill="#FFFFFFFF" x="162.0" y="295"> &amp;&amp; case action</text>
	<text fill="#000000FF" x="171.0" y="295"> when Ri</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="295">g</text>
	<text fill="#FFFFFFFF" x="176.4" y="295">ht::LAUNCH_AS_STUDENT # Ther</text>
	<text fill="#CFCFCFFF" x="193.2" y="295">e</text>
	<text fill="#000000FF" x="193.79999999999998" y="295"> must be </text>
	<text fill="#9F9F9FFF" x="199.2" y="295">a</text>
	<text fill="#FFFFFFFF" x="199.79999999999998" y="295"> </text>
	<text fill="#9F9F9FFF" x="200.4" y="295">C</text>
	<text fill="#000000FF" x="201.0" y="295">ohor</text>
	<text fill="#3F3F3FFF" x="203.4" y="295">t</text>
	<text fill="#FFFFFFFF" x="204.0" y="295"> with self that user is part of as a student. The Cohort enr</text>
	<text fill="#FFFFFFFF" x="0.0" y="296">ollment must be active. self.cohort_users(user) .where(role: Cohor</text>
	<text fill="#4F4F4FFF" x="39.6" y="296">t</text>
	<text fill="#000000FF" x="40.199999999999996" y="296">User::CO</text>
	<text fill="#2F2F2FFF" x="45.0" y="296">H</text>
	<text fill="#000000FF" x="45.6" y="296">ORT_</text>
	<text fill="#4F4F4FFF" x="48.0" y="296">R</text>
	<text fill="#FFFFFFFF" x="48.6" y="296">OLES[:student]) .</text>
	<text fill="#5F5F5FFF" x="58.8" y="296">w</text>
	<text fill="#000000FF" x="59.4" y="296">here("#{</text>
	<text fill="#AFAFAFFF" x="64.2" y="296">C</text>
	<text fill="#FFFFFFFF" x="64.8" y="296">ohort.table_name}.starts_on &lt;= ?", Da</text>
	<text fill="#3F3F3FFF" x="87.0" y="296">t</text>
	<text fill="#000000FF" x="87.6" y="296">e.curre</text>
	<text fill="#3F3F3FFF" x="91.8" y="296">n</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="296">t) .exists?</text>
	<text fill="#9F9F9FFF" x="99.0" y="296"> </text>
	<text fill="#000000FF" x="99.6" y="296">when Rig</text>
	<text fill="#2F2F2FFF" x="104.39999999999999" y="296">h</text>
	<text fill="#FFFFFFFF" x="105.0" y="296">t::LAUNCH_AS_INSTRUCT</text>
	<text fill="#7F7F7FFF" x="117.6" y="296">O</text>
	<text fill="#000000FF" x="118.19999999999999" y="296">R # Ther</text>
	<text fill="#6F6F6FFF" x="123.0" y="296">e</text>
	<text fill="#FFFFFFFF" x="123.6" y="296"> must be</text>
	<text fill="#9F9F9FFF" x="128.4" y="296"> </text>
	<text fill="#000000FF" x="129.0" y="296">a Cohort </text>
	<text fill="#6F6F6FFF" x="134.4" y="296">w</text>
	<text fill="#FFFFFFFF" x="135.0" y="296">ith self that user is part of not as</text>
	<text fill="#7F7F7FFF" x="156.6" y="296"> </text>
	<text fill="#000000FF" x="157.2" y="296">a stude</text>
	<text fill="#3F3F3FFF" x="161.4" y="296">n</text>
	<text fill="#FFFFFFFF" x="162.0" y="296">t. # The not as</text>
	<text fill="#000000FF" x="171.0" y="296"> a stude</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="296">n</text>
	<text fill="#FFFFFFFF" x="176.4" y="296">t is to ensure you can't grad</text>
	<text fill="#3F3F3FFF" x="193.79999999999998" y="296">e</text>
	<text fill="#000000FF" x="194.4" y="296"> your ow</text>
	<text fill="#1F1F1FFF" x="199.2" y="296">n</text>
	<text fill="#FFFFFFFF" x="199.79999999999998" y="296"> </text>
	<text fill="#2F2F2FFF" x="200.4" y="296">w</text>
	<text fill="#000000FF" x="201.0" y="296">ork.</text>
	<text fill="#9F9F9FFF" x="203.4" y="296"> </text>
	<text fill="#FFFFFFFF" x="204.0" y="296">The student must not be in an active Cohort. # You are allow</text>
	<text fill="#FFFFFFFF" x="0.0" y="297">ed in if the LA mastered or failed. can_do = false if user.has_rig</text>
	<text fill="#9F9F9FFF" x="39.6" y="297">h</text>
	<text fill="#000000FF" x="40.199999999999996" y="297">ts?(Right::MA</text>
	<text fill="#AFAFAFFF" x="48.0" y="297">N</text>
	<text fill="#FFFFFFFF" x="48.6" y="297">AGE, 'cohorts') c</text>
	<text fill="#BFBFBFFF" x="58.8" y="297">a</text>
	<text fill="#000000FF" x="59.4" y="297">n_do = t</text>
	<text fill="#3F3F3FFF" x="64.2" y="297">r</text>
	<text fill="#FFFFFFFF" x="64.8" y="297">ue else user_cohorts = self.cohort_us</text>
	<text fill="#3F3F3FFF" x="87.0" y="297">e</text>
	<text fill="#000000FF" x="87.6" y="297">rs(user</text>
	<text fill="#3F3F3FFF" x="91.8" y="297">)</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="297"> if user_co</text>
	<text fill="#EFEFEFFF" x="99.0" y="297">h</text>
	<text fill="#000000FF" x="99.6" y="297">orts.find</text>
	<text fill="#DFDFDFFF" x="105.0" y="297"> </text>
	<text fill="#FFFFFFFF" x="105.6" y="297">{ |cu| cu.role != Co</text>
	<text fill="#3F3F3FFF" x="117.6" y="297">h</text>
	<text fill="#000000FF" x="118.19999999999999" y="297">ortUser:</text>
	<text fill="#DFDFDFFF" x="123.0" y="297">:</text>
	<text fill="#FFFFFFFF" x="123.6" y="297">COHORT_R</text>
	<text fill="#EFEFEFFF" x="128.4" y="297">O</text>
	<text fill="#0F0F0FFF" x="129.0" y="297">L</text>
	<text fill="#000000FF" x="129.6" y="297">ES[:stud</text>
	<text fill="#0F0F0FFF" x="134.4" y="297">e</text>
	<text fill="#EFEFEFFF" x="135.0" y="297">n</text>
	<text fill="#FFFFFFFF" x="135.6" y="297">t] } # We are an instructor in a co</text>
	<text fill="#7F7F7FFF" x="156.6" y="297">h</text>
	<text fill="#000000FF" x="157.2" y="297">ort wit</text>
	<text fill="#3F3F3FFF" x="161.4" y="297">h</text>
	<text fill="#FFFFFFFF" x="162.0" y="297"> this LA # See </text>
	<text fill="#000000FF" x="171.0" y="297">if we ar</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="297">e</text>
	<text fill="#FFFFFFFF" x="176.4" y="297"> also a student somewhere. If</text>
	<text fill="#BFBFBFFF" x="193.79999999999998" y="297"> </text>
	<text fill="#000000FF" x="194.4" y="297">we are a </text>
	<text fill="#6F6F6FFF" x="199.79999999999998" y="297">s</text>
	<text fill="#000000FF" x="200.4" y="297">tude</text>
	<text fill="#1F1F1FFF" x="202.79999999999998" y="297">n</text>
	<text fill="#FFFFFFFF" x="203.4" y="297">t, then make sure the LA is not # in some in-progress state. </text>
	<text fill="#FFFFFFFF" x="0.0" y="298">We don't want someone able to grade their own work. can_do = true i</text>
	<text fill="#0F0F0FFF" x="40.199999999999996" y="298">f</text>
	<text fill="#000000FF" x="40.8" y="298"> user_cohor</text>
	<text fill="#0F0F0FFF" x="47.4" y="298">t</text>
	<text fill="#FFFFFFFF" x="48.0" y="298">s.find { |cu| cu.ro</text>
	<text fill="#1F1F1FFF" x="59.4" y="298">l</text>
	<text fill="#000000FF" x="60.0" y="298">e == Coh</text>
	<text fill="#BFBFBFFF" x="64.8" y="298">o</text>
	<text fill="#FFFFFFFF" x="65.39999999999999" y="298">rtUser::COHORT_ROLES[:student] } ua </text>
	<text fill="#3F3F3FFF" x="87.0" y="298">=</text>
	<text fill="#000000FF" x="87.6" y="298"> self.u</text>
	<text fill="#3F3F3FFF" x="91.8" y="298">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="298">er_activitie</text>
	<text fill="#5F5F5FFF" x="99.6" y="298">s</text>
	<text fill="#000000FF" x="100.2" y="298">.where(s</text>
	<text fill="#9F9F9FFF" x="105.0" y="298">t</text>
	<text fill="#FFFFFFFF" x="105.6" y="298">udent_id: user.id).</text>
	<text fill="#EFEFEFFF" x="117.0" y="298">f</text>
	<text fill="#000000FF" x="117.6" y="298">irst! # </text>
	<text fill="#4F4F4FFF" x="122.39999999999999" y="298">T</text>
	<text fill="#FFFFFFFF" x="123.0" y="298">his must e</text>
	<text fill="#7F7F7FFF" x="129.0" y="298">x</text>
	<text fill="#000000FF" x="129.6" y="298">ist or we</text>
	<text fill="#7F7F7FFF" x="135.0" y="298"> </text>
	<text fill="#FFFFFFFF" x="135.6" y="298">have big problems can_do = ua.maste</text>
	<text fill="#7F7F7FFF" x="156.6" y="298">r</text>
	<text fill="#000000FF" x="157.2" y="298">ed? || </text>
	<text fill="#3F3F3FFF" x="161.4" y="298">u</text>
	<text fill="#FFFFFFFF" x="162.0" y="298">a.failed? end e</text>
	<text fill="#000000FF" x="171.0" y="298">nd end c</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="298">a</text>
	<text fill="#FFFFFFFF" x="176.4" y="298">n_do else true # Everything el</text>
	<text fill="#2F2F2FFF" x="194.4" y="298">s</text>
	<text fill="#000000FF" x="195.0" y="298">e is straight</text>
	<text fill="#7F7F7FFF" x="202.79999999999998" y="298"> </text>
	<text fill="#FFFFFFFF" x="203.4" y="298">permissions end raise PermittedError.new("#{self.class.name}(</text>
	<text fill="#FFFFFFFF" x="0.0" y="299">#{self.id}): #{user.try(:username)} DENIED #{action}") unless allow</text>
	<text fill="#5F5F5FFF" x="40.199999999999996" y="299">e</text>
	<text fill="#000000FF" x="40.8" y="299">d allowed e</text>
	<text fill="#6F6F6FFF" x="47.4" y="299">n</text>
	<text fill="#FFFFFFFF" x="48.0" y="299">d # Return the list</text>
	<text fill="#BFBFBFFF" x="59.4" y="299"> </text>
	<text fill="#000000FF" x="60.0" y="299">of user'</text>
	<text fill="#2F2F2FFF" x="64.8" y="299">s</text>
	<text fill="#FFFFFFFF" x="65.39999999999999" y="299"> cohorts that have me. </text>
	<text fill="#3F3F3FFF" x="79.2" y="299">#</text>
	<text fill="#6F6F6FFF" x="79.8" y="299"> </text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="299"># This is s</text>
	<text fill="#3F3F3FFF" x="87.0" y="299">t</text>
	<text fill="#000000FF" x="87.6" y="299">range f</text>
	<text fill="#3F3F3FFF" x="91.8" y="299">o</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="299">r a reason. </text>
	<text fill="#DFDFDFFF" x="99.6" y="299">T</text>
	<text fill="#0F0F0FFF" x="100.2" y="299">h</text>
	<text fill="#000000FF" x="100.8" y="299">e reaso</text>
	<text fill="#2F2F2FFF" x="105.0" y="299">n</text>
	<text fill="#FFFFFFFF" x="105.6" y="299"> is that a user's c</text>
	<text fill="#9F9F9FFF" x="117.0" y="299">o</text>
	<text fill="#000000FF" x="117.6" y="299">hort can</text>
	<text fill="#CFCFCFFF" x="122.39999999999999" y="299"> </text>
	<text fill="#FFFFFFFF" x="123.0" y="299">be associa</text>
	<text fill="#EFEFEFFF" x="129.0" y="299">t</text>
	<text fill="#0F0F0FFF" x="129.6" y="299">e</text>
	<text fill="#000000FF" x="130.2" y="299">d with a</text>
	<text fill="#0F0F0FFF" x="135.0" y="299"> </text>
	<text fill="#DFDFDFFF" x="135.6" y="299">c</text>
	<text fill="#FFFFFFFF" x="136.2" y="299">urriculum # anywhere in the curric</text>
	<text fill="#7F7F7FFF" x="156.6" y="299">u</text>
	<text fill="#000000FF" x="157.2" y="299">lum tre</text>
	<text fill="#3F3F3FFF" x="161.4" y="299">e</text>
	<text fill="#FFFFFFFF" x="162.0" y="299">. The same deal</text>
	<text fill="#000000FF" x="171.0" y="299"> goes fo</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="299">r</text>
	<text fill="#FFFFFFFF" x="176.4" y="299"> an LA. Therefore, we have to </text>
	<text fill="#9F9F9FFF" x="194.4" y="299">w</text>
	<text fill="#000000FF" x="195.0" y="299">ork down and</text>
	<text fill="#0F0F0FFF" x="202.2" y="299"> </text>
	<text fill="#EFEFEFFF" x="202.79999999999998" y="299">u</text>
	<text fill="#FFFFFFFF" x="203.4" y="299">p the # curriculum tree to ensure we find the right intersect</text>
	<text fill="#FFFFFFFF" x="0.0" y="300">ion between user's cohort and LA. # # Example: # user --&gt; cohort --</text>
	<text fill="#CFCFCFFF" x="40.199999999999996" y="300">&gt;</text>
	<text fill="#000000FF" x="40.8" y="300"> curriculum</text>
	<text fill="#DFDFDFFF" x="47.4" y="300">1</text>
	<text fill="#FFFFFFFF" x="48.0" y="300"> #                  </text>
	<text fill="#3F3F3FFF" x="60.0" y="300"> </text>
	<text fill="#000000FF" x="60.599999999999994" y="300">      | </text>
	<text fill="#7F7F7FFF" x="65.39999999999999" y="300">#</text>
	<text fill="#FFFFFFFF" x="66.0" y="300">                     </text>
	<text fill="#5F5F5FFF" x="78.6" y="300"> </text>
	<text fill="#000000FF" x="79.2" y="300">  </text>
	<text fill="#2F2F2FFF" x="80.39999999999999" y="300"> </text>
	<text fill="#DFDFDFFF" x="81.0" y="300">|</text>
	<text fill="#FFFFFFFF" x="81.6" y="300">---&gt; curr</text>
	<text fill="#3F3F3FFF" x="87.0" y="300">i</text>
	<text fill="#000000FF" x="87.6" y="300">culum2 </text>
	<text fill="#3F3F3FFF" x="91.8" y="300">-</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="300">-&gt; LO --&gt; LA </text>
	<text fill="#7F7F7FFF" x="100.2" y="300">#</text>
	<text fill="#000000FF" x="100.8" y="300">        </text>
	<text fill="#BFBFBFFF" x="105.6" y="300"> </text>
	<text fill="#FFFFFFFF" x="106.2" y="300">                |-</text>
	<text fill="#2F2F2FFF" x="117.0" y="300">-</text>
	<text fill="#000000FF" x="117.6" y="300">-&gt; curr</text>
	<text fill="#6F6F6FFF" x="121.8" y="300">i</text>
	<text fill="#FFFFFFFF" x="122.39999999999999" y="300">culum3 # # N</text>
	<text fill="#8F8F8FFF" x="129.6" y="300">o</text>
	<text fill="#000000FF" x="130.2" y="300">te that t</text>
	<text fill="#3F3F3FFF" x="135.6" y="300">h</text>
	<text fill="#FFFFFFFF" x="136.2" y="300">e user is associated with a curric</text>
	<text fill="#7F7F7FFF" x="156.6" y="300">u</text>
	<text fill="#000000FF" x="157.2" y="300">lum at </text>
	<text fill="#3F3F3FFF" x="161.4" y="300">a</text>
	<text fill="#FFFFFFFF" x="162.0" y="300"> different leve</text>
	<text fill="#000000FF" x="171.0" y="300">l of the</text>
	<text fill="#8F8F8FFF" x="175.79999999999998" y="300"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="300">tree than the LA is. # # We fir</text>
	<text fill="#1F1F1FFF" x="195.0" y="300">s</text>
	<text fill="#000000FF" x="195.6" y="300">t find the </text>
	<text fill="#5F5F5FFF" x="202.2" y="300">i</text>
	<text fill="#FFFFFFFF" x="202.79999999999998" y="300">ntersection of the user's curriculums and the LA's curriculums</text>
	<text fill="#FFFFFFFF" x="0.0" y="301">. This is [curriculum2] in this case. # # Next, we add the ancestors</text>
	<text fill="#1F1F1FFF" x="40.8" y="301"> </text>
	<text fill="#000000FF" x="41.4" y="301">to all th</text>
	<text fill="#2F2F2FFF" x="46.8" y="301">e</text>
	<text fill="#FFFFFFFF" x="47.4" y="301"> curriculums in the i</text>
	<text fill="#DFDFDFFF" x="60.0" y="301">n</text>
	<text fill="#0F0F0FFF" x="60.599999999999994" y="301">t</text>
	<text fill="#000000FF" x="61.199999999999996" y="301">ersectio</text>
	<text fill="#9F9F9FFF" x="66.0" y="301">n</text>
	<text fill="#FFFFFFFF" x="66.6" y="301">. This is [curricul</text>
	<text fill="#5F5F5FFF" x="78.0" y="301">u</text>
	<text fill="#000000FF" x="78.6" y="301">m1,c</text>
	<text fill="#4F4F4FFF" x="81.0" y="301">u</text>
	<text fill="#FFFFFFFF" x="81.6" y="301">rriculum2</text>
	<text fill="#3F3F3FFF" x="87.0" y="301">]</text>
	<text fill="#000000FF" x="87.6" y="301"> in thi</text>
	<text fill="#3F3F3FFF" x="91.8" y="301">s</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="301"> case. # # Now</text>
	<text fill="#2F2F2FFF" x="100.8" y="301">,</text>
	<text fill="#000000FF" x="101.39999999999999" y="301"> we can</text>
	<text fill="#3F3F3FFF" x="105.6" y="301"> </text>
	<text fill="#FFFFFFFF" x="106.2" y="301">finally find all </text>
	<text fill="#AFAFAFFF" x="116.39999999999999" y="301">t</text>
	<text fill="#000000FF" x="117.0" y="301">he coho</text>
	<text fill="#1F1F1FFF" x="121.19999999999999" y="301">r</text>
	<text fill="#EFEFEFFF" x="121.8" y="301">t</text>
	<text fill="#FFFFFFFF" x="122.39999999999999" y="301">s for the use</text>
	<text fill="#3F3F3FFF" x="130.2" y="301">r</text>
	<text fill="#000000FF" x="130.79999999999998" y="301"> that inc</text>
	<text fill="#5F5F5FFF" x="136.2" y="301">l</text>
	<text fill="#FFFFFFFF" x="136.79999999999998" y="301">ude any curriculum </text>
	<text fill="#CFCFCFFF" x="148.2" y="301">i</text>
	<text fill="#AFAFAFFF" x="148.79999999999998" y="301">n</text>
	<text fill="#FFFFFFFF" x="149.4" y="301"> the set [cu</text>
	<text fill="#7F7F7FFF" x="156.6" y="301">r</text>
	<text fill="#000000FF" x="157.2" y="301">riculum</text>
	<text fill="#3F3F3FFF" x="161.4" y="301">1</text>
	<text fill="#FFFFFFFF" x="162.0" y="301">,curriculum2]. </text>
	<text fill="#000000FF" x="171.0" y="301"># # This</text>
	<text fill="#6F6F6FFF" x="175.79999999999998" y="301"> </text>
	<text fill="#FFFFFFFF" x="176.4" y="301">should handle cohorts and LAs b</text>
	<text fill="#9F9F9FFF" x="195.0" y="301">e</text>
	<text fill="#000000FF" x="195.6" y="301">ing inserte</text>
	<text fill="#DFDFDFFF" x="202.2" y="301">d</text>
	<text fill="#FFFFFFFF" x="202.79999999999998" y="301"> at any level of a curriculum tree. # def cohort_users(user) l</text>
	<text fill="#FFFFFFFF" x="0.0" y="302">a_related_courses = self.curriculums related_ids        = (la_relate</text>
	<text fill="#8F8F8FFF" x="40.8" y="302">d</text>
	<text fill="#000000FF" x="41.4" y="302">_courses.</text>
	<text fill="#9F9F9FFF" x="46.8" y="302">m</text>
	<text fill="#FFFFFFFF" x="47.4" y="302">ap(&amp;:id) + la_related_</text>
	<text fill="#AFAFAFFF" x="60.599999999999994" y="302">c</text>
	<text fill="#000000FF" x="61.199999999999996" y="302">ourses.ma</text>
	<text fill="#9F9F9FFF" x="66.6" y="302">p</text>
	<text fill="#FFFFFFFF" x="67.2" y="302">(&amp;:ancestor_ids)</text>
	<text fill="#EFEFEFFF" x="76.8" y="302">)</text>
	<text fill="#4F4F4FFF" x="77.39999999999999" y="302">.</text>
	<text fill="#000000FF" x="78.0" y="302">flat</text>
	<text fill="#0F0F0FFF" x="80.39999999999999" y="302">t</text>
	<text fill="#EFEFEFFF" x="81.0" y="302">e</text>
	<text fill="#FFFFFFFF" x="81.6" y="302">n CohortU</text>
	<text fill="#3F3F3FFF" x="87.0" y="302">s</text>
	<text fill="#000000FF" x="87.6" y="302">er.acti</text>
	<text fill="#3F3F3FFF" x="91.8" y="302">v</text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="302">e.includes(:co</text>
	<text fill="#CFCFCFFF" x="100.8" y="302">h</text>
	<text fill="#0F0F0FFF" x="101.39999999999999" y="302">o</text>
	<text fill="#000000FF" x="102.0" y="302">rt).whe</text>
	<text fill="#AFAFAFFF" x="106.2" y="302">r</text>
	<text fill="#FFFFFFFF" x="106.8" y="302">e(user_id: user</text>
	<text fill="#EFEFEFFF" x="115.8" y="302">.</text>
	<text fill="#1F1F1FFF" x="116.39999999999999" y="302">i</text>
	<text fill="#000000FF" x="117.0" y="302">d).wher</text>
	<text fill="#CFCFCFFF" x="121.19999999999999" y="302">e</text>
	<text fill="#FFFFFFFF" x="121.8" y="302">(cohorts: { cu</text>
	<text fill="#EFEFEFFF" x="130.2" y="302">r</text>
	<text fill="#2F2F2FFF" x="130.79999999999998" y="302">r</text>
	<text fill="#000000FF" x="131.4" y="302">iculum_id</text>
	<text fill="#5F5F5FFF" x="136.79999999999998" y="302">:</text>
	<text fill="#FFFFFFFF" x="137.4" y="302"> related_ids }) e</text>
	<text fill="#BFBFBFFF" x="147.6" y="302">n</text>
	<text fill="#0F0F0FFF" x="148.2" y="302">d</text>
	<text fill="#000000FF" x="148.79999999999998" y="302"> </text>
	<text fill="#9F9F9FFF" x="149.4" y="302">#</text>
	<text fill="#FFFFFFFF" x="150.0" y="302"> Creating a</text>
	<text fill="#5F5F5FFF" x="156.6" y="302"> </text>
	<text fill="#000000FF" x="157.2" y="302">draft o</text>
	<text fill="#3F3F3FFF" x="161.4" y="302">f</text>
	<text fill="#FFFFFFFF" x="162.0" y="302"> me also create</text>
	<text fill="#0F0F0FFF" x="171.0" y="302">s</text>
	<text fill="#000000FF" x="171.6" y="302"> a draf</text>
	<text fill="#1F1F1FFF" x="175.79999999999998" y="302">t</text>
	<text fill="#FFFFFFFF" x="176.4" y="302"> of all my parent LOs. # # TODO</text>
	<text fill="#EFEFEFFF" x="195.0" y="302">:</text>
	<text fill="#0F0F0FFF" x="195.6" y="302"> </text>
	<text fill="#000000FF" x="196.2" y="302">Versioned</text>
	<text fill="#3F3F3FFF" x="201.6" y="302">:</text>
	<text fill="#FFFFFFFF" x="202.2" y="302"> Save the versioned # def create_draft! # #   # Create me as a </text>
	<text fill="#FFFFFFFF" x="0.0" y="303">draft #   draft = self.create_top_clone! do |la1| # #     # Clone al</text>
	<text fill="#DFDFDFFF" x="40.8" y="303">l</text>
	<text fill="#000000FF" x="41.4" y="303"> the con</text>
	<text fill="#0F0F0FFF" x="46.199999999999996" y="303">t</text>
	<text fill="#EFEFEFFF" x="46.8" y="303">e</text>
	<text fill="#FFFFFFFF" x="47.4" y="303">nt items. #     self.co</text>
	<text fill="#9F9F9FFF" x="61.199999999999996" y="303">n</text>
	<text fill="#000000FF" x="61.8" y="303">tent_item</text>
	<text fill="#7F7F7FFF" x="67.2" y="303">s</text>
	<text fill="#FFFFFFFF" x="67.8" y="303">.roots.each { </text>
	<text fill="#CFCFCFFF" x="76.2" y="303">|</text>
	<text fill="#2F2F2FFF" x="76.8" y="303">c</text>
	<text fill="#000000FF" x="77.39999999999999" y="303">i| c</text>
	<text fill="#0F0F0FFF" x="79.8" y="303">i</text>
	<text fill="#CFCFCFFF" x="80.39999999999999" y="303">.</text>
	<text fill="#FFFFFFFF" x="81.0" y="303">clone_tree</text>
	<text fill="#1F1F1FFF" x="87.0" y="303">!</text>
	<text fill="#000000FF" x="87.6" y="303">(la1) }</text>
	<text fill="#1F1F1FFF" x="91.8" y="303"> </text>
	<text fill="#FFFFFFFF" x="92.39999999999999" y="303"># #     # As a </text>
	<text fill="#CFCFCFFF" x="101.39999999999999" y="303">d</text>
	<text fill="#0F0F0FFF" x="102.0" y="303">r</text>
	<text fill="#000000FF" x="102.6" y="303">aft, w</text>
	<text fill="#0F0F0FFF" x="106.2" y="303">e</text>
	<text fill="#CFCFCFFF" x="106.8" y="303"> </text>
	<text fill="#FFFFFFFF" x="107.39999999999999" y="303">are now orphan</text>
	<text fill="#4F4F4FFF" x="115.8" y="303">e</text>
	<text fill="#000000FF" x="116.39999999999999" y="303">d from </text>
	<text fill="#9F9F9FFF" x="120.6" y="303">a</text>
	<text fill="#FFFFFFFF" x="121.19999999999999" y="303">ll my parent LOs</text>
	<text fill="#CFCFCFFF" x="130.79999999999998" y="303">.</text>
	<text fill="#0F0F0FFF" x="131.4" y="303"> </text>
	<text fill="#000000FF" x="132.0" y="303">Create a </text>
	<text fill="#4F4F4FFF" x="137.4" y="303">d</text>
	<text fill="#EFEFEFFF" x="138.0" y="303">r</text>
	<text fill="#FFFFFFFF" x="138.6" y="303">aft of parent</text>
	<text fill="#EFEFEFFF" x="146.4" y="303"> </text>
	<text fill="#7F7F7FFF" x="147.0" y="303">L</text>
	<text fill="#000000FF" x="147.6" y="303">Os a</text>
	<text fill="#5F5F5FFF" x="150.0" y="303">n</text>
	<text fill="#FFFFFFFF" x="150.6" y="303">d hook the</text>
	<text fill="#2F2F2FFF" x="156.6" y="303">m</text>
	<text fill="#000000FF" x="157.2" y="303"> to me. </text>
	<text fill="#FFFFFFFF" x="162.0" y="303">#     # TODO: D</text>
	<text fill="#4F4F4FFF" x="171.0" y="303">o</text>
	<text fill="#000000FF" x="171.6" y="303"> not use</text>
	<text fill="#8F8F8FFF" x="176.4" y="303"> </text>
	<text fill="#FFFFFFFF" x="177.0" y="303">update_all #     self.learning_</text>
	<text fill="#7F7F7FFF" x="195.6" y="303">o</text>
	<text fill="#000000FF" x="196.2" y="303">bjectives</text>
	<text fill="#AFAFAFFF" x="201.6" y="303">.</text>
	<text fill="#FFFFFFFF" x="202.2" y="303">latest_versions.each do |lo| #       lo_draft = lo.draft_versio</text>
	<text fill="#FFFFFFFF" x="0.0" y="304">n || lo.create_draft! #       lo_draft.learning_activity_learning_obj</text>
	<text fill="#4F4F4FFF" x="41.4" y="304">e</text>
	<text fill="#000000FF" x="42.0" y="304">ctives.</text>
	<text fill="#5F5F5FFF" x="46.199999999999996" y="304">w</text>
	<text fill="#FFFFFFFF" x="46.8" y="304">here(:learning_activity_i</text>
	<text fill="#9F9F9FFF" x="61.8" y="304">d</text>
	<text fill="#000000FF" x="62.4" y="304"> =&gt; self.</text>
	<text fill="#1F1F1FFF" x="67.8" y="304">i</text>
	<text fill="#9F9F9FFF" x="68.39999999999999" y="304">d</text>
	<text fill="#FFFFFFFF" x="69.0" y="304">).update_a</text>
	<text fill="#DFDFDFFF" x="75.0" y="304">l</text>
	<text fill="#5F5F5FFF" x="75.6" y="304">l</text>
	<text fill="#000000FF" x="76.2" y="304">(:lea</text>
	<text fill="#0F0F0FFF" x="79.2" y="304">r</text>
	<text fill="#CFCFCFFF" x="79.8" y="304">n</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="304">ing_activi</text>
	<text fill="#8F8F8FFF" x="86.39999999999999" y="304">t</text>
	<text fill="#000000FF" x="87.0" y="304">y_id =&gt; l</text>
	<text fill="#8F8F8FFF" x="92.39999999999999" y="304">a</text>
	<text fill="#FFFFFFFF" x="93.0" y="304">1.id) #     end</text>
	<text fill="#CFCFCFFF" x="102.0" y="304"> </text>
	<text fill="#0F0F0FFF" x="102.6" y="304">#</text>
	<text fill="#000000FF" x="103.2" y="304">   end</text>
	<text fill="#0F0F0FFF" x="106.8" y="304"> </text>
	<text fill="#CFCFCFFF" x="107.39999999999999" y="304">#</text>
	<text fill="#FFFFFFFF" x="108.0" y="304"> #   draft #</text>
	<text fill="#5F5F5FFF" x="115.19999999999999" y="304"> </text>
	<text fill="#000000FF" x="115.8" y="304">end def</text>
	<text fill="#9F9F9FFF" x="120.0" y="304"> </text>
	<text fill="#FFFFFFFF" x="120.6" y="304">create_draft! draf</text>
	<text fill="#CFCFCFFF" x="131.4" y="304">t</text>
	<text fill="#1F1F1FFF" x="132.0" y="304"> </text>
	<text fill="#000000FF" x="132.6" y="304">= self.cr</text>
	<text fill="#0F0F0FFF" x="138.0" y="304">e</text>
	<text fill="#8F8F8FFF" x="138.6" y="304">a</text>
	<text fill="#EFEFEFFF" x="139.2" y="304">t</text>
	<text fill="#FFFFFFFF" x="139.79999999999998" y="304">e_top_clon</text>
	<text fill="#9F9F9FFF" x="145.79999999999998" y="304">e</text>
	<text fill="#1F1F1FFF" x="146.4" y="304">!</text>
	<text fill="#000000FF" x="147.0" y="304"> do |</text>
	<text fill="#9F9F9FFF" x="150.0" y="304">_</text>
	<text fill="#FFFFFFFF" x="150.6" y="304">self| # C</text>
	<text fill="#9F9F9FFF" x="156.0" y="304">r</text>
	<text fill="#000000FF" x="156.6" y="304">eate a dr</text>
	<text fill="#7F7F7FFF" x="162.0" y="304">a</text>
	<text fill="#FFFFFFFF" x="162.6" y="304">ft of parent L</text>
	<text fill="#8F8F8FFF" x="171.0" y="304">O</text>
	<text fill="#000000FF" x="171.6" y="304">s and hoo</text>
	<text fill="#8F8F8FFF" x="177.0" y="304">k</text>
	<text fill="#FFFFFFFF" x="177.6" y="304"> them </text>
	<text fill="#9F9F9FFF" x="181.2" y="304">t</text>
	<text fill="#1F1F1FFF" x="181.79999999999998" y="304">o</text>
	<text fill="#BFBFBFFF" x="182.4" y="304"> </text>
	<text fill="#FFFFFFFF" x="183.0" y="304">me. _self.learning_ob</text>
	<text fill="#EFEFEFFF" x="195.6" y="304">j</text>
	<text fill="#0F0F0FFF" x="196.2" y="304">e</text>
	<text fill="#000000FF" x="196.79999999999998" y="304">ctives.</text>
	<text fill="#1F1F1FFF" x="201.0" y="304">e</text>
	<text fill="#FFFFFFFF" x="201.6" y="304">ach do |lo| lo.create_draft! unless lo.draft? end end draft end </text>
	<text fill="#FFFFFFFF" x="0.0" y="305"># def version_rollback #   # TODO: Do not use update_all #   raise Dr</text>
	<text fill="#9F9F9FFF" x="41.4" y="305">a</text>
	<text fill="#000000FF" x="42.0" y="305">ftError</text>
	<text fill="#BFBFBFFF" x="46.199999999999996" y="305">,</text>
	<text fill="#FFFFFFFF" x="46.8" y="305"> "ERROR: Cannot rollback a</text>
	<text fill="#9F9F9FFF" x="62.4" y="305"> </text>
	<text fill="#0F0F0FFF" x="63.0" y="305">p</text>
	<text fill="#000000FF" x="63.599999999999994" y="305">ublished </text>
	<text fill="#1F1F1FFF" x="69.0" y="305">i</text>
	<text fill="#6F6F6FFF" x="69.6" y="305">t</text>
	<text fill="#AFAFAFFF" x="70.2" y="305">e</text>
	<text fill="#CFCFCFFF" x="70.8" y="305">m</text>
	<text fill="#FFFFFFFF" x="71.39999999999999" y="305">" i</text>
	<text fill="#BFBFBFFF" x="73.2" y="305">f</text>
	<text fill="#8F8F8FFF" x="73.8" y="305"> </text>
	<text fill="#4F4F4FFF" x="74.39999999999999" y="305">s</text>
	<text fill="#000000FF" x="75.0" y="305">elf.pu</text>
	<text fill="#0F0F0FFF" x="78.6" y="305">b</text>
	<text fill="#CFCFCFFF" x="79.2" y="305">l</text>
	<text fill="#FFFFFFFF" x="79.8" y="305">ished? #</text>
	<text fill="#AFAFAFFF" x="84.6" y="305"> </text>
	<text fill="#4F4F4FFF" x="85.2" y="305"> </text>
	<text fill="#1F1F1FFF" x="85.8" y="305"> </text>
	<text fill="#000000FF" x="86.39999999999999" y="305">self.learni</text>
	<text fill="#2F2F2FFF" x="93.0" y="305">n</text>
	<text fill="#5F5F5FFF" x="93.6" y="305">g</text>
	<text fill="#CFCFCFFF" x="94.2" y="305">_</text>
	<text fill="#FFFFFFFF" x="94.8" y="305">activity_lear</text>
	<text fill="#CFCFCFFF" x="102.6" y="305">n</text>
	<text fill="#1F1F1FFF" x="103.2" y="305">i</text>
	<text fill="#000000FF" x="103.8" y="305">ng_obje</text>
	<text fill="#7F7F7FFF" x="108.0" y="305">c</text>
	<text fill="#EFEFEFFF" x="108.6" y="305">t</text>
	<text fill="#FFFFFFFF" x="109.2" y="305">ives.upd</text>
	<text fill="#BFBFBFFF" x="114.0" y="305">a</text>
	<text fill="#2F2F2FFF" x="114.6" y="305">t</text>
	<text fill="#000000FF" x="115.19999999999999" y="305">e_all(</text>
	<text fill="#0F0F0FFF" x="118.8" y="305">:</text>
	<text fill="#9F9F9FFF" x="119.39999999999999" y="305">l</text>
	<text fill="#FFFFFFFF" x="120.0" y="305">earning_activity_id </text>
	<text fill="#EFEFEFFF" x="132.0" y="305">=</text>
	<text fill="#3F3F3FFF" x="132.6" y="305">&gt;</text>
	<text fill="#000000FF" x="133.2" y="305"> self.ance</text>
	<text fill="#0F0F0FFF" x="139.2" y="305">s</text>
	<text fill="#5F5F5FFF" x="139.79999999999998" y="305">t</text>
	<text fill="#9F9F9FFF" x="140.4" y="305">o</text>
	<text fill="#BFBFBFFF" x="141.0" y="305">r</text>
	<text fill="#FFFFFFFF" x="141.6" y="305">_id</text>
	<text fill="#CFCFCFFF" x="143.4" y="305">)</text>
	<text fill="#AFAFAFFF" x="144.0" y="305"> </text>
	<text fill="#5F5F5FFF" x="144.6" y="305">#</text>
	<text fill="#0F0F0FFF" x="145.2" y="305"> </text>
	<text fill="#000000FF" x="145.79999999999998" y="305">end de</text>
	<text fill="#9F9F9FFF" x="149.4" y="305">f</text>
	<text fill="#FFFFFFFF" x="150.0" y="305"> remove</text>
	<text fill="#EFEFEFFF" x="154.2" y="305">_</text>
	<text fill="#5F5F5FFF" x="154.79999999999998" y="305">i</text>
	<text fill="#2F2F2FFF" x="155.4" y="305">n</text>
	<text fill="#000000FF" x="156.0" y="305">stitution_a</text>
	<text fill="#1F1F1FFF" x="162.6" y="305">c</text>
	<text fill="#5F5F5FFF" x="163.2" y="305">c</text>
	<text fill="#CFCFCFFF" x="163.79999999999998" y="305">e</text>
	<text fill="#FFFFFFFF" x="164.4" y="305">ss(institut</text>
	<text fill="#EFEFEFFF" x="171.0" y="305">i</text>
	<text fill="#0F0F0FFF" x="171.6" y="305">o</text>
	<text fill="#000000FF" x="172.2" y="305">n_id) sup</text>
	<text fill="#1F1F1FFF" x="177.6" y="305">e</text>
	<text fill="#5F5F5FFF" x="178.2" y="305">r</text>
	<text fill="#7F7F7FFF" x="178.79999999999998" y="305"> i</text>
	<text fill="#4F4F4FFF" x="180.0" y="305">f</text>
	<text fill="#0F0F0FFF" x="180.6" y="305"> </text>
	<text fill="#000000FF" x="181.2" y="305">In</text>
	<text fill="#1F1F1FFF" x="182.4" y="305">s</text>
	<text fill="#EFEFEFFF" x="183.0" y="305">t</text>
	<text fill="#FFFFFFFF" x="183.6" y="305">itutionAcl.subjects_g</text>
	<text fill="#6F6F6FFF" x="196.2" y="305">r</text>
	<text fill="#000000FF" x="196.79999999999998" y="305">anted?(</text>
	<text fill="#9F9F9FFF" x="201.0" y="305">L</text>
	<text fill="#FFFFFFFF" x="201.6" y="305">earningObjective.name, self.learning_objective_ids, institution_</text>
	<text fill="#FFFFFFFF" x="0.0" y="306">id) raise PermittedError.new("Unable to remove access") end end # Meth</text>
	<text fill="#0F0F0FFF" x="42.0" y="306">o</text>
	<text fill="#000000FF" x="42.6" y="306">ds th</text>
	<text fill="#1F1F1FFF" x="45.6" y="306">a</text>
	<text fill="#FFFFFFFF" x="46.199999999999996" y="306">t can be called on the Resou</text>
	<text fill="#CFCFCFFF" x="63.0" y="306">r</text>
	<text fill="#2F2F2FFF" x="63.599999999999994" y="306">c</text>
	<text fill="#000000FF" x="64.2" y="306">e's Content def handle_</text>
	<text fill="#3F3F3FFF" x="78.0" y="306">p</text>
	<text fill="#EFEFEFFF" x="78.6" y="306">r</text>
	<text fill="#FFFFFFFF" x="79.2" y="306">eview(par</text>
	<text fill="#000000FF" x="84.6" y="306">ams = {}) self.c</text>
	<text fill="#1F1F1FFF" x="94.2" y="306">o</text>
	<text fill="#FFFFFFFF" x="94.8" y="306">ntent.handle_p</text>
	<text fill="#EFEFEFFF" x="103.2" y="306">r</text>
	<text fill="#4F4F4FFF" x="103.8" y="306">e</text>
	<text fill="#000000FF" x="104.39999999999999" y="306">view(pa</text>
	<text fill="#0F0F0FFF" x="108.6" y="306">r</text>
	<text fill="#5F5F5FFF" x="109.2" y="306">a</text>
	<text fill="#AFAFAFFF" x="109.8" y="306">m</text>
	<text fill="#BFBFBFFF" x="110.39999999999999" y="306">s</text>
	<text fill="#FFFFFFFF" x="111.0" y="306">.</text>
	<text fill="#DFDFDFFF" x="111.6" y="306">m</text>
	<text fill="#BFBFBFFF" x="112.2" y="306">e</text>
	<text fill="#8F8F8FFF" x="112.8" y="306">r</text>
	<text fill="#2F2F2FFF" x="113.39999999999999" y="306">g</text>
	<text fill="#000000FF" x="114.0" y="306">e(:reso</text>
	<text fill="#2F2F2FFF" x="118.19999999999999" y="306">u</text>
	<text fill="#CFCFCFFF" x="118.8" y="306">r</text>
	<text fill="#FFFFFFFF" x="119.39999999999999" y="306">ce =&gt; self))  if !self.</text>
	<text fill="#7F7F7FFF" x="133.2" y="306">c</text>
	<text fill="#0F0F0FFF" x="133.79999999999998" y="306">o</text>
	<text fill="#000000FF" x="134.4" y="306">ntent.nil? &amp;&amp; self.cont</text>
	<text fill="#0F0F0FFF" x="148.2" y="306">e</text>
	<text fill="#BFBFBFFF" x="148.79999999999998" y="306">n</text>
	<text fill="#FFFFFFFF" x="149.4" y="306">t.respon</text>
	<text fill="#5F5F5FFF" x="154.2" y="306">d</text>
	<text fill="#000000FF" x="154.79999999999998" y="306">_to?(:handle_pr</text>
	<text fill="#4F4F4FFF" x="163.79999999999998" y="306">e</text>
	<text fill="#FFFFFFFF" x="164.4" y="306">view) end de</text>
	<text fill="#8F8F8FFF" x="171.6" y="306">f</text>
	<text fill="#000000FF" x="172.2" y="306"> handle_get(params</text>
	<text fill="#8F8F8FFF" x="183.0" y="306"> </text>
	<text fill="#FFFFFFFF" x="183.6" y="306">= {}) self.content.ha</text>
	<text fill="#DFDFDFFF" x="196.2" y="306">n</text>
	<text fill="#000000FF" x="196.79999999999998" y="306">dle_ge</text>
	<text fill="#0F0F0FFF" x="200.4" y="306">t</text>
	<text fill="#EFEFEFFF" x="201.0" y="306">(</text>
	<text fill="#FFFFFFFF" x="201.6" y="306">params.merge(:resource =&gt; self))  if !self.content.nil? &amp;&amp; self.</text>
	<text fill="#FFFFFFFF" x="0.0" y="307">content.respond_to?(:handle_get) end def handle_post(params = {}) self</text>
	<text fill="#5F5F5FFF" x="42.0" y="307">.</text>
	<text fill="#000000FF" x="42.6" y="307">conte</text>
	<text fill="#8F8F8FFF" x="45.6" y="307">n</text>
	<text fill="#FFFFFFFF" x="46.199999999999996" y="307">t.handle_post(params.merge(:re</text>
	<text fill="#8F8F8FFF" x="64.2" y="307">s</text>
	<text fill="#0F0F0FFF" x="64.8" y="307">o</text>
	<text fill="#000000FF" x="65.39999999999999" y="307">urce =&gt; self)) if !</text>
	<text fill="#0F0F0FFF" x="76.8" y="307">s</text>
	<text fill="#8F8F8FFF" x="77.39999999999999" y="307">e</text>
	<text fill="#FFFFFFFF" x="78.0" y="307">lf.content</text>
	<text fill="#BFBFBFFF" x="84.0" y="307">.</text>
	<text fill="#000000FF" x="84.6" y="307">nil? &amp;&amp; self.cont</text>
	<text fill="#FFFFFFFF" x="94.8" y="307">ent.respond_to?(</text>
	<text fill="#BFBFBFFF" x="104.39999999999999" y="307">:</text>
	<text fill="#1F1F1FFF" x="105.0" y="307">h</text>
	<text fill="#000000FF" x="105.6" y="307">andle_post) end def</text>
	<text fill="#0F0F0FFF" x="117.0" y="307"> </text>
	<text fill="#7F7F7FFF" x="117.6" y="307">g</text>
	<text fill="#FFFFFFFF" x="118.19999999999999" y="307">et_content_attributes self</text>
	<text fill="#DFDFDFFF" x="133.79999999999998" y="307">.</text>
	<text fill="#5F5F5FFF" x="134.4" y="307">c</text>
	<text fill="#000000FF" x="135.0" y="307">ontent.respond_to?(:g</text>
	<text fill="#5F5F5FFF" x="147.6" y="307">e</text>
	<text fill="#EFEFEFFF" x="148.2" y="307">t</text>
	<text fill="#FFFFFFFF" x="148.79999999999998" y="307">_attribut</text>
	<text fill="#3F3F3FFF" x="154.2" y="307">e</text>
	<text fill="#000000FF" x="154.79999999999998" y="307">s) ? self.conte</text>
	<text fill="#3F3F3FFF" x="163.79999999999998" y="307">n</text>
	<text fill="#FFFFFFFF" x="164.4" y="307">t.get_attribu</text>
	<text fill="#5F5F5FFF" x="172.2" y="307">t</text>
	<text fill="#000000FF" x="172.79999999999998" y="307">es : self.conten</text>
	<text fill="#6F6F6FFF" x="182.4" y="307">t</text>
	<text fill="#EFEFEFFF" x="183.0" y="307"> </text>
	<text fill="#FFFFFFFF" x="183.6" y="307">end def log_event(temp</text>
	<text fill="#5F5F5FFF" x="196.79999999999998" y="307">l</text>
	<text fill="#000000FF" x="197.4" y="307">ate_i</text>
	<text fill="#6F6F6FFF" x="200.4" y="307">d</text>
	<text fill="#FFFFFFFF" x="201.0" y="307">, params, ts = nil, whodunnit_id = nil) attrs = { template_identi</text>
	<text fill="#FFFFFFFF" x="0.0" y="308">fier: template_id, grouping_id: params[:learning_objective_id].try(:to</text>
	<text fill="#CFCFCFFF" x="42.0" y="308">_</text>
	<text fill="#000000FF" x="42.6" y="308">s), w</text>
	<text fill="#DFDFDFFF" x="45.6" y="308">h</text>
	<text fill="#FFFFFFFF" x="46.199999999999996" y="308">odunnit_id: whodunnit_id || cur</text>
	<text fill="#EFEFEFFF" x="64.8" y="308">r</text>
	<text fill="#8F8F8FFF" x="65.39999999999999" y="308">e</text>
	<text fill="#1F1F1FFF" x="66.0" y="308">n</text>
	<text fill="#000000FF" x="66.6" y="308">t_user.try(:id)</text>
	<text fill="#0F0F0FFF" x="75.6" y="308">,</text>
	<text fill="#7F7F7FFF" x="76.2" y="308"> </text>
	<text fill="#EFEFEFFF" x="76.8" y="308">s</text>
	<text fill="#FFFFFFFF" x="77.39999999999999" y="308">ubject_id: </text>
	<text fill="#BFBFBFFF" x="84.0" y="308">s</text>
	<text fill="#000000FF" x="84.6" y="308">elf.id, subject_t</text>
	<text fill="#FFFFFFFF" x="94.8" y="308">ype: self.class.na</text>
	<text fill="#9F9F9FFF" x="105.6" y="308">m</text>
	<text fill="#3F3F3FFF" x="106.2" y="308">e</text>
	<text fill="#000000FF" x="106.8" y="308">, user_id: para</text>
	<text fill="#0F0F0FFF" x="115.8" y="308">m</text>
	<text fill="#7F7F7FFF" x="116.39999999999999" y="308">s</text>
	<text fill="#EFEFEFFF" x="117.0" y="308">[</text>
	<text fill="#FFFFFFFF" x="117.6" y="308">:student_id].try(:to_s), data</text>
	<text fill="#DFDFDFFF" x="135.0" y="308">_</text>
	<text fill="#6F6F6FFF" x="135.6" y="308">1</text>
	<text fill="#0F0F0FFF" x="136.2" y="308">:</text>
	<text fill="#000000FF" x="136.79999999999998" y="308"> params[:cohort_</text>
	<text fill="#5F5F5FFF" x="146.4" y="308">i</text>
	<text fill="#DFDFDFFF" x="147.0" y="308">d</text>
	<text fill="#FFFFFFFF" x="147.6" y="308">].try(:to_s</text>
	<text fill="#3F3F3FFF" x="154.2" y="308">)</text>
	<text fill="#000000FF" x="154.79999999999998" y="308"> } unless ts.ni</text>
	<text fill="#3F3F3FFF" x="163.79999999999998" y="308">l</text>
	<text fill="#FFFFFFFF" x="164.4" y="308">? attrs[:creat</text>
	<text fill="#7F7F7FFF" x="172.79999999999998" y="308">e</text>
	<text fill="#000000FF" x="173.4" y="308">d_at] = ts at</text>
	<text fill="#5F5F5FFF" x="181.2" y="308">t</text>
	<text fill="#DFDFDFFF" x="181.79999999999998" y="308">r</text>
	<text fill="#FFFFFFFF" x="182.4" y="308">s[:updated_at] = ts end </text>
	<text fill="#DFDFDFFF" x="196.79999999999998" y="308">E</text>
	<text fill="#000000FF" x="197.4" y="308">vent.</text>
	<text fill="#DFDFDFFF" x="200.4" y="308">p</text>
	<text fill="#FFFFFFFF" x="201.0" y="308">ublish(attrs) end def self.filter_launchable_activities(la_ids, c</text>
	<text fill="#FFFFFFFF" x="0.0" y="309">urrent_user) LearningActivityLearningObjective.joins(learning_objective</text>
	<text fill="#7F7F7FFF" x="42.6" y="309">: { </text>
	<text fill="#9F9F9FFF" x="45.0" y="309">u</text>
	<text fill="#FFFFFFFF" x="45.6" y="309">ser_objectives: { learning_plan_con</text>
	<text fill="#CFCFCFFF" x="66.6" y="309">t</text>
	<text fill="#7F7F7FFF" x="67.2" y="309">e</text>
	<text fill="#3F3F3FFF" x="67.8" y="309">x</text>
	<text fill="#0F0F0FFF" x="68.39999999999999" y="309">t</text>
	<text fill="#000000FF" x="69.0" y="309">s: { coh</text>
	<text fill="#2F2F2FFF" x="73.8" y="309">o</text>
	<text fill="#6F6F6FFF" x="74.39999999999999" y="309">r</text>
	<text fill="#AFAFAFFF" x="75.0" y="309">t</text>
	<text fill="#FFFFFFFF" x="75.6" y="309">: :cohort_users } } }) .where(learning_activity_id: </text>
	<text fill="#DFDFDFFF" x="106.8" y="309">l</text>
	<text fill="#8F8F8FFF" x="107.39999999999999" y="309">a</text>
	<text fill="#4F4F4FFF" x="108.0" y="309">_</text>
	<text fill="#1F1F1FFF" x="108.6" y="309">i</text>
	<text fill="#000000FF" x="109.2" y="309">ds, coho</text>
	<text fill="#2F2F2FFF" x="114.0" y="309">r</text>
	<text fill="#6F6F6FFF" x="114.6" y="309">t</text>
	<text fill="#AFAFAFFF" x="115.19999999999999" y="309">_</text>
	<text fill="#FFFFFFFF" x="115.8" y="309">users: {role: CohortUser::COHORT_RO</text>
	<text fill="#BFBFBFFF" x="136.79999999999998" y="309">L</text>
	<text fill="#7F7F7FFF" x="137.4" y="309">E</text>
	<text fill="#3F3F3FFF" x="138.0" y="309">S</text>
	<text fill="#0F0F0FFF" x="138.6" y="309">[</text>
	<text fill="#000000FF" x="139.2" y="309">:student</text>
	<text fill="#1F1F1FFF" x="144.0" y="309">]</text>
	<text fill="#4F4F4FFF" x="144.6" y="309">,</text>
	<text fill="#9F9F9FFF" x="145.2" y="309"> </text>
	<text fill="#EFEFEFFF" x="145.79999999999998" y="309">u</text>
	<text fill="#FFFFFFFF" x="146.4" y="309">ser_id: current_user.id}) .where("cohorts.sta</text>
	<text fill="#DFDFDFFF" x="173.4" y="309">r</text>
	<text fill="#6F6F6FFF" x="174.0" y="309">t</text>
	<text fill="#1F1F1FFF" x="174.6" y="309">s</text>
	<text fill="#000000FF" x="175.2" y="309">_on &lt;=</text>
	<text fill="#0F0F0FFF" x="178.79999999999998" y="309"> </text>
	<text fill="#4F4F4FFF" x="179.4" y="309">?</text>
	<text fill="#9F9F9FFF" x="180.0" y="309">"</text>
	<text fill="#EFEFEFFF" x="180.6" y="309">,</text>
	<text fill="#FFFFFFFF" x="181.2" y="309"> Date.current) .pluck(:lea</text>
	<text fill="#BFBFBFFF" x="196.79999999999998" y="309">r</text>
	<text fill="#000000FF" x="197.4" y="309">ning</text>
	<text fill="#4F4F4FFF" x="199.79999999999998" y="309">_</text>
	<text fill="#FFFFFFFF" x="200.4" y="309">activity_id) .uniq end end # == Schema Information # # Table name:</text>
	<text fill="#FFFFFFFF" x="0.0" y="310"> notifications # #  id              :integer          not null, primary key #  user_id         :integer          not</text>
	<text fill="#BFBFBFFF" x="69.6" y="310"> null</text>
	<text fill="#DFDFDFFF" x="72.6" y="310"> </text>
	<text fill="#FFFFFFFF" x="73.2" y="310">#  event           :string(20) #  subject         :string(255</text>
	<text fill="#BFBFBFFF" x="109.8" y="310">)    </text>
	<text fill="#DFDFDFFF" x="112.8" y="310"> </text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="310"> not null #  body            :text #  create</text>
	<text fill="#BFBFBFFF" x="139.79999999999998" y="310">d_at </text>
	<text fill="#CFCFCFFF" x="142.79999999999998" y="310"> </text>
	<text fill="#FFFFFFFF" x="143.4" y="310">    :datetime #  read_at         :datetime #  updated</text>
	<text fill="#EFEFEFFF" x="175.2" y="310">_</text>
	<text fill="#BFBFBFFF" x="175.79999999999998" y="310">at  </text>
	<text fill="#EFEFEFFF" x="178.2" y="310"> </text>
	<text fill="#FFFFFFFF" x="178.79999999999998" y="310">   :datetime #  subject_id    </text>
	<text fill="#4F4F4FFF" x="196.79999999999998" y="310"> </text>
	<text fill="#000000FF" x="197.4" y="310"> :in</text>
	<text fill="#BFBFBFFF" x="199.79999999999998" y="310">t</text>
	<text fill="#FFFFFFFF" x="200.4" y="310">eger #  subject_class   :string(255) #  sent_by_id      :integer #</text>
	<text fill="#FFFFFFFF" x="0.0" y="311">  expiration_date :datetime # class Notification &lt; ActiveRecord::Base belongs_to :user belongs_to :sent_by, class_name: User.name attr_accessor :template_name, :options default_scope { order("id desc") } default_scope { where.not(event: Announcement::NOTIFICATION_EVENTS.values) } default_scope { where.not(event: Notifications</text>
	<text fill="#DFDFDFFF" x="196.2" y="311">:</text>
	<text fill="#000000FF" x="196.79999999999998" y="311">:Web</text>
	<text fill="#2F2F2FFF" x="199.2" y="311">e</text>
	<text fill="#FFFFFFFF" x="199.79999999999998" y="311">xNotification::NOTIFICATION_EVENTS.values) } scope :announcements, </text>
	<text fill="#FFFFFFFF" x="0.0" y="312">-&gt; {unscoped.where(event: Announcement::NOTIFICATION_EVENTS.values).order("id desc")} scope :announcements_for_user, -&gt;(user_id){ announcements.where(user_id: user_id) } scope :webex_notifications, -&gt; {unscoped.where(event: Notifications::WebexNotification::NOTIFICATION_EVENTS.values).order("id desc")} scope :webex_notificati</text>
	<text fill="#5F5F5FFF" x="196.2" y="312">o</text>
	<text fill="#000000FF" x="196.79999999999998" y="312">n_fo</text>
	<text fill="#9F9F9FFF" x="199.2" y="312">r</text>
	<text fill="#FFFFFFFF" x="199.79999999999998" y="312">_user, -&gt;(user_id){ webex_notifications.where(user_id: user_id) } s</text>
	<text fill="#FFFFFFFF" x="0.0" y="313">cope :webex_current_and_futures, -&gt;{ where("#{self.table_name}.expiration_date &gt; ?", DateTime.current) } scope :score_comments, -&gt; { where(event: "new_score_comment") } scope :unread, -&gt; { where(read_at: nil) } scope :subject, -&gt;(subject){ unscoped.where(subject: subject) } scope :subject_id, -&gt;(subject_id){ unscoped.where(s</text>
	<text fill="#EFEFEFFF" x="195.6" y="313">u</text>
	<text fill="#0F0F0FFF" x="196.2" y="313">b</text>
	<text fill="#000000FF" x="196.79999999999998" y="313">jec</text>
	<text fill="#0F0F0FFF" x="198.6" y="313">t</text>
	<text fill="#FFFFFFFF" x="199.2" y="313">_id: subject_id) } before_save do |notification| notification.proces</text>
	<text fill="#FFFFFFFF" x="0.0" y="314">s_template end after_commit :send_email, on: :create, if: :is_announcement? def mark_read(read_at=Time.current) update!(read_at: read_at) end def mark_unread update!(read_at: nil) end def process_template template_options = options || {} self.subject  = template['subject'] % template_options if self.subject.nil? self.body   </text>
	<text fill="#7F7F7FFF" x="195.6" y="314"> </text>
	<text fill="#000000FF" x="196.2" y="314"> = t</text>
	<text fill="#7F7F7FFF" x="198.6" y="314">e</text>
	<text fill="#FFFFFFFF" x="199.2" y="314">mplate['body']    % template_options if self.body.nil? end ## # @des</text>
	<text fill="#FFFFFFFF" x="0.0" y="315">c Same implementation than assignments.rb model def permitted?(user, action) # Only able to do anything on my own notifications allowed = self.user.is_me?(user) raise PermittedError.new("#{self.class.name}(#{self.id}): #{user.try(:username)} DENIED #{action}") unless allowed allowed end def page(per_page = 25) position = No</text>
	<text fill="#DFDFDFFF" x="195.0" y="315">t</text>
	<text fill="#000000FF" x="195.6" y="315">ific</text>
	<text fill="#0F0F0FFF" x="198.0" y="315">a</text>
	<text fill="#EFEFEFFF" x="198.6" y="315">t</text>
	<text fill="#FFFFFFFF" x="199.2" y="315">ion.where({id: id..Float::INFINITY, user_id: user_id}).count (positi</text>
	<text fill="#FFFFFFFF" x="0.0" y="316">on.to_f/per_page).ceil end def is_announcement? Announcement::NOTIFICATION_EVENTS.values.include?(self.event) end protected def template (template_name.nil?) ? NotificationTemplates[event] : NotificationTemplates[template_name][event] end def self.single_notification_for_user(user_id, notification_id) single_notification = </text>
	<text fill="#4F4F4FFF" x="195.0" y="316">u</text>
	<text fill="#000000FF" x="195.6" y="316">nsco</text>
	<text fill="#7F7F7FFF" x="198.0" y="316">p</text>
	<text fill="#FFFFFFFF" x="198.6" y="316">ed.where(user_id: user_id, id: notification_id).first raise ActiveRec</text>
	<text fill="#FFFFFFFF" x="0.0" y="317">ord::RecordNotFound unless single_notification.present? single_notification end private def send_email MailWorker.perform_async("NotificationMailer", self.id) end end # == Schema Information # # Table name: learning_plan_contexts # #  id                :integer          not null, primary key #  cohort_id      </text>
	<text fill="#BFBFBFFF" x="186.6" y="317"> </text>
	<text fill="#5F5F5FFF" x="187.2" y="317"> </text>
	<text fill="#3F3F3FFF" x="187.79999999999998" y="317"> :i</text>
	<text fill="#8F8F8FFF" x="189.6" y="317">n</text>
	<text fill="#EFEFEFFF" x="190.2" y="317">t</text>
	<text fill="#FFFFFFFF" x="190.79999999999998" y="317">eger  </text>
	<text fill="#AFAFAFFF" x="194.4" y="317"> </text>
	<text fill="#000000FF" x="195.0" y="317">    </text>
	<text fill="#0F0F0FFF" x="197.4" y="317"> </text>
	<text fill="#EFEFEFFF" x="198.0" y="317"> </text>
	<text fill="#FFFFFFFF" x="198.6" y="317"> not null #  user_objective_id :integer          not null #  created_</text>
	<text fill="#FFFFFFFF" x="0.0" y="318">at        :datetime #  updated_at        :datetime #  position          :integer          default(1), not null #  user_id           :integer          not null # class LearningPlanContext &lt; ActiveRecord::Base belongs_to :cohort, inverse_of: :learning_plan_contexts belongs_to :user_objective, inverse_of: :learn</text>
	<text fill="#8F8F8FFF" x="186.0" y="318">i</text>
	<text fill="#000000FF" x="186.6" y="318">ng_pla</text>
	<text fill="#2F2F2FFF" x="190.2" y="318">n</text>
	<text fill="#EFEFEFFF" x="190.79999999999998" y="318">_</text>
	<text fill="#FFFFFFFF" x="191.4" y="318">cont</text>
	<text fill="#EFEFEFFF" x="193.79999999999998" y="318">e</text>
	<text fill="#0F0F0FFF" x="194.4" y="318">x</text>
	<text fill="#000000FF" x="195.0" y="318">ts b</text>
	<text fill="#8F8F8FFF" x="197.4" y="318">e</text>
	<text fill="#FFFFFFFF" x="198.0" y="318">longs_to :user has_one :learning_objective, :through =&gt; :user_objectiv</text>
	<text fill="#FFFFFFFF" x="0.0" y="319">e acts_as_list :scope =&gt; [:cohort_id, :user_id] end # == Schema Information # # Table name: data_user_cohort_dates_vw # #  user_id   :integer #  cohort_id :integer #  starts_at :date #  ends_at   :datetime #  num_weeks :decimal(, ) # class ViewCohortDates &lt; ActiveRecord::Base self.table_name = 'data_user_coh</text>
	<text fill="#BFBFBFFF" x="185.4" y="319">o</text>
	<text fill="#000000FF" x="186.0" y="319">rt_dates</text>
	<text fill="#8F8F8FFF" x="190.79999999999998" y="319">_</text>
	<text fill="#FFFFFFFF" x="191.4" y="319">vw'</text>
	<text fill="#EFEFEFFF" x="193.2" y="319"> </text>
	<text fill="#2F2F2FFF" x="193.79999999999998" y="319">#</text>
	<text fill="#000000FF" x="194.4" y="319"> Be </text>
	<text fill="#2F2F2FFF" x="196.79999999999998" y="319">s</text>
	<text fill="#FFFFFFFF" x="197.4" y="319">ure that no one tries to write to this def readonly? true end def self.</text>
	<text fill="#FFFFFFFF" x="0.0" y="320">get_cohort_dates(cohort, student) dates = [] if cohort.rolling? cohort_dates = self.where(user_id: </text>
	<text fill="#F7E1E2FF" x="59.4" y="320">s</text>
	<text fill="#EEC3C5FF" x="60.0" y="320">t</text>
	<text fill="#EAB4B7FF" x="60.599999999999994" y="320">u</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="320">dent.i</text>
	<text fill="#EEC3C5FF" x="64.8" y="320">d</text>
	<text fill="#FBF0F1FF" x="65.39999999999999" y="320">,</text>
	<text fill="#FFFFFFFF" x="66.0" y="320"> cohort_id: cohort.</text>
	<text fill="#F7E1E2FF" x="77.39999999999999" y="320">i</text>
	<text fill="#EEC3C5FF" x="78.0" y="320">d).</text>
	<text fill="#F2D2D4FF" x="79.8" y="320">f</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="320">irst dates &lt;&lt; sanit</text>
	<text fill="#F2D2D4FF" x="91.8" y="320">i</text>
	<text fill="#EEC3C5FF" x="92.39999999999999" y="320">z</text>
	<text fill="#E6A5A8FF" x="93.0" y="320">e</text>
	<text fill="#DD878CFF" x="93.6" y="320">_date</text>
	<text fill="#E2969AFF" x="96.6" y="320">s</text>
	<text fill="#EEC3C5FF" x="97.2" y="320">(</text>
	<text fill="#FBF0F1FF" x="97.8" y="320">c</text>
	<text fill="#FFFFFFFF" x="98.39999999999999" y="320">ohort_dates.s</text>
	<text fill="#F2D2D4FF" x="106.2" y="320">t</text>
	<text fill="#EEC3C5FF" x="106.8" y="320">arts_at, cohort_d</text>
	<text fill="#F2D2D4FF" x="117.0" y="320">a</text>
	<text fill="#FFFFFFFF" x="117.6" y="320">tes.ends_</text>
	<text fill="#FBF0F1FF" x="123.0" y="320">a</text>
	<text fill="#EEC3C5FF" x="123.6" y="320">t )</text>
	<text fill="#F2D2D4FF" x="125.39999999999999" y="320"> </text>
	<text fill="#FFFFFFFF" x="126.0" y="320">else cu = C</text>
	<text fill="#F2D2D4FF" x="132.6" y="320">o</text>
	<text fill="#EEC3C5FF" x="133.2" y="320">ho</text>
	<text fill="#F7E1E2FF" x="134.4" y="320">r</text>
	<text fill="#FFFFFFFF" x="135.0" y="320">tUser.find_b</text>
	<text fill="#F2D2D4FF" x="142.2" y="320">y</text>
	<text fill="#EEC3C5FF" x="142.79999999999998" y="320">(user_id: st</text>
	<text fill="#F2D2D4FF" x="150.0" y="320">u</text>
	<text fill="#FFFFFFFF" x="150.6" y="320">dent.id, coh</text>
	<text fill="#F2D2D4FF" x="157.79999999999998" y="320">o</text>
	<text fill="#EEC3C5FF" x="158.4" y="320">r</text>
	<text fill="#E2969AFF" x="159.0" y="320">t</text>
	<text fill="#DD878CFF" x="159.6" y="320">_id: </text>
	<text fill="#E6A5A8FF" x="162.6" y="320">c</text>
	<text fill="#EEC3C5FF" x="163.2" y="320">o</text>
	<text fill="#FFFFFFFF" x="163.79999999999998" y="320">hort.id) dates &lt;&lt; sa</text>
	<text fill="#F2D2D4FF" x="175.79999999999998" y="320">n</text>
	<text fill="#E2969AFF" x="176.4" y="320">i</text>
	<text fill="#D9787DFF" x="177.0" y="320">t</text>
	<text fill="#CD4B52FF" x="177.6" y="320">iz</text>
	<text fill="#D5696FFF" x="178.79999999999998" y="320">e</text>
	<text fill="#DD878CFF" x="179.4" y="320">_</text>
	<text fill="#EAB4B7FF" x="180.0" y="320">d</text>
	<text fill="#FBF0F1FF" x="180.6" y="320">a</text>
	<text fill="#FFFFFFFF" x="181.2" y="320">tes(cu.</text>
	<text fill="#5F5F5FFF" x="185.4" y="320">s</text>
	<text fill="#000000FF" x="186.0" y="320">tarted_o</text>
	<text fill="#2F2F2FFF" x="190.79999999999998" y="320">n</text>
	<text fill="#FFFFFFFF" x="191.4" y="320">, </text>
	<text fill="#CFCFCFFF" x="192.6" y="320">c</text>
	<text fill="#2F2F2FFF" x="193.2" y="320">u</text>
	<text fill="#000000FF" x="193.79999999999998" y="320">.end</text>
	<text fill="#0F0F0FFF" x="196.2" y="320">s</text>
	<text fill="#CFCFCFFF" x="196.79999999999998" y="320">_</text>
	<text fill="#FFFFFFFF" x="197.4" y="320">on) end dates end private def self.to_epoch(t) t.nil? ? 0 : t.to_time.t</text>
	<text fill="#FFFFFFFF" x="0.0" y="321">o_i * 1000 end def self.sanitize_dates(starts_on, ends_on) {starts_at: to_epoch(starts_on), ends_at</text>
	<text fill="#CD4B52FF" x="59.4" y="321">:</text>
	<text fill="#BC1019FF" x="60.0" y="321"> to_epoch(</text>
	<text fill="#C83C43FF" x="66.0" y="321">e</text>
	<text fill="#E6A5A8FF" x="66.6" y="321">n</text>
	<text fill="#FFFFFFFF" x="67.2" y="321">ds_on)} end end #</text>
	<text fill="#C42D35FF" x="77.39999999999999" y="321"> </text>
	<text fill="#BC1019FF" x="78.0" y="321">== </text>
	<text fill="#C42D35FF" x="79.8" y="321">S</text>
	<text fill="#FFFFFFFF" x="80.39999999999999" y="321">chema Information </text>
	<text fill="#EEC3C5FF" x="91.2" y="321">#</text>
	<text fill="#BC1019FF" x="91.8" y="321"> # Table na</text>
	<text fill="#D15A60FF" x="98.39999999999999" y="321">m</text>
	<text fill="#EEC3C5FF" x="99.0" y="321">e</text>
	<text fill="#FFFFFFFF" x="99.6" y="321">: activity_</text>
	<text fill="#CD4B52FF" x="106.2" y="321">s</text>
	<text fill="#BC1019FF" x="106.8" y="321">core_comments # #</text>
	<text fill="#CD4B52FF" x="117.0" y="321"> </text>
	<text fill="#FFFFFFFF" x="117.6" y="321"> id      </text>
	<text fill="#EEC3C5FF" x="123.0" y="321"> </text>
	<text fill="#BC1019FF" x="123.6" y="321">   </text>
	<text fill="#C01E27FF" x="125.39999999999999" y="321"> </text>
	<text fill="#F7E1E2FF" x="126.0" y="321"> </text>
	<text fill="#FFFFFFFF" x="126.6" y="321">          </text>
	<text fill="#CD4B52FF" x="132.6" y="321"> </text>
	<text fill="#BC1019FF" x="133.2" y="321">:i</text>
	<text fill="#DD878CFF" x="134.4" y="321">n</text>
	<text fill="#FFFFFFFF" x="135.0" y="321">teger       </text>
	<text fill="#CD4B52FF" x="142.2" y="321"> </text>
	<text fill="#BC1019FF" x="142.79999999999998" y="321">  not null, </text>
	<text fill="#CD4B52FF" x="150.0" y="321">p</text>
	<text fill="#FFFFFFFF" x="150.6" y="321">rimary key </text>
	<text fill="#DD878CFF" x="157.2" y="321">#</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="321">  body     </text>
	<text fill="#D5696FFF" x="164.4" y="321"> </text>
	<text fill="#F7E1E2FF" x="165.0" y="321"> </text>
	<text fill="#FFFFFFFF" x="165.6" y="321">              :</text>
	<text fill="#EEC3C5FF" x="174.6" y="321">t</text>
	<text fill="#C83C43FF" x="175.2" y="321">e</text>
	<text fill="#BC1019FF" x="175.79999999999998" y="321">xt #  act</text>
	<text fill="#E6A5A8FF" x="181.2" y="321">i</text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="321">vity_s</text>
	<text fill="#3F3F3FFF" x="185.4" y="321">c</text>
	<text fill="#000000FF" x="186.0" y="321">ore_id   </text>
	<text fill="#4F4F4FFF" x="191.4" y="321"> </text>
	<text fill="#3F3F3FFF" x="192.0" y="321"> </text>
	<text fill="#000000FF" x="192.6" y="321">   :in</text>
	<text fill="#9F9F9FFF" x="196.2" y="321">t</text>
	<text fill="#FFFFFFFF" x="196.79999999999998" y="321">eger #  created_at               :datetime #  updated_at               :</text>
	<text fill="#FFFFFFFF" x="0.0" y="322">datetime #  student_id               :integer #  user_activity_attempt_id :integer          not nul</text>
	<text fill="#CD4B52FF" x="59.4" y="322">l</text>
	<text fill="#BC1019FF" x="60.0" y="322"> #  cohort_i</text>
	<text fill="#D15A60FF" x="67.2" y="322">d</text>
	<text fill="#FBF0F1FF" x="67.8" y="322"> </text>
	<text fill="#FFFFFFFF" x="68.39999999999999" y="322">              </text>
	<text fill="#EEC3C5FF" x="76.8" y="322"> </text>
	<text fill="#BC1019FF" x="77.39999999999999" y="322">:inte</text>
	<text fill="#EAB4B7FF" x="80.39999999999999" y="322">g</text>
	<text fill="#FFFFFFFF" x="81.0" y="322">er #  author_id  </text>
	<text fill="#EEC3C5FF" x="91.2" y="322"> </text>
	<text fill="#BC1019FF" x="91.8" y="322">             </text>
	<text fill="#D9787DFF" x="99.6" y="322">:</text>
	<text fill="#FFFFFFFF" x="100.2" y="322">integer # </text>
	<text fill="#CD4B52FF" x="106.2" y="322">c</text>
	<text fill="#BC1019FF" x="106.8" y="322">lass ActivityScor</text>
	<text fill="#CD4B52FF" x="117.0" y="322">e</text>
	<text fill="#FFFFFFFF" x="117.6" y="322">Comment &lt;</text>
	<text fill="#EEC3C5FF" x="123.0" y="322"> </text>
	<text fill="#BC1019FF" x="123.6" y="322">Acti</text>
	<text fill="#C83C43FF" x="126.0" y="322">v</text>
	<text fill="#FFFFFFFF" x="126.6" y="322">eRecord::B</text>
	<text fill="#CD4B52FF" x="132.6" y="322">a</text>
	<text fill="#BC1019FF" x="133.2" y="322">se</text>
	<text fill="#DD878CFF" x="134.4" y="322"> </text>
	<text fill="#FFFFFFFF" x="135.0" y="322">include Html</text>
	<text fill="#CD4B52FF" x="142.2" y="322">S</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="322">anitize belo</text>
	<text fill="#CD4B52FF" x="150.0" y="322">n</text>
	<text fill="#FFFFFFFF" x="150.6" y="322">gs_to :acti</text>
	<text fill="#DD878CFF" x="157.2" y="322">v</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="322">ity_score bel</text>
	<text fill="#E6A5A8FF" x="165.6" y="322">o</text>
	<text fill="#FFFFFFFF" x="166.2" y="322">ngs_to :user_</text>
	<text fill="#E6A5A8FF" x="174.0" y="322">a</text>
	<text fill="#BC1019FF" x="174.6" y="322">ctivity_att</text>
	<text fill="#EEC3C5FF" x="181.2" y="322">e</text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="322">mpt be</text>
	<text fill="#4F4F4FFF" x="185.4" y="322">l</text>
	<text fill="#000000FF" x="186.0" y="322">ongs_to :cohort </text>
	<text fill="#9F9F9FFF" x="195.6" y="322">b</text>
	<text fill="#FFFFFFFF" x="196.2" y="322">elongs_to :student, class_name: User.name belongs_to :author, class_name:</text>
	<text fill="#FFFFFFFF" x="0.0" y="323"> User.name after_create :create_notification_for_student after_destroy :delete_notification_for_stu</text>
	<text fill="#CD4B52FF" x="59.4" y="323">d</text>
	<text fill="#BC1019FF" x="60.0" y="323">en</text>
	<text fill="#D5696FFF" x="61.199999999999996" y="323">t</text>
	<text fill="#FFFFFFFF" x="61.8" y="323"> val</text>
	<text fill="#F7E1E2FF" x="64.2" y="323">i</text>
	<text fill="#E2969AFF" x="64.8" y="323">d</text>
	<text fill="#C42D35FF" x="65.39999999999999" y="323">a</text>
	<text fill="#BC1019FF" x="66.0" y="323">tes</text>
	<text fill="#D15A60FF" x="67.8" y="323"> </text>
	<text fill="#FFFFFFFF" x="68.39999999999999" y="323">:user_activity</text>
	<text fill="#D5696FFF" x="76.8" y="323">_</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="323">at</text>
	<text fill="#C01E27FF" x="78.6" y="323">t</text>
	<text fill="#BC1019FF" x="79.2" y="323">em</text>
	<text fill="#D15A60FF" x="80.39999999999999" y="323">p</text>
	<text fill="#FFFFFFFF" x="81.0" y="323">t_id, presence: t</text>
	<text fill="#EEC3C5FF" x="91.2" y="323">r</text>
	<text fill="#BC1019FF" x="91.8" y="323">ue </text>
	<text fill="#EAB4B7FF" x="93.6" y="323">v</text>
	<text fill="#FFFFFFFF" x="94.2" y="323">alid</text>
	<text fill="#F2D2D4FF" x="96.6" y="323">a</text>
	<text fill="#DD878CFF" x="97.2" y="323">t</text>
	<text fill="#C01E27FF" x="97.8" y="323">e</text>
	<text fill="#BC1019FF" x="98.39999999999999" y="323">s :</text>
	<text fill="#E2969AFF" x="100.2" y="323">c</text>
	<text fill="#FFFFFFFF" x="100.8" y="323">ohort_id,</text>
	<text fill="#F2D2D4FF" x="106.2" y="323"> </text>
	<text fill="#EEC3C5FF" x="106.8" y="323">      </text>
	<text fill="#E2969AFF" x="110.39999999999999" y="323"> </text>
	<text fill="#BC1019FF" x="111.0" y="323">   </text>
	<text fill="#E2969AFF" x="112.8" y="323"> </text>
	<text fill="#EEC3C5FF" x="113.39999999999999" y="323">    pr</text>
	<text fill="#F2D2D4FF" x="117.0" y="323">e</text>
	<text fill="#FFFFFFFF" x="117.6" y="323">sence: tr</text>
	<text fill="#EEC3C5FF" x="123.0" y="323">u</text>
	<text fill="#BC1019FF" x="123.6" y="323">e val</text>
	<text fill="#D9787DFF" x="126.6" y="323">i</text>
	<text fill="#FFFFFFFF" x="127.19999999999999" y="323">dates :st</text>
	<text fill="#CD4B52FF" x="132.6" y="323">u</text>
	<text fill="#BC1019FF" x="133.2" y="323">de</text>
	<text fill="#DD878CFF" x="134.4" y="323">n</text>
	<text fill="#FFFFFFFF" x="135.0" y="323">t_id,       </text>
	<text fill="#CD4B52FF" x="142.2" y="323"> </text>
	<text fill="#BC1019FF" x="142.79999999999998" y="323">  </text>
	<text fill="#D5696FFF" x="144.0" y="323"> </text>
	<text fill="#EEC3C5FF" x="144.6" y="323">    prese</text>
	<text fill="#F2D2D4FF" x="150.0" y="323">n</text>
	<text fill="#FFFFFFFF" x="150.6" y="323">ce: true va</text>
	<text fill="#DD878CFF" x="157.2" y="323">l</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="323">ida</text>
	<text fill="#FBF0F1FF" x="159.6" y="323">t</text>
	<text fill="#FFFFFFFF" x="160.2" y="323">es :</text>
	<text fill="#EEC3C5FF" x="162.6" y="323">a</text>
	<text fill="#D5696FFF" x="163.2" y="323">u</text>
	<text fill="#BC1019FF" x="163.79999999999998" y="323">thor</text>
	<text fill="#EEC3C5FF" x="166.2" y="323">_</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="323">id,        </text>
	<text fill="#EAB4B7FF" x="173.4" y="323"> </text>
	<text fill="#BC1019FF" x="174.0" y="323">   </text>
	<text fill="#C42D35FF" x="175.79999999999998" y="323"> </text>
	<text fill="#E6A5A8FF" x="176.4" y="323"> </text>
	<text fill="#FFFFFFFF" x="177.0" y="323">  pr</text>
	<text fill="#F2D2D4FF" x="179.4" y="323">e</text>
	<text fill="#DD878CFF" x="180.0" y="323">s</text>
	<text fill="#CD4B52FF" x="180.6" y="323">e</text>
	<text fill="#FFFFFFFF" x="181.2" y="323">nce: tr</text>
	<text fill="#9F9F9FFF" x="185.4" y="323">u</text>
	<text fill="#000000FF" x="186.0" y="323">e def get_learn</text>
	<text fill="#9F9F9FFF" x="195.0" y="323">i</text>
	<text fill="#FFFFFFFF" x="195.6" y="323">ng_activity if activity_score activity_score.user_activity_attempt.user_ac</text>
	<text fill="#FFFFFFFF" x="0.0" y="324">tivity.learning_activity else user_activity_attempt.user_activity.learning_activity end end def get</text>
	<text fill="#CD4B52FF" x="59.4" y="324">_</text>
	<text fill="#BC1019FF" x="60.0" y="324">co</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="324">h</text>
	<text fill="#FFFFFFFF" x="61.8" y="324">ort_id</text>
	<text fill="#FBF0F1FF" x="65.39999999999999" y="324"> </text>
	<text fill="#C83C43FF" x="66.0" y="324">s</text>
	<text fill="#BC1019FF" x="66.6" y="324">elf</text>
	<text fill="#EEC3C5FF" x="68.39999999999999" y="324">.</text>
	<text fill="#FFFFFFFF" x="69.0" y="324">cohort_id ||</text>
	<text fill="#FBF0F1FF" x="76.2" y="324"> </text>
	<text fill="#C01E27FF" x="76.8" y="324">s</text>
	<text fill="#BC1019FF" x="77.39999999999999" y="324">el</text>
	<text fill="#DD878CFF" x="78.6" y="324">f</text>
	<text fill="#BC1019FF" x="79.2" y="324">.ac</text>
	<text fill="#F7E1E2FF" x="81.0" y="324">t</text>
	<text fill="#FFFFFFFF" x="81.6" y="324">ivity_score.coho</text>
	<text fill="#EEC3C5FF" x="91.2" y="324">r</text>
	<text fill="#BC1019FF" x="91.8" y="324">t_i</text>
	<text fill="#EEC3C5FF" x="93.6" y="324">d</text>
	<text fill="#FFFFFFFF" x="94.2" y="324"> end d</text>
	<text fill="#F2D2D4FF" x="97.8" y="324">e</text>
	<text fill="#C01E27FF" x="98.39999999999999" y="324">f</text>
	<text fill="#BC1019FF" x="99.0" y="324"> g</text>
	<text fill="#C42D35FF" x="100.2" y="324">e</text>
	<text fill="#FFFFFFFF" x="100.8" y="324">t_learning_objec</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="324">t</text>
	<text fill="#BC1019FF" x="111.0" y="324">ive</text>
	<text fill="#EEC3C5FF" x="112.8" y="324">(</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="324">cohort_id, stude</text>
	<text fill="#EEC3C5FF" x="123.0" y="324">n</text>
	<text fill="#BC1019FF" x="123.6" y="324">t_</text>
	<text fill="#C01E27FF" x="124.8" y="324">i</text>
	<text fill="#BC1019FF" x="125.39999999999999" y="324">d, </text>
	<text fill="#EEC3C5FF" x="127.19999999999999" y="324">l</text>
	<text fill="#FFFFFFFF" x="127.8" y="324">earning_</text>
	<text fill="#CD4B52FF" x="132.6" y="324">a</text>
	<text fill="#BC1019FF" x="133.2" y="324">ct</text>
	<text fill="#DD878CFF" x="134.4" y="324">i</text>
	<text fill="#FFFFFFFF" x="135.0" y="324">vity_id) c =</text>
	<text fill="#CD4B52FF" x="142.2" y="324"> </text>
	<text fill="#BC1019FF" x="142.79999999999998" y="324">Co</text>
	<text fill="#DD878CFF" x="144.0" y="324">h</text>
	<text fill="#FFFFFFFF" x="144.6" y="324">ort.arel_table lpc = </text>
	<text fill="#DD878CFF" x="157.2" y="324">L</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="324">ear</text>
	<text fill="#FFFFFFFF" x="159.6" y="324">ningPla</text>
	<text fill="#EAB4B7FF" x="163.79999999999998" y="324">n</text>
	<text fill="#BC1019FF" x="164.4" y="324">Con</text>
	<text fill="#D15A60FF" x="166.2" y="324">t</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="324">ext.arel_ta</text>
	<text fill="#C83C43FF" x="173.4" y="324">b</text>
	<text fill="#BC1019FF" x="174.0" y="324">le</text>
	<text fill="#C42D35FF" x="175.2" y="324"> </text>
	<text fill="#FBF0F1FF" x="175.79999999999998" y="324">u</text>
	<text fill="#FFFFFFFF" x="176.4" y="324">o = UserObjectiv</text>
	<text fill="#3F3F3FFF" x="186.0" y="324">e</text>
	<text fill="#000000FF" x="186.6" y="324">.arel_table </text>
	<text fill="#1F1F1FFF" x="193.79999999999998" y="324">u</text>
	<text fill="#BFBFBFFF" x="194.4" y="324">a</text>
	<text fill="#FFFFFFFF" x="195.0" y="324"> = UserActivity.arel_table lalo = LearningActivityLearningObjective.arel_ta</text>
	<text fill="#FFFFFFFF" x="0.0" y="325">ble query = c.project(uo[:learning_objective_id]) query = query.join(lpc).on(lpc[:cohort_id].eq(c[:</text>
	<text fill="#CD4B52FF" x="59.4" y="325">i</text>
	<text fill="#BC1019FF" x="60.0" y="325">d]</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="325">)</text>
	<text fill="#FFFFFFFF" x="61.8" y="325">) query</text>
	<text fill="#F7E1E2FF" x="66.0" y="325"> </text>
	<text fill="#BC1019FF" x="66.6" y="325">= q</text>
	<text fill="#D9787DFF" x="68.39999999999999" y="325">u</text>
	<text fill="#FFFFFFFF" x="69.0" y="325">ery.join(uo)</text>
	<text fill="#E6A5A8FF" x="76.2" y="325">.</text>
	<text fill="#BC1019FF" x="76.8" y="325">on</text>
	<text fill="#C42D35FF" x="78.0" y="325">(</text>
	<text fill="#FBF0F1FF" x="78.6" y="325">u</text>
	<text fill="#BC1019FF" x="79.2" y="325">o[:</text>
	<text fill="#E2969AFF" x="81.0" y="325">i</text>
	<text fill="#FFFFFFFF" x="81.6" y="325">d].eq(lpc[:user_</text>
	<text fill="#EEC3C5FF" x="91.2" y="325">o</text>
	<text fill="#BC1019FF" x="91.8" y="325">bje</text>
	<text fill="#EEC3C5FF" x="93.6" y="325">c</text>
	<text fill="#FFFFFFFF" x="94.2" y="325">tive_id</text>
	<text fill="#DD878CFF" x="98.39999999999999" y="325">]</text>
	<text fill="#BC1019FF" x="99.0" y="325">)) </text>
	<text fill="#F2D2D4FF" x="100.8" y="325">q</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="325">uery = query.jo</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="325">i</text>
	<text fill="#BC1019FF" x="111.0" y="325">n(l</text>
	<text fill="#EEC3C5FF" x="112.8" y="325">a</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="325">lo).on(lalo[:lea</text>
	<text fill="#EEC3C5FF" x="123.0" y="325">r</text>
	<text fill="#BC1019FF" x="123.6" y="325">ni</text>
	<text fill="#CD4B52FF" x="124.8" y="325">ng</text>
	<text fill="#BC1019FF" x="126.0" y="325">_o</text>
	<text fill="#C01E27FF" x="127.19999999999999" y="325">b</text>
	<text fill="#FBF0F1FF" x="127.8" y="325">j</text>
	<text fill="#FFFFFFFF" x="128.4" y="325">ective_</text>
	<text fill="#CD4B52FF" x="132.6" y="325">i</text>
	<text fill="#BC1019FF" x="133.2" y="325">d]</text>
	<text fill="#DD878CFF" x="134.4" y="325">.</text>
	<text fill="#FFFFFFFF" x="135.0" y="325">eq(uo[:learn</text>
	<text fill="#CD4B52FF" x="142.2" y="325">i</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="325">ng</text>
	<text fill="#DD878CFF" x="144.0" y="325">_</text>
	<text fill="#FFFFFFFF" x="144.6" y="325">objective_id])) query</text>
	<text fill="#DD878CFF" x="157.2" y="325"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="325">= q</text>
	<text fill="#FFFFFFFF" x="159.6" y="325">uery.joi</text>
	<text fill="#D5696FFF" x="164.4" y="325">n</text>
	<text fill="#BC1019FF" x="165.0" y="325">(ua</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="325">).on( ua[:l</text>
	<text fill="#BC1019FF" x="173.4" y="325">ear</text>
	<text fill="#DD878CFF" x="175.2" y="325">n</text>
	<text fill="#FFFFFFFF" x="175.79999999999998" y="325">ing_activity_id].e</text>
	<text fill="#6F6F6FFF" x="186.6" y="325">q</text>
	<text fill="#000000FF" x="187.2" y="325">(lalo[:le</text>
	<text fill="#0F0F0FFF" x="192.6" y="325">a</text>
	<text fill="#7F7F7FFF" x="193.2" y="325">r</text>
	<text fill="#EFEFEFFF" x="193.79999999999998" y="325">n</text>
	<text fill="#FFFFFFFF" x="194.4" y="325">ing_activity_id]).and(uo[:student_id].eq(ua[:student_id])) ) query = query.w</text>
	<text fill="#FFFFFFFF" x="0.0" y="326">here( c[:id].eq(cohort_id) .and(uo[:student_id].eq(student_id)) .and(ua[:learning_activity_id].eq(l</text>
	<text fill="#CD4B52FF" x="59.4" y="326">e</text>
	<text fill="#BC1019FF" x="60.0" y="326">ar</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="326">n</text>
	<text fill="#FFFFFFFF" x="61.8" y="326">ing_acti</text>
	<text fill="#C83C43FF" x="66.6" y="326">v</text>
	<text fill="#BC1019FF" x="67.2" y="326">it</text>
	<text fill="#CD4B52FF" x="68.39999999999999" y="326">y</text>
	<text fill="#FFFFFFFF" x="69.0" y="326">_id)) ) quer</text>
	<text fill="#C83C43FF" x="76.2" y="326">y</text>
	<text fill="#BC1019FF" x="76.8" y="326"> =</text>
	<text fill="#D9787DFF" x="78.0" y="326"> </text>
	<text fill="#FFFFFFFF" x="78.6" y="326">q</text>
	<text fill="#D15A60FF" x="79.2" y="326">u</text>
	<text fill="#BC1019FF" x="79.8" y="326">er</text>
	<text fill="#C42D35FF" x="81.0" y="326">y</text>
	<text fill="#FFFFFFFF" x="81.6" y="326">.order(lpc[:posi</text>
	<text fill="#EEC3C5FF" x="91.2" y="326">t</text>
	<text fill="#BC1019FF" x="91.8" y="326">ion</text>
	<text fill="#EEC3C5FF" x="93.6" y="326">]</text>
	<text fill="#FFFFFFFF" x="94.2" y="326">).take(</text>
	<text fill="#EEC3C5FF" x="98.39999999999999" y="326">1</text>
	<text fill="#BC1019FF" x="99.0" y="326">).t</text>
	<text fill="#EEC3C5FF" x="100.8" y="326">o</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="326">_sql result = A</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="326">c</text>
	<text fill="#BC1019FF" x="111.0" y="326">tiv</text>
	<text fill="#EEC3C5FF" x="112.8" y="326">i</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="326">tyScoreComment.c</text>
	<text fill="#EEC3C5FF" x="123.0" y="326">o</text>
	<text fill="#BC1019FF" x="123.6" y="326">nn</text>
	<text fill="#C42D35FF" x="124.8" y="326">e</text>
	<text fill="#F2D2D4FF" x="125.39999999999999" y="326">c</text>
	<text fill="#BC1019FF" x="126.0" y="326">tio</text>
	<text fill="#D15A60FF" x="127.8" y="326">n</text>
	<text fill="#FFFFFFFF" x="128.4" y="326">.execut</text>
	<text fill="#CD4B52FF" x="132.6" y="326">e</text>
	<text fill="#BC1019FF" x="133.2" y="326">(q</text>
	<text fill="#DD878CFF" x="134.4" y="326">u</text>
	<text fill="#FFFFFFFF" x="135.0" y="326">ery, :skip_l</text>
	<text fill="#CD4B52FF" x="142.2" y="326">o</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="326">gg</text>
	<text fill="#DD878CFF" x="144.0" y="326">i</text>
	<text fill="#FFFFFFFF" x="144.6" y="326">ng).entries.try(:firs</text>
	<text fill="#DD878CFF" x="157.2" y="326">t</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="326">).t</text>
	<text fill="#FFFFFFFF" x="159.6" y="326">ry(:[], </text>
	<text fill="#DD878CFF" x="164.4" y="326">"</text>
	<text fill="#BC1019FF" x="165.0" y="326">lea</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="326">rning_objec</text>
	<text fill="#BC1019FF" x="173.4" y="326">tiv</text>
	<text fill="#DD878CFF" x="175.2" y="326">e</text>
	<text fill="#FFFFFFFF" x="175.79999999999998" y="326">_id") LearningObjec</text>
	<text fill="#DFDFDFFF" x="187.2" y="326">t</text>
	<text fill="#8F8F8FFF" x="187.79999999999998" y="326">i</text>
	<text fill="#3F3F3FFF" x="188.4" y="326">ve.fi</text>
	<text fill="#7F7F7FFF" x="191.4" y="326">n</text>
	<text fill="#AFAFAFFF" x="192.0" y="326">d</text>
	<text fill="#FFFFFFFF" x="192.6" y="326">(result) if result end def body_sanitize Rails::Html::WhiteListSanitizer.new.sa</text>
	<text fill="#FFFFFFFF" x="0.0" y="327">nitize(self.body, tags: SANITAIZE_TAGS_FOR_COMMENT) end private def create_notification_for_student</text>
	<text fill="#CD4B52FF" x="59.4" y="327"> </text>
	<text fill="#BC1019FF" x="60.0" y="327">no</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="327">t</text>
	<text fill="#FFFFFFFF" x="61.8" y="327">ify("new</text>
	<text fill="#CD4B52FF" x="66.6" y="327">_</text>
	<text fill="#BC1019FF" x="67.2" y="327">sc</text>
	<text fill="#CD4B52FF" x="68.39999999999999" y="327">o</text>
	<text fill="#FFFFFFFF" x="69.0" y="327">re_comment"</text>
	<text fill="#F2D2D4FF" x="75.6" y="327">,</text>
	<text fill="#BC1019FF" x="76.2" y="327"> { </text>
	<text fill="#F2D2D4FF" x="78.0" y="327">a</text>
	<text fill="#FFFFFFFF" x="78.6" y="327">c</text>
	<text fill="#E6A5A8FF" x="79.2" y="327">t</text>
	<text fill="#BC1019FF" x="79.8" y="327">ivi</text>
	<text fill="#EEC3C5FF" x="81.6" y="327">t</text>
	<text fill="#FFFFFFFF" x="82.2" y="327">y_name: get_lea</text>
	<text fill="#EEC3C5FF" x="91.2" y="327">r</text>
	<text fill="#BC1019FF" x="91.8" y="327">nin</text>
	<text fill="#EEC3C5FF" x="93.6" y="327">g</text>
	<text fill="#FFFFFFFF" x="94.2" y="327">_activi</text>
	<text fill="#EAB4B7FF" x="98.39999999999999" y="327">t</text>
	<text fill="#BC1019FF" x="99.0" y="327">y.d</text>
	<text fill="#F2D2D4FF" x="100.8" y="327">e</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="327">scription }, se</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="327">l</text>
	<text fill="#BC1019FF" x="111.0" y="327">f.c</text>
	<text fill="#EEC3C5FF" x="112.8" y="327">l</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="327">ass.name.undersc</text>
	<text fill="#EEC3C5FF" x="123.0" y="327">o</text>
	<text fill="#BC1019FF" x="123.6" y="327">re,</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="327"> </text>
	<text fill="#D9787DFF" x="126.0" y="327">s</text>
	<text fill="#BC1019FF" x="126.6" y="327">elf</text>
	<text fill="#E2969AFF" x="128.4" y="327">.</text>
	<text fill="#FFFFFFFF" x="129.0" y="327">id) en</text>
	<text fill="#CD4B52FF" x="132.6" y="327">d</text>
	<text fill="#BC1019FF" x="133.2" y="327"> d</text>
	<text fill="#DD878CFF" x="134.4" y="327">e</text>
	<text fill="#FFFFFFFF" x="135.0" y="327">f delete_not</text>
	<text fill="#CD4B52FF" x="142.2" y="327">i</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="327">fi</text>
	<text fill="#DD878CFF" x="144.0" y="327">c</text>
	<text fill="#FFFFFFFF" x="144.6" y="327">ation_for_student Not</text>
	<text fill="#DD878CFF" x="157.2" y="327">i</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="327">fic</text>
	<text fill="#FFFFFFFF" x="159.6" y="327">ation.sc</text>
	<text fill="#DD878CFF" x="164.4" y="327">o</text>
	<text fill="#BC1019FF" x="165.0" y="327">re_</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="327">comments.su</text>
	<text fill="#BC1019FF" x="173.4" y="327">bje</text>
	<text fill="#C42D35FF" x="175.2" y="327">c</text>
	<text fill="#FBF0F1FF" x="175.79999999999998" y="327">t</text>
	<text fill="#FFFFFFFF" x="176.4" y="327">_id(self.id).destroy_all end def notify(event, options, subject_class, subject_id) student.notifications.c</text>
	<text fill="#FFFFFFFF" x="0.0" y="328">reate!({ :event          =&gt; event, :template_name  =&gt; "student", :options        =&gt; options, :read_</text>
	<text fill="#CD4B52FF" x="59.4" y="328">a</text>
	<text fill="#BC1019FF" x="60.0" y="328">t </text>
	<text fill="#DD878CFF" x="61.199999999999996" y="328"> </text>
	<text fill="#FFFFFFFF" x="61.8" y="328">      =</text>
	<text fill="#FBF0F1FF" x="66.0" y="328">&gt;</text>
	<text fill="#BC1019FF" x="66.6" y="328"> ni</text>
	<text fill="#DD878CFF" x="68.39999999999999" y="328">l</text>
	<text fill="#FFFFFFFF" x="69.0" y="328">, :subject_</text>
	<text fill="#D9787DFF" x="75.6" y="328">c</text>
	<text fill="#BC1019FF" x="76.2" y="328">la</text>
	<text fill="#C83C43FF" x="77.39999999999999" y="328">s</text>
	<text fill="#FFFFFFFF" x="78.0" y="328">s  </text>
	<text fill="#C01E27FF" x="79.8" y="328">=</text>
	<text fill="#BC1019FF" x="80.39999999999999" y="328">&gt; </text>
	<text fill="#D5696FFF" x="81.6" y="328">s</text>
	<text fill="#FFFFFFFF" x="82.2" y="328">ubject_class, :</text>
	<text fill="#EEC3C5FF" x="91.2" y="328">s</text>
	<text fill="#BC1019FF" x="91.8" y="328">ubj</text>
	<text fill="#EEC3C5FF" x="93.6" y="328">e</text>
	<text fill="#FFFFFFFF" x="94.2" y="328">ct_id  </text>
	<text fill="#D15A60FF" x="98.39999999999999" y="328"> </text>
	<text fill="#BC1019FF" x="99.0" y="328">  </text>
	<text fill="#C42D35FF" x="100.2" y="328">=</text>
	<text fill="#FFFFFFFF" x="100.8" y="328">&gt; subject_id }) </text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="328">e</text>
	<text fill="#BC1019FF" x="111.0" y="328">nd </text>
	<text fill="#EEC3C5FF" x="112.8" y="328">e</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="328">nd # == Schema I</text>
	<text fill="#EEC3C5FF" x="123.0" y="328">n</text>
	<text fill="#BC1019FF" x="123.6" y="328">for</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="328">m</text>
	<text fill="#FBF0F1FF" x="126.0" y="328">a</text>
	<text fill="#C42D35FF" x="126.6" y="328">t</text>
	<text fill="#BC1019FF" x="127.19999999999999" y="328">io</text>
	<text fill="#C01E27FF" x="128.4" y="328">n</text>
	<text fill="#F2D2D4FF" x="129.0" y="328"> </text>
	<text fill="#FFFFFFFF" x="129.6" y="328"># # T</text>
	<text fill="#CD4B52FF" x="132.6" y="328">a</text>
	<text fill="#BC1019FF" x="133.2" y="328">bl</text>
	<text fill="#DD878CFF" x="134.4" y="328">e</text>
	<text fill="#FFFFFFFF" x="135.0" y="328"> name: user_</text>
	<text fill="#CD4B52FF" x="142.2" y="328">p</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="328">ro</text>
	<text fill="#DD878CFF" x="144.0" y="328">g</text>
	<text fill="#FFFFFFFF" x="144.6" y="328">rams # #  id         </text>
	<text fill="#DD878CFF" x="157.2" y="328"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="328">   </text>
	<text fill="#FFFFFFFF" x="159.6" y="328">  :integ</text>
	<text fill="#C42D35FF" x="164.4" y="328">e</text>
	<text fill="#BC1019FF" x="165.0" y="328">r </text>
	<text fill="#D15A60FF" x="166.2" y="328"> </text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="328">        not</text>
	<text fill="#D5696FFF" x="173.4" y="328"> </text>
	<text fill="#BC1019FF" x="174.0" y="328">nul</text>
	<text fill="#C83C43FF" x="175.79999999999998" y="328">l</text>
	<text fill="#F7E1E2FF" x="176.4" y="328">,</text>
	<text fill="#FFFFFFFF" x="177.0" y="328"> primary key #  program_id       :integer          not null #  user_id          :integer          not nul</text>
	<text fill="#FFFFFFFF" x="0.0" y="329">l #  created_at       :datetime #  updated_at       :datetime #  active           :boolean         </text>
	<text fill="#CD4B52FF" x="59.4" y="329"> </text>
	<text fill="#BC1019FF" x="60.0" y="329">de</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="329">f</text>
	<text fill="#FFFFFFFF" x="61.8" y="329">ault(TR</text>
	<text fill="#D5696FFF" x="66.0" y="329">U</text>
	<text fill="#BC1019FF" x="66.6" y="329">E) </text>
	<text fill="#EEC3C5FF" x="68.39999999999999" y="329">#</text>
	<text fill="#FFFFFFFF" x="69.0" y="329">  enrollmen</text>
	<text fill="#C01E27FF" x="75.6" y="329">t</text>
	<text fill="#BC1019FF" x="76.2" y="329">_d</text>
	<text fill="#E2969AFF" x="77.39999999999999" y="329">a</text>
	<text fill="#FFFFFFFF" x="78.0" y="329">te </text>
	<text fill="#D9787DFF" x="79.8" y="329"> </text>
	<text fill="#BC1019FF" x="80.39999999999999" y="329">:da</text>
	<text fill="#FBF0F1FF" x="82.2" y="329">t</text>
	<text fill="#FFFFFFFF" x="82.8" y="329">e #  duration_</text>
	<text fill="#EEC3C5FF" x="91.2" y="329">s</text>
	<text fill="#BC1019FF" x="91.8" y="329">eco</text>
	<text fill="#EEC3C5FF" x="93.6" y="329">n</text>
	<text fill="#FFFFFFFF" x="94.2" y="329">ds :in</text>
	<text fill="#D5696FFF" x="97.8" y="329">t</text>
	<text fill="#BC1019FF" x="98.39999999999999" y="329">ege</text>
	<text fill="#E2969AFF" x="100.2" y="329">r</text>
	<text fill="#FFFFFFFF" x="100.8" y="329">          defaul</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="329">t</text>
	<text fill="#BC1019FF" x="111.0" y="329">(0)</text>
	<text fill="#EEC3C5FF" x="112.8" y="329">,</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="329"> not null # clas</text>
	<text fill="#EEC3C5FF" x="123.0" y="329">s</text>
	<text fill="#BC1019FF" x="123.6" y="329"> Us</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="329">er</text>
	<text fill="#EEC3C5FF" x="126.6" y="329">P</text>
	<text fill="#BC1019FF" x="127.19999999999999" y="329">rog</text>
	<text fill="#C83C43FF" x="129.0" y="329">r</text>
	<text fill="#FBF0F1FF" x="129.6" y="329">a</text>
	<text fill="#FFFFFFFF" x="130.2" y="329">m &lt; </text>
	<text fill="#CD4B52FF" x="132.6" y="329">A</text>
	<text fill="#BC1019FF" x="133.2" y="329">ct</text>
	<text fill="#DD878CFF" x="134.4" y="329">i</text>
	<text fill="#FFFFFFFF" x="135.0" y="329">veRecord::Ba</text>
	<text fill="#CD4B52FF" x="142.2" y="329">s</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="329">e </text>
	<text fill="#D5696FFF" x="144.0" y="329">i</text>
	<text fill="#EEC3C5FF" x="144.6" y="329">nclude Re</text>
	<text fill="#FBF0F1FF" x="150.0" y="329">t</text>
	<text fill="#FFFFFFFF" x="150.6" y="329">rieveItemSt</text>
	<text fill="#DD878CFF" x="157.2" y="329">a</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="329">ts </text>
	<text fill="#FFFFFFFF" x="159.6" y="329">belong</text>
	<text fill="#FBF0F1FF" x="163.2" y="329">s</text>
	<text fill="#D5696FFF" x="163.79999999999998" y="329">_</text>
	<text fill="#BC1019FF" x="164.4" y="329">to </text>
	<text fill="#EEC3C5FF" x="166.2" y="329">:</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="329">program bel</text>
	<text fill="#FBF0F1FF" x="173.4" y="329">o</text>
	<text fill="#C01E27FF" x="174.0" y="329">n</text>
	<text fill="#BC1019FF" x="174.6" y="329">gs_t</text>
	<text fill="#D5696FFF" x="177.0" y="329">o</text>
	<text fill="#EEC3C5FF" x="177.6" y="329"> </text>
	<text fill="#FFFFFFFF" x="178.2" y="329">:user validates_presence_of :program validates :user, presence: true, uniqueness: { scope: :program } v</text>
	<text fill="#FFFFFFFF" x="0.0" y="330">alidate :user_and_program_in_same_institution validate :user_is_student before_create :set_enrollme</text>
	<text fill="#CD4B52FF" x="59.4" y="330">n</text>
	<text fill="#BC1019FF" x="60.0" y="330">t_</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="330">d</text>
	<text fill="#FFFFFFFF" x="61.8" y="330">ate a</text>
	<text fill="#FBF0F1FF" x="64.8" y="330">f</text>
	<text fill="#D5696FFF" x="65.39999999999999" y="330">t</text>
	<text fill="#BC1019FF" x="66.0" y="330">er_</text>
	<text fill="#CD4B52FF" x="67.8" y="330">c</text>
	<text fill="#FFFFFFFF" x="68.39999999999999" y="330">ommit :add_</text>
	<text fill="#E6A5A8FF" x="75.0" y="330">p</text>
	<text fill="#BC1019FF" x="75.6" y="330">rog</text>
	<text fill="#FBF0F1FF" x="77.39999999999999" y="330">r</text>
	<text fill="#FFFFFFFF" x="78.0" y="330">am_</text>
	<text fill="#F7E1E2FF" x="79.8" y="330">c</text>
	<text fill="#BC1019FF" x="80.39999999999999" y="330">omp</text>
	<text fill="#E6A5A8FF" x="82.2" y="330">e</text>
	<text fill="#FFFFFFFF" x="82.8" y="330">tencies_to_use</text>
	<text fill="#EEC3C5FF" x="91.2" y="330">r</text>
	<text fill="#BC1019FF" x="91.8" y="330"> sc</text>
	<text fill="#E2969AFF" x="93.6" y="330">o</text>
	<text fill="#EEC3C5FF" x="94.2" y="330">pe :</text>
	<text fill="#DD878CFF" x="96.6" y="330">a</text>
	<text fill="#C42D35FF" x="97.2" y="330">c</text>
	<text fill="#BC1019FF" x="97.8" y="330">tiv</text>
	<text fill="#D9787DFF" x="99.6" y="330">e</text>
	<text fill="#FFFFFFFF" x="100.2" y="330">,   -&gt; { where(ac</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="330">t</text>
	<text fill="#BC1019FF" x="111.0" y="330">ive</text>
	<text fill="#EEC3C5FF" x="112.8" y="330">:</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="330"> true) } scope :</text>
	<text fill="#EEC3C5FF" x="123.0" y="330">i</text>
	<text fill="#BC1019FF" x="123.6" y="330">nac</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="330">tiv</text>
	<text fill="#D9787DFF" x="127.19999999999999" y="330">e</text>
	<text fill="#BC1019FF" x="127.8" y="330">, -</text>
	<text fill="#D9787DFF" x="129.6" y="330">&gt;</text>
	<text fill="#FFFFFFFF" x="130.2" y="330"> { w</text>
	<text fill="#CD4B52FF" x="132.6" y="330">h</text>
	<text fill="#BC1019FF" x="133.2" y="330">er</text>
	<text fill="#DD878CFF" x="134.4" y="330">e</text>
	<text fill="#FFFFFFFF" x="135.0" y="330">(active: fal</text>
	<text fill="#CD4B52FF" x="142.2" y="330">s</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="330">e) } scope :</text>
	<text fill="#EEC3C5FF" x="150.0" y="330">l</text>
	<text fill="#FFFFFFFF" x="150.6" y="330">atest_enrol</text>
	<text fill="#DD878CFF" x="157.2" y="330">l</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="330">men</text>
	<text fill="#EEC3C5FF" x="159.6" y="330">t_da</text>
	<text fill="#EAB4B7FF" x="162.0" y="330">t</text>
	<text fill="#D9787DFF" x="162.6" y="330">e</text>
	<text fill="#C01E27FF" x="163.2" y="330">s</text>
	<text fill="#BC1019FF" x="163.79999999999998" y="330">, -</text>
	<text fill="#E6A5A8FF" x="165.6" y="330">&gt;</text>
	<text fill="#FFFFFFFF" x="166.2" y="330"> { order(enro</text>
	<text fill="#F7E1E2FF" x="174.0" y="330">l</text>
	<text fill="#C83C43FF" x="174.6" y="330">l</text>
	<text fill="#BC1019FF" x="175.2" y="330">ment_</text>
	<text fill="#C42D35FF" x="178.2" y="330">d</text>
	<text fill="#DD878CFF" x="178.79999999999998" y="330">a</text>
	<text fill="#F7E1E2FF" x="179.4" y="330">t</text>
	<text fill="#FFFFFFFF" x="180.0" y="330">e: :desc) } #default_scope { where(active: true) } # Add to our current duration def add_duration!(s</text>
	<text fill="#FFFFFFFF" x="0.0" y="331">ecs) UpdateUserStats::IncrementWorker.perform_async(self.class.name, self.id, secs) end # The user </text>
	<text fill="#CD4B52FF" x="59.4" y="331">a</text>
	<text fill="#BC1019FF" x="60.0" y="331">ct</text>
	<text fill="#C42D35FF" x="61.199999999999996" y="331">i</text>
	<text fill="#DD878CFF" x="61.8" y="331">viti</text>
	<text fill="#CD4B52FF" x="64.2" y="331">e</text>
	<text fill="#BC1019FF" x="64.8" y="331">s fo</text>
	<text fill="#C83C43FF" x="67.2" y="331">r</text>
	<text fill="#FBF0F1FF" x="67.8" y="331"> </text>
	<text fill="#FFFFFFFF" x="68.39999999999999" y="331">this cohort</text>
	<text fill="#D15A60FF" x="75.0" y="331"> </text>
	<text fill="#BC1019FF" x="75.6" y="331">de</text>
	<text fill="#D5696FFF" x="76.8" y="331">f</text>
	<text fill="#FFFFFFFF" x="77.39999999999999" y="331"> user</text>
	<text fill="#CD4B52FF" x="80.39999999999999" y="331">_</text>
	<text fill="#BC1019FF" x="81.0" y="331">ac</text>
	<text fill="#C83C43FF" x="82.2" y="331">t</text>
	<text fill="#FFFFFFFF" x="82.8" y="331">ivities jsql =</text>
	<text fill="#EEC3C5FF" x="91.2" y="331"> </text>
	<text fill="#BC1019FF" x="91.8" y="331">"INNER JOIN</text>
	<text fill="#C83C43FF" x="98.39999999999999" y="331"> </text>
	<text fill="#EEC3C5FF" x="99.0" y="331">#</text>
	<text fill="#FFFFFFFF" x="99.6" y="331">{LearningActivityL</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="331">e</text>
	<text fill="#BC1019FF" x="111.0" y="331">arn</text>
	<text fill="#EEC3C5FF" x="112.8" y="331">i</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="331">ngObjective.tabl</text>
	<text fill="#EEC3C5FF" x="123.0" y="331">e</text>
	<text fill="#BC1019FF" x="123.6" y="331">_na</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="331">me} </text>
	<text fill="#C83C43FF" x="127.8" y="331">O</text>
	<text fill="#BC1019FF" x="128.4" y="331">N #</text>
	<text fill="#EAB4B7FF" x="130.2" y="331">{</text>
	<text fill="#FFFFFFFF" x="130.79999999999998" y="331">Use</text>
	<text fill="#CD4B52FF" x="132.6" y="331">r</text>
	<text fill="#BC1019FF" x="133.2" y="331">Ac</text>
	<text fill="#DD878CFF" x="134.4" y="331">t</text>
	<text fill="#FFFFFFFF" x="135.0" y="331">ivity.table_</text>
	<text fill="#CD4B52FF" x="142.2" y="331">n</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="331">ame}.learnin</text>
	<text fill="#EEC3C5FF" x="150.0" y="331">g</text>
	<text fill="#FFFFFFFF" x="150.6" y="331">_activity_i</text>
	<text fill="#DD878CFF" x="157.2" y="331">d</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="331"> = #{Learni</text>
	<text fill="#CD4B52FF" x="164.4" y="331">n</text>
	<text fill="#F2D2D4FF" x="165.0" y="331">g</text>
	<text fill="#FFFFFFFF" x="165.6" y="331">ActivityLearning</text>
	<text fill="#E6A5A8FF" x="175.2" y="331">O</text>
	<text fill="#C42D35FF" x="175.79999999999998" y="331">b</text>
	<text fill="#BC1019FF" x="176.4" y="331">jectiv</text>
	<text fill="#D9787DFF" x="180.0" y="331">e</text>
	<text fill="#FBF0F1FF" x="180.6" y="331">.</text>
	<text fill="#FFFFFFFF" x="181.2" y="331">table_name}.learning_activity_id "\ "INNER JOIN #{CompetencyObjective.table_name} ON #{LearningAct</text>
	<text fill="#FFFFFFFF" x="0.0" y="332">ivityLearningObjective.table_name}.learning_objective_id = #{CompetencyObjective.table_name}.learni</text>
	<text fill="#CD4B52FF" x="59.4" y="332">n</text>
	<text fill="#BC1019FF" x="60.0" y="332">g_objective</text>
	<text fill="#D9787DFF" x="66.6" y="332">_</text>
	<text fill="#FBF0F1FF" x="67.2" y="332">i</text>
	<text fill="#FFFFFFFF" x="67.8" y="332">d "\ "INNER</text>
	<text fill="#F7E1E2FF" x="74.39999999999999" y="332"> </text>
	<text fill="#BC1019FF" x="75.0" y="332">JOI</text>
	<text fill="#EEC3C5FF" x="76.8" y="332">N</text>
	<text fill="#FFFFFFFF" x="77.39999999999999" y="332"> #{Co</text>
	<text fill="#E6A5A8FF" x="80.39999999999999" y="332">m</text>
	<text fill="#BC1019FF" x="81.0" y="332">pet</text>
	<text fill="#F2D2D4FF" x="82.8" y="332">e</text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="332">ncyProgram.ta</text>
	<text fill="#EEC3C5FF" x="91.2" y="332">b</text>
	<text fill="#BC1019FF" x="91.8" y="332">le_name} ON</text>
	<text fill="#D5696FFF" x="98.39999999999999" y="332"> </text>
	<text fill="#FBF0F1FF" x="99.0" y="332">#</text>
	<text fill="#FFFFFFFF" x="99.6" y="332">{CompetencyObjecti</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="332">v</text>
	<text fill="#BC1019FF" x="111.0" y="332">e.t</text>
	<text fill="#EEC3C5FF" x="112.8" y="332">a</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="332">ble_name}.compet</text>
	<text fill="#EEC3C5FF" x="123.0" y="332">e</text>
	<text fill="#BC1019FF" x="123.6" y="332">ncy</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="332">_id </text>
	<text fill="#F2D2D4FF" x="127.8" y="332">=</text>
	<text fill="#C01E27FF" x="128.4" y="332"> </text>
	<text fill="#BC1019FF" x="129.0" y="332">#{</text>
	<text fill="#C01E27FF" x="130.2" y="332">C</text>
	<text fill="#FBF0F1FF" x="130.79999999999998" y="332">o</text>
	<text fill="#FFFFFFFF" x="131.4" y="332">mp</text>
	<text fill="#CD4B52FF" x="132.6" y="332">e</text>
	<text fill="#BC1019FF" x="133.2" y="332">te</text>
	<text fill="#DD878CFF" x="134.4" y="332">n</text>
	<text fill="#FFFFFFFF" x="135.0" y="332">cyProgram.ta</text>
	<text fill="#CD4B52FF" x="142.2" y="332">b</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="332">le</text>
	<text fill="#CD4B52FF" x="144.0" y="332">_</text>
	<text fill="#DD878CFF" x="144.6" y="332">name}.com</text>
	<text fill="#F7E1E2FF" x="150.0" y="332">p</text>
	<text fill="#FFFFFFFF" x="150.6" y="332">etency_id "</text>
	<text fill="#DD878CFF" x="157.2" y="332"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="332">UserActivi</text>
	<text fill="#C01E27FF" x="163.79999999999998" y="332">t</text>
	<text fill="#DD878CFF" x="164.4" y="332">y</text>
	<text fill="#FFFFFFFF" x="165.0" y="332">.where(student_id: </text>
	<text fill="#EEC3C5FF" x="176.4" y="332">s</text>
	<text fill="#D9787DFF" x="177.0" y="332">e</text>
	<text fill="#C01E27FF" x="177.6" y="332">l</text>
	<text fill="#BC1019FF" x="178.2" y="332">f.us</text>
	<text fill="#C83C43FF" x="180.6" y="332">e</text>
	<text fill="#FBF0F1FF" x="181.2" y="332">r</text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="332">_id) .joins(jsql) .where(competency_programs: { program_id: self.program_id } ) .distinct end # T</text>
	<text fill="#FFFFFFFF" x="0.0" y="333">he user objectives for this program def user_objectives jsql = "INNER JOIN #{CompetencyObjective.ta</text>
	<text fill="#CD4B52FF" x="59.4" y="333">b</text>
	<text fill="#BC1019FF" x="60.0" y="333">le</text>
	<text fill="#C01E27FF" x="61.199999999999996" y="333">_</text>
	<text fill="#BC1019FF" x="61.8" y="333">name</text>
	<text fill="#C42D35FF" x="64.2" y="333">}</text>
	<text fill="#D15A60FF" x="64.8" y="333"> </text>
	<text fill="#E2969AFF" x="65.39999999999999" y="333">O</text>
	<text fill="#F7E1E2FF" x="66.0" y="333">N</text>
	<text fill="#FFFFFFFF" x="66.6" y="333"> #{UserObject</text>
	<text fill="#DD878CFF" x="74.39999999999999" y="333">i</text>
	<text fill="#BC1019FF" x="75.0" y="333">ve.</text>
	<text fill="#CD4B52FF" x="76.8" y="333">table_n</text>
	<text fill="#BC1019FF" x="81.0" y="333">ame</text>
	<text fill="#D5696FFF" x="82.8" y="333">}</text>
	<text fill="#FFFFFFFF" x="83.39999999999999" y="333">.learning_obj</text>
	<text fill="#EEC3C5FF" x="91.2" y="333">e</text>
	<text fill="#BC1019FF" x="91.8" y="333">cti</text>
	<text fill="#E2969AFF" x="93.6" y="333">v</text>
	<text fill="#EEC3C5FF" x="94.2" y="333">e_i</text>
	<text fill="#E6A5A8FF" x="96.0" y="333">d</text>
	<text fill="#CD4B52FF" x="96.6" y="333"> </text>
	<text fill="#BC1019FF" x="97.2" y="333">= #</text>
	<text fill="#C83C43FF" x="99.0" y="333">{</text>
	<text fill="#FFFFFFFF" x="99.6" y="333">CompetencyObjectiv</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="333">e</text>
	<text fill="#BC1019FF" x="111.0" y="333">.ta</text>
	<text fill="#EEC3C5FF" x="112.8" y="333">b</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="333">le_name}.learnin</text>
	<text fill="#EEC3C5FF" x="123.0" y="333">g</text>
	<text fill="#BC1019FF" x="123.6" y="333">_ob</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="333">jecti</text>
	<text fill="#E2969AFF" x="128.4" y="333">v</text>
	<text fill="#BC1019FF" x="129.0" y="333">e_i</text>
	<text fill="#D15A60FF" x="130.79999999999998" y="333">d</text>
	<text fill="#FFFFFFFF" x="131.4" y="333"> "</text>
	<text fill="#CD4B52FF" x="132.6" y="333">\</text>
	<text fill="#BC1019FF" x="133.2" y="333"> "</text>
	<text fill="#DD878CFF" x="134.4" y="333">I</text>
	<text fill="#FFFFFFFF" x="135.0" y="333">NNER JOIN #{</text>
	<text fill="#CD4B52FF" x="142.2" y="333">C</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="333">om</text>
	<text fill="#DD878CFF" x="144.0" y="333">p</text>
	<text fill="#FFFFFFFF" x="144.6" y="333">etencyProgram.table_n</text>
	<text fill="#DD878CFF" x="157.2" y="333">a</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="333">me}</text>
	<text fill="#EEC3C5FF" x="159.6" y="333"> ON </text>
	<text fill="#E6A5A8FF" x="162.0" y="333">#</text>
	<text fill="#CD4B52FF" x="162.6" y="333">{</text>
	<text fill="#BC1019FF" x="163.2" y="333">Com</text>
	<text fill="#D5696FFF" x="165.0" y="333">p</text>
	<text fill="#FFFFFFFF" x="165.6" y="333">etencyObjective.table</text>
	<text fill="#E6A5A8FF" x="178.2" y="333">_</text>
	<text fill="#C42D35FF" x="178.79999999999998" y="333">n</text>
	<text fill="#BC1019FF" x="179.4" y="333">ame</text>
	<text fill="#CD4B52FF" x="181.2" y="333">}</text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="333">.competency_id = #{CompetencyProgram.table_name}.competency_id " UserObjective.where(student_id: </text>
	<text fill="#FFFFFFFF" x="0.0" y="334">self.user_id) .joins(jsql) .where(competency_programs: { program_id: self.program_id } ) .distinct </text>
	<text fill="#CD4B52FF" x="59.4" y="334">e</text>
	<text fill="#BC1019FF" x="60.0" y="334">nd</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="334"> </text>
	<text fill="#FFFFFFFF" x="61.8" y="334"># The user competenci</text>
	<text fill="#C42D35FF" x="74.39999999999999" y="334">e</text>
	<text fill="#BC1019FF" x="75.0" y="334">s for this pr</text>
	<text fill="#C01E27FF" x="82.8" y="334">o</text>
	<text fill="#FBF0F1FF" x="83.39999999999999" y="334">g</text>
	<text fill="#FFFFFFFF" x="84.0" y="334">ram def user</text>
	<text fill="#EEC3C5FF" x="91.2" y="334">_</text>
	<text fill="#BC1019FF" x="91.8" y="334">com</text>
	<text fill="#EEC3C5FF" x="93.6" y="334">p</text>
	<text fill="#FFFFFFFF" x="94.2" y="334">etenc</text>
	<text fill="#E6A5A8FF" x="97.2" y="334">i</text>
	<text fill="#BC1019FF" x="97.8" y="334">es </text>
	<text fill="#DD878CFF" x="99.6" y="334">j</text>
	<text fill="#FFFFFFFF" x="100.2" y="334">sql = "INNER JOIN</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="334"> </text>
	<text fill="#BC1019FF" x="111.0" y="334">#{C</text>
	<text fill="#EEC3C5FF" x="112.8" y="334">o</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="334">mpetencyProgram.</text>
	<text fill="#EEC3C5FF" x="123.0" y="334">t</text>
	<text fill="#BC1019FF" x="123.6" y="334">abl</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="334">e_name</text>
	<text fill="#D15A60FF" x="129.0" y="334">}</text>
	<text fill="#BC1019FF" x="129.6" y="334"> ON</text>
	<text fill="#EAB4B7FF" x="131.4" y="334"> </text>
	<text fill="#FFFFFFFF" x="132.0" y="334">#</text>
	<text fill="#CD4B52FF" x="132.6" y="334">{</text>
	<text fill="#BC1019FF" x="133.2" y="334">Us</text>
	<text fill="#DD878CFF" x="134.4" y="334">e</text>
	<text fill="#FFFFFFFF" x="135.0" y="334">rCompetency.</text>
	<text fill="#CD4B52FF" x="142.2" y="334">t</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="334">ab</text>
	<text fill="#DD878CFF" x="144.0" y="334">l</text>
	<text fill="#FFFFFFFF" x="144.6" y="334">e_name}.competency_id</text>
	<text fill="#DD878CFF" x="157.2" y="334"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="334">= #</text>
	<text fill="#FFFFFFFF" x="159.6" y="334">{Compe</text>
	<text fill="#D5696FFF" x="163.2" y="334">t</text>
	<text fill="#BC1019FF" x="163.79999999999998" y="334">enc</text>
	<text fill="#EAB4B7FF" x="165.6" y="334">y</text>
	<text fill="#FFFFFFFF" x="166.2" y="334">Program.table_name}.c</text>
	<text fill="#FBF0F1FF" x="178.79999999999998" y="334">o</text>
	<text fill="#C83C43FF" x="179.4" y="334">m</text>
	<text fill="#BC1019FF" x="180.0" y="334">pet</text>
	<text fill="#EEC3C5FF" x="181.79999999999998" y="334">e</text>
	<text fill="#FFFFFFFF" x="182.4" y="334">ncy_id" UserCompetency.where(student_id: self.user_id) .joins(jsql) .where(competency_programs: </text>
	<text fill="#FFFFFFFF" x="0.0" y="335">{ program_id: self.program_id } ) .distinct end protected def user_and_program_in_same_institution </text>
	<text fill="#CD4B52FF" x="59.4" y="335">e</text>
	<text fill="#BC1019FF" x="60.0" y="335">rr</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="335">o</text>
	<text fill="#FFFFFFFF" x="61.8" y="335">rs.add(:program, "mu</text>
	<text fill="#EAB4B7FF" x="73.8" y="335">s</text>
	<text fill="#BC1019FF" x="74.39999999999999" y="335">t h</text>
	<text fill="#C83C43FF" x="76.2" y="335">a</text>
	<text fill="#CD4B52FF" x="76.8" y="335">ve inst</text>
	<text fill="#C83C43FF" x="81.0" y="335">i</text>
	<text fill="#BC1019FF" x="81.6" y="335">tut</text>
	<text fill="#E6A5A8FF" x="83.39999999999999" y="335">i</text>
	<text fill="#FFFFFFFF" x="84.0" y="335">on in users </text>
	<text fill="#EEC3C5FF" x="91.2" y="335">i</text>
	<text fill="#BC1019FF" x="91.8" y="335">nst</text>
	<text fill="#EEC3C5FF" x="93.6" y="335">i</text>
	<text fill="#FFFFFFFF" x="94.2" y="335">tution</text>
	<text fill="#CD4B52FF" x="97.8" y="335"> </text>
	<text fill="#BC1019FF" x="98.39999999999999" y="335">su</text>
	<text fill="#C01E27FF" x="99.6" y="335">b</text>
	<text fill="#FFFFFFFF" x="100.2" y="335">tree") unless use</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="335">r</text>
	<text fill="#BC1019FF" x="111.0" y="335">.in</text>
	<text fill="#EEC3C5FF" x="112.8" y="335">s</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="335">titution_subtree</text>
	<text fill="#EEC3C5FF" x="123.0" y="335">_</text>
	<text fill="#BC1019FF" x="123.6" y="335">ids</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="335">.inclu</text>
	<text fill="#FBF0F1FF" x="129.0" y="335">d</text>
	<text fill="#C01E27FF" x="129.6" y="335">e</text>
	<text fill="#BC1019FF" x="130.2" y="335">?(</text>
	<text fill="#C01E27FF" x="131.4" y="335">p</text>
	<text fill="#FBF0F1FF" x="132.0" y="335">r</text>
	<text fill="#D5696FFF" x="132.6" y="335">o</text>
	<text fill="#BC1019FF" x="133.2" y="335">gr</text>
	<text fill="#DD878CFF" x="134.4" y="335">a</text>
	<text fill="#FFFFFFFF" x="135.0" y="335">m.owner_inst</text>
	<text fill="#CD4B52FF" x="142.2" y="335">i</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="335">tu</text>
	<text fill="#DD878CFF" x="144.0" y="335">t</text>
	<text fill="#FFFFFFFF" x="144.6" y="335">ion_id) end def user_</text>
	<text fill="#DD878CFF" x="157.2" y="335">i</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="335">s_s</text>
	<text fill="#FFFFFFFF" x="159.6" y="335">tudent </text>
	<text fill="#C42D35FF" x="163.79999999999998" y="335">e</text>
	<text fill="#BC1019FF" x="164.4" y="335">rr</text>
	<text fill="#C83C43FF" x="165.6" y="335">o</text>
	<text fill="#FFFFFFFF" x="166.2" y="335">rs.add(:user, 'must ha</text>
	<text fill="#F7E1E2FF" x="179.4" y="335">v</text>
	<text fill="#BC1019FF" x="180.0" y="335">e s</text>
	<text fill="#DD878CFF" x="181.79999999999998" y="335">t</text>
	<text fill="#FFFFFFFF" x="182.4" y="335">udent role') unless user.has_role?(Role::STUDENT) end def add_program_competencies_to_user #TODO</text>
	<text fill="#FFFFFFFF" x="0.0" y="336">: See commented code below to add user_objectives to the user's profile # Would also need to set th</text>
	<text fill="#CD4B52FF" x="59.4" y="336">e</text>
	<text fill="#BC1019FF" x="60.0" y="336"> d</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="336">e</text>
	<text fill="#FFFFFFFF" x="61.8" y="336">fault state of UO to</text>
	<text fill="#D5696FFF" x="73.8" y="336"> </text>
	<text fill="#BC1019FF" x="74.39999999999999" y="336">"u</text>
	<text fill="#C42D35FF" x="75.6" y="336">n</text>
	<text fill="#FFFFFFFF" x="76.2" y="336">availabl</text>
	<text fill="#FBF0F1FF" x="81.0" y="336">e</text>
	<text fill="#C01E27FF" x="81.6" y="336">"</text>
	<text fill="#BC1019FF" x="82.2" y="336"> #</text>
	<text fill="#CD4B52FF" x="83.39999999999999" y="336"> </text>
	<text fill="#FFFFFFFF" x="84.0" y="336">Right now, t</text>
	<text fill="#EEC3C5FF" x="91.2" y="336">h</text>
	<text fill="#BC1019FF" x="91.8" y="336">is </text>
	<text fill="#EEC3C5FF" x="93.6" y="336">l</text>
	<text fill="#FFFFFFFF" x="94.2" y="336">ogic l</text>
	<text fill="#EAB4B7FF" x="97.8" y="336">i</text>
	<text fill="#BC1019FF" x="98.39999999999999" y="336">ves</text>
	<text fill="#EEC3C5FF" x="100.2" y="336"> </text>
	<text fill="#FFFFFFFF" x="100.8" y="336">in the DW view f</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="336">o</text>
	<text fill="#BC1019FF" x="111.0" y="336">r c</text>
	<text fill="#EEC3C5FF" x="112.8" y="336">o</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="336">mputing competen</text>
	<text fill="#EEC3C5FF" x="123.0" y="336">c</text>
	<text fill="#BC1019FF" x="123.6" y="336">y p</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="336">rogress</text>
	<text fill="#EEC3C5FF" x="129.6" y="336"> </text>
	<text fill="#BC1019FF" x="130.2" y="336">bar</text>
	<text fill="#D9787DFF" x="132.0" y="336">s</text>
	<text fill="#DD878CFF" x="132.6" y="336">.</text>
	<text fill="#BC1019FF" x="133.2" y="336"> u</text>
	<text fill="#DD878CFF" x="134.4" y="336">s</text>
	<text fill="#FFFFFFFF" x="135.0" y="336">er_comps = H</text>
	<text fill="#CD4B52FF" x="142.2" y="336">a</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="336">sh</text>
	<text fill="#DD878CFF" x="144.0" y="336">.</text>
	<text fill="#FFFFFFFF" x="144.6" y="336">new user.user_compete</text>
	<text fill="#DD878CFF" x="157.2" y="336">n</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="336">cie</text>
	<text fill="#FFFFFFFF" x="159.6" y="336">s.each </text>
	<text fill="#D9787DFF" x="163.79999999999998" y="336">{</text>
	<text fill="#BC1019FF" x="164.4" y="336"> |u</text>
	<text fill="#FBF0F1FF" x="166.2" y="336">c</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="336">| user_comps[uc.compet</text>
	<text fill="#BC1019FF" x="180.0" y="336">enc</text>
	<text fill="#DD878CFF" x="181.79999999999998" y="336">y</text>
	<text fill="#FFFFFFFF" x="182.4" y="336">_id] = uc } # TODO: # user_objs = Hash.new # user.user_objectives.each { |uo| user_objs[uo.learn</text>
	<text fill="#FFFFFFFF" x="0.0" y="337">ing_objective_id] = uo } program.competencies.each do |c| user_comps[c.id] ||= user.user_competenci</text>
	<text fill="#CD4B52FF" x="59.4" y="337">e</text>
	<text fill="#BC1019FF" x="60.0" y="337">s.</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="337">c</text>
	<text fill="#FFFFFFFF" x="61.8" y="337">reate!(competency: </text>
	<text fill="#FBF0F1FF" x="73.2" y="337">c</text>
	<text fill="#BC1019FF" x="73.8" y="337">) #</text>
	<text fill="#D9787DFF" x="75.6" y="337">T</text>
	<text fill="#FFFFFFFF" x="76.2" y="337">ODO: # c.</text>
	<text fill="#D5696FFF" x="81.6" y="337">l</text>
	<text fill="#BC1019FF" x="82.2" y="337">ear</text>
	<text fill="#F7E1E2FF" x="84.0" y="337">n</text>
	<text fill="#FFFFFFFF" x="84.6" y="337">ing_objecti</text>
	<text fill="#EEC3C5FF" x="91.2" y="337">v</text>
	<text fill="#BC1019FF" x="91.8" y="337">es.</text>
	<text fill="#EEC3C5FF" x="93.6" y="337">e</text>
	<text fill="#FFFFFFFF" x="94.2" y="337">ach do</text>
	<text fill="#FBF0F1FF" x="97.8" y="337"> </text>
	<text fill="#BC1019FF" x="98.39999999999999" y="337">|lo</text>
	<text fill="#D9787DFF" x="100.2" y="337">|</text>
	<text fill="#FFFFFFFF" x="100.8" y="337"> #   user_objs[l</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="337">o</text>
	<text fill="#BC1019FF" x="111.0" y="337">.id</text>
	<text fill="#EEC3C5FF" x="112.8" y="337">]</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="337"> ||= user.user_o</text>
	<text fill="#EEC3C5FF" x="123.0" y="337">b</text>
	<text fill="#BC1019FF" x="123.6" y="337">jec</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="337">tives.cr</text>
	<text fill="#D9787DFF" x="130.2" y="337">e</text>
	<text fill="#BC1019FF" x="130.79999999999998" y="337">ate</text>
	<text fill="#D5696FFF" x="132.6" y="337">!</text>
	<text fill="#BC1019FF" x="133.2" y="337">(l</text>
	<text fill="#DD878CFF" x="134.4" y="337">e</text>
	<text fill="#FFFFFFFF" x="135.0" y="337">arning_objec</text>
	<text fill="#CD4B52FF" x="142.2" y="337">t</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="337">iv</text>
	<text fill="#DD878CFF" x="144.0" y="337">e</text>
	<text fill="#FFFFFFFF" x="144.6" y="337">: lo) end end def set</text>
	<text fill="#DD878CFF" x="157.2" y="337">_</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="337">enr</text>
	<text fill="#FFFFFFFF" x="159.6" y="337">ollment</text>
	<text fill="#F2D2D4FF" x="163.79999999999998" y="337">_</text>
	<text fill="#BC1019FF" x="164.4" y="337">dat</text>
	<text fill="#E6A5A8FF" x="166.2" y="337">e</text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="337"> self.enrollment_date</text>
	<text fill="#FBF0F1FF" x="179.4" y="337"> </text>
	<text fill="#BC1019FF" x="180.0" y="337">||=</text>
	<text fill="#DD878CFF" x="181.79999999999998" y="337"> </text>
	<text fill="#FFFFFFFF" x="182.4" y="337">Date.current end end # == Schema Information # # Table name: users # #  id                      </text>
	<text fill="#FFFFFFFF" x="0.0" y="338"> :integer          not null, primary key #  first_name               :string(255)      not null #  </text>
	<text fill="#CD4B52FF" x="59.4" y="338">l</text>
	<text fill="#BC1019FF" x="60.0" y="338">as</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="338">t</text>
	<text fill="#FFFFFFFF" x="61.8" y="338">_name              </text>
	<text fill="#E2969AFF" x="73.2" y="338"> </text>
	<text fill="#BC1019FF" x="73.8" y="338"> :s</text>
	<text fill="#F7E1E2FF" x="75.6" y="338">t</text>
	<text fill="#FFFFFFFF" x="76.2" y="338">ring(255)</text>
	<text fill="#F2D2D4FF" x="81.6" y="338"> </text>
	<text fill="#BC1019FF" x="82.2" y="338">   </text>
	<text fill="#D9787DFF" x="84.0" y="338"> </text>
	<text fill="#FFFFFFFF" x="84.6" y="338"> not null #</text>
	<text fill="#EEC3C5FF" x="91.2" y="338"> </text>
	<text fill="#BC1019FF" x="91.8" y="338"> ph</text>
	<text fill="#EEC3C5FF" x="93.6" y="338">o</text>
	<text fill="#FFFFFFFF" x="94.2" y="338">ne     </text>
	<text fill="#C83C43FF" x="98.39999999999999" y="338"> </text>
	<text fill="#BC1019FF" x="99.0" y="338">  </text>
	<text fill="#C83C43FF" x="100.2" y="338"> </text>
	<text fill="#FFFFFFFF" x="100.8" y="338">           :stri</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="338">n</text>
	<text fill="#BC1019FF" x="111.0" y="338">g(2</text>
	<text fill="#EEC3C5FF" x="112.8" y="338">5</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="338">5) #  email     </text>
	<text fill="#EEC3C5FF" x="123.0" y="338"> </text>
	<text fill="#BC1019FF" x="123.6" y="338">   </text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="338">         </text>
	<text fill="#C83C43FF" x="130.79999999999998" y="338"> </text>
	<text fill="#BC1019FF" x="131.4" y="338"> :str</text>
	<text fill="#DD878CFF" x="134.4" y="338">i</text>
	<text fill="#FFFFFFFF" x="135.0" y="338">ng(255) #  e</text>
	<text fill="#CD4B52FF" x="142.2" y="338">n</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="338">cr</text>
	<text fill="#DD878CFF" x="144.0" y="338">y</text>
	<text fill="#FFFFFFFF" x="144.6" y="338">pted_password       :</text>
	<text fill="#DD878CFF" x="157.2" y="338">s</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="338">tri</text>
	<text fill="#FFFFFFFF" x="159.6" y="338">ng(255) </text>
	<text fill="#C01E27FF" x="164.4" y="338"> </text>
	<text fill="#BC1019FF" x="165.0" y="338">  </text>
	<text fill="#D5696FFF" x="166.2" y="338"> </text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="338"> default(""), not nul</text>
	<text fill="#DD878CFF" x="179.4" y="338">l</text>
	<text fill="#BC1019FF" x="180.0" y="338"> # </text>
	<text fill="#F2D2D4FF" x="181.79999999999998" y="338"> </text>
	<text fill="#FFFFFFFF" x="182.4" y="338">reset_password_token     :string(255) #  reset_password_sent_at   :datetime #  sign_in_count    </text>
	<text fill="#FFFFFFFF" x="0.0" y="339">        :integer          default(0) #  current_sign_in_at       :datetime #  last_sign_in_at      </text>
	<text fill="#CD4B52FF" x="59.4" y="339"> </text>
	<text fill="#BC1019FF" x="60.0" y="339">  </text>
	<text fill="#DD878CFF" x="61.199999999999996" y="339"> </text>
	<text fill="#FFFFFFFF" x="61.8" y="339">:datetime #  authen</text>
	<text fill="#C42D35FF" x="73.2" y="339">t</text>
	<text fill="#BC1019FF" x="73.8" y="339">ic</text>
	<text fill="#C83C43FF" x="75.0" y="339">a</text>
	<text fill="#FFFFFFFF" x="75.6" y="339">tion_token </text>
	<text fill="#C83C43FF" x="82.2" y="339"> </text>
	<text fill="#BC1019FF" x="82.8" y="339">  </text>
	<text fill="#C01E27FF" x="84.0" y="339"> </text>
	<text fill="#FFFFFFFF" x="84.6" y="339">:string(255</text>
	<text fill="#EEC3C5FF" x="91.2" y="339">)</text>
	<text fill="#BC1019FF" x="91.8" y="339"> # </text>
	<text fill="#EEC3C5FF" x="93.6" y="339"> </text>
	<text fill="#FFFFFFFF" x="94.2" y="339">usernam</text>
	<text fill="#D9787DFF" x="98.39999999999999" y="339">e</text>
	<text fill="#BC1019FF" x="99.0" y="339">   </text>
	<text fill="#FBF0F1FF" x="100.8" y="339"> </text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="339">             :s</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="339">t</text>
	<text fill="#BC1019FF" x="111.0" y="339">rin</text>
	<text fill="#EEC3C5FF" x="112.8" y="339">g</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="339">(255)      not n</text>
	<text fill="#EEC3C5FF" x="123.0" y="339">u</text>
	<text fill="#BC1019FF" x="123.6" y="339">ll </text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="339">#  prefer</text>
	<text fill="#F2D2D4FF" x="130.79999999999998" y="339">r</text>
	<text fill="#C01E27FF" x="131.4" y="339">e</text>
	<text fill="#BC1019FF" x="132.0" y="339">d_na</text>
	<text fill="#DD878CFF" x="134.4" y="339">m</text>
	<text fill="#FFFFFFFF" x="135.0" y="339">e           </text>
	<text fill="#CD4B52FF" x="142.2" y="339">:</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="339">st</text>
	<text fill="#DD878CFF" x="144.0" y="339">r</text>
	<text fill="#FFFFFFFF" x="144.6" y="339">ing(255) #  created_a</text>
	<text fill="#DD878CFF" x="157.2" y="339">t</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="339">   </text>
	<text fill="#FFFFFFFF" x="159.6" y="339">        </text>
	<text fill="#D15A60FF" x="164.4" y="339"> </text>
	<text fill="#BC1019FF" x="165.0" y="339">  </text>
	<text fill="#C01E27FF" x="166.2" y="339"> </text>
	<text fill="#FFFFFFFF" x="166.79999999999998" y="339">:datetime  </text>
	<text fill="#C01E27FF" x="173.4" y="339"> </text>
	<text fill="#D5696FFF" x="174.0" y="339"> </text>
	<text fill="#EAB4B7FF" x="174.6" y="339"> </text>
	<text fill="#FFFFFFFF" x="175.2" y="339">    n</text>
	<text fill="#F7E1E2FF" x="178.2" y="339">o</text>
	<text fill="#D9787DFF" x="178.79999999999998" y="339">t</text>
	<text fill="#BC1019FF" x="179.4" y="339"> nu</text>
	<text fill="#CD4B52FF" x="181.2" y="339">l</text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="339">l #  updated_at               :datetime         not null #  institution_id           :integer    </text>
	<text fill="#FFFFFFFF" x="0.0" y="340">      not null #  middle_name              :string(255) #  phone_type               :string(255) # </text>
	<text fill="#CD4B52FF" x="59.4" y="340"> </text>
	<text fill="#BC1019FF" x="60.0" y="340">al</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="340">t</text>
	<text fill="#FFFFFFFF" x="61.8" y="340">ernate_phone      </text>
	<text fill="#F2D2D4FF" x="72.6" y="340"> </text>
	<text fill="#BC1019FF" x="73.2" y="340">   </text>
	<text fill="#E6A5A8FF" x="75.0" y="340">:</text>
	<text fill="#FFFFFFFF" x="75.6" y="340">string(255)</text>
	<text fill="#E2969AFF" x="82.2" y="340"> </text>
	<text fill="#BC1019FF" x="82.8" y="340">#  </text>
	<text fill="#EAB4B7FF" x="84.6" y="340">a</text>
	<text fill="#FFFFFFFF" x="85.2" y="340">lternate_p</text>
	<text fill="#EEC3C5FF" x="91.2" y="340">h</text>
	<text fill="#BC1019FF" x="91.8" y="340">one</text>
	<text fill="#EEC3C5FF" x="93.6" y="340">_</text>
	<text fill="#FFFFFFFF" x="94.2" y="340">type   </text>
	<text fill="#EEC3C5FF" x="98.39999999999999" y="340"> </text>
	<text fill="#BC1019FF" x="99.0" y="340"> :s</text>
	<text fill="#E6A5A8FF" x="100.8" y="340">t</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="340">ring(255) #  ti</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="340">m</text>
	<text fill="#BC1019FF" x="111.0" y="340">e_z</text>
	<text fill="#EEC3C5FF" x="112.8" y="340">o</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="340">ne              </text>
	<text fill="#EEC3C5FF" x="123.0" y="340"> </text>
	<text fill="#BC1019FF" x="123.6" y="340"> :s</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="340">tring(255)</text>
	<text fill="#E2969AFF" x="131.4" y="340"> </text>
	<text fill="#BC1019FF" x="132.0" y="340">#  c</text>
	<text fill="#DD878CFF" x="134.4" y="340">u</text>
	<text fill="#FFFFFFFF" x="135.0" y="340">rrent_sign_i</text>
	<text fill="#CD4B52FF" x="142.2" y="340">n</text>
	<text fill="#BC1019FF" x="142.79999999999998" y="340">_token    :st</text>
	<text fill="#EEC3C5FF" x="150.6" y="340">r</text>
	<text fill="#FFFFFFFF" x="151.2" y="340">ing(255) #</text>
	<text fill="#DD878CFF" x="157.2" y="340"> </text>
	<text fill="#BC1019FF" x="157.79999999999998" y="340"> us</text>
	<text fill="#FFFFFFFF" x="159.6" y="340">ername_o</text>
	<text fill="#E6A5A8FF" x="164.4" y="340">r</text>
	<text fill="#BC1019FF" x="165.0" y="340">din</text>
	<text fill="#F2D2D4FF" x="166.79999999999998" y="340">a</text>
	<text fill="#FFFFFFFF" x="167.4" y="340">l        </text>
	<text fill="#E6A5A8FF" x="172.79999999999998" y="340"> </text>
	<text fill="#BC1019FF" x="173.4" y="340">:int</text>
	<text fill="#C83C43FF" x="175.79999999999998" y="340">e</text>
	<text fill="#CD4B52FF" x="176.4" y="340">ge</text>
	<text fill="#C42D35FF" x="177.6" y="340">r</text>
	<text fill="#BC1019FF" x="178.2" y="340">    </text>
	<text fill="#C42D35FF" x="180.6" y="340"> </text>
	<text fill="#FBF0F1FF" x="181.2" y="340"> </text>
	<text fill="#FFFFFFFF" x="181.79999999999998" y="340">    default(1), not null #  active                   :boolean          default(TRUE), not null # </text>
	<text fill="#FFFFFFFF" x="0.0" y="341"> change_password_required :boolean          default(FALSE), not null #  salt                     :s</text>
	<text fill="#CD4B52FF" x="59.4" y="341">t</text>
	<text fill="#BC1019FF" x="60.0" y="341">ri</text>
	<text fill="#DD878CFF" x="61.199999999999996" y="341">n</text>
	<text fill="#FFFFFFFF" x="61.8" y="341">g(255)      not nu</text>
	<text fill="#D5696FFF" x="72.6" y="341">l</text>
	<text fill="#BC1019FF" x="73.2" y="341">l #</text>
	<text fill="#FBF0F1FF" x="75.0" y="341"> </text>
	<text fill="#FFFFFFFF" x="75.6" y="341"> eula_accep</text>
	<text fill="#FBF0F1FF" x="82.2" y="341">t</text>
	<text fill="#BC1019FF" x="82.8" y="341">ed </text>
	<text fill="#D15A60FF" x="84.6" y="341"> </text>
	<text fill="#FFFFFFFF" x="85.2" y="341">          </text>
	<text fill="#EEC3C5FF" x="91.2" y="341">:</text>
	<text fill="#BC1019FF" x="91.8" y="341">boo</text>
	<text fill="#EEC3C5FF" x="93.6" y="341">l</text>
	<text fill="#FFFFFFFF" x="94.2" y="341">ean     </text>
	<text fill="#C42D35FF" x="99.0" y="341"> </text>
	<text fill="#BC1019FF" x="99.6" y="341">  </text>
	<text fill="#CD4B52FF" x="100.8" y="341"> </text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="341"> default(FALSE)</text>
	<text fill="#EEC3C5FF" x="110.39999999999999" y="341">,</text>
	<text fill="#BC1019FF" x="111.0" y="341"> no</text>
	<text fill="#EEC3C5FF" x="112.8" y="341">t</text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="341"> null #  enrolle</text>
	<text fill="#EEC3C5FF" x="123.0" y="341">d</text>
	<text fill="#BC1019FF" x="123.6" y="341">   </text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="341">           </text>
	<text fill="#D15A60FF" x="132.0" y="341"> </text>
	<text fill="#BC1019FF" x="132.6" y="341">  :</text>
	<text fill="#DD878CFF" x="134.4" y="341">b</text>
	<text fill="#FFFFFFFF" x="135.0" y="341">oolean      </text>
	<text fill="#CD4B52FF" x="142.2" y="341"> </text>
	<text fill="#BC1019FF" x="142.79999999999998" y="341">   default(FA</text>
	<text fill="#EEC3C5FF" x="150.6" y="341">L</text>
	<text fill="#FFFFFFFF" x="151.2" y="341">SE) #  add</text>
	<text fill="#DD878CFF" x="157.2" y="341">r</text>
	<text fill="#BC1019FF" x="157.79999999999998" y="341">ess</text>
	<text fill="#FFFFFFFF" x="159.6" y="341">_id     </text>
	<text fill="#F7E1E2FF" x="164.4" y="341"> </text>
	<text fill="#BC1019FF" x="165.0" y="341">   </text>
	<text fill="#D9787DFF" x="166.79999999999998" y="341"> </text>
	<text fill="#FFFFFFFF" x="167.4" y="341">     :int</text>
	<text fill="#EAB4B7FF" x="172.79999999999998" y="341">e</text>
	<text fill="#C01E27FF" x="173.4" y="341">g</text>
	<text fill="#BC1019FF" x="174.0" y="341">er #  lang</text>
	<text fill="#D5696FFF" x="180.0" y="341">u</text>
	<text fill="#FBF0F1FF" x="180.6" y="341">a</text>
	<text fill="#FFFFFFFF" x="181.2" y="341">ge_preference      :string(15)       default("en"), not null #  external_id              :string(2</text>
	<text fill="#FFFFFFFF" x="0.0" y="342">55) # class User &lt; ActiveRecord::Base include Async include RetrieveItemStats include RetrieveUserS</text>
	<text fill="#E6A5A8FF" x="59.4" y="342">t</text>
	<text fill="#DD878CFF" x="60.0" y="342">at</text>
	<text fill="#EEC3C5FF" x="61.199999999999996" y="342">s</text>
	<text fill="#FFFFFFFF" x="61.8" y="342"> include APIGuard:</text>
	<text fill="#E2969AFF" x="72.6" y="342">:</text>
	<text fill="#DD878CFF" x="73.2" y="342">He</text>
	<text fill="#E6A5A8FF" x="74.39999999999999" y="342">l</text>
	<text fill="#FFFFFFFF" x="75.0" y="342">perMethods PH</text>
	<text fill="#E6A5A8FF" x="82.8" y="342">O</text>
	<text fill="#DD878CFF" x="83.39999999999999" y="342">NE_</text>
	<text fill="#FFFFFFFF" x="85.2" y="342">TYPES = {:</text>
	<text fill="#F7E1E2FF" x="91.2" y="342">h</text>
	<text fill="#DD878CFF" x="91.8" y="342">ome</text>
	<text fill="#F7E1E2FF" x="93.6" y="342"> </text>
	<text fill="#FFFFFFFF" x="94.2" y="342">=&gt; "Home</text>
	<text fill="#EAB4B7FF" x="99.0" y="342">"</text>
	<text fill="#DD878CFF" x="99.6" y="342">, :</text>
	<text fill="#FFFFFFFF" x="101.39999999999999" y="342">mobile =&gt; "Mobi</text>
	<text fill="#F7E1E2FF" x="110.39999999999999" y="342">l</text>
	<text fill="#DD878CFF" x="111.0" y="342">e",</text>
	<text fill="#F7E1E2FF" x="112.8" y="342"> </text>
	<text fill="#FFFFFFFF" x="113.39999999999999" y="342">:work =&gt; "Work"}</text>
	<text fill="#F7E1E2FF" x="123.0" y="342"> </text>
	<text fill="#DD878CFF" x="123.6" y="342"># I</text>
	<text fill="#FFFFFFFF" x="125.39999999999999" y="342">nclude defa</text>
	<text fill="#FBF0F1FF" x="132.0" y="342">u</text>
	<text fill="#DD878CFF" x="132.6" y="342">lt </text>
	<text fill="#EEC3C5FF" x="134.4" y="342">d</text>
	<text fill="#FFFFFFFF" x="135.0" y="342">evise module</text>
	<text fill="#E6A5A8FF" x="142.2" y="342">s</text>
	<text fill="#DD878CFF" x="142.79999999999998" y="342">. Others avai</text>
	<text fill="#F7E1E2FF" x="150.6" y="342">l</text>
	<text fill="#FFFFFFFF" x="151.2" y="342">able are: </text>
	<text fill="#EEC3C5FF" x="157.2" y="342">#</text>
	<text fill="#DD878CFF" x="157.79999999999998" y="342"> :e</text>
	<text fill="#FFFFFFFF" x="159.6" y="342">ncryptabl</text>
	<text fill="#E6A5A8FF" x="165.0" y="342">e</text>
	<text fill="#DD878CFF" x="165.6" y="342">, </text>
	<text fill="#E2969AFF" x="166.79999999999998" y="342">:</text>
	<text fill="#FFFFFFFF" x="167.4" y="342">confirmable</text>
	<text fill="#EAB4B7FF" x="174.0" y="342">,</text>
	<text fill="#DD878CFF" x="174.6" y="342"> </text>
	<text fill="#CD4B52FF" x="175.2" y="342">:lock</text>
	<text fill="#D15A60FF" x="178.2" y="342">a</text>
	<text fill="#E2969AFF" x="178.79999999999998" y="342">b</text>
	<text fill="#F7E1E2FF" x="179.4" y="342">l</text>
	<text fill="#FFFFFFFF" x="180.0" y="342">e, :timeoutable and :omniauthable devise :database_authenticatable, :recoverable, # end of defaults </text>
	<text fill="#FFFFFFFF" x="0.0" y="343">:timeoutable # DND: Removed token_authenticatable since it is deprecated by Devise - see http://blog.plataformatec.com.br/2013/08/devise-3-1-now-with-more-secure-defaults/ attr_accessor :require_password # Set this class variable to true if you want to skip the enrollment process # this would be used if we ever are seeding users with a script. cattr_accessor :skip_enrollment do false end has_many </text>
	<text fill="#FFFFFFFF" x="0.0" y="344">:user_rules, foreign_key: 'student_id', inverse_of: :student, dependent: :destroy # User is enrolled in multiple Programs has_many :user_programs, inverse_of: :user, dependent: :destroy has_many :programs, through: :user_programs # User has lots of competencies has_many :user_competencies, foreign_key: 'student_id', inverse_of: :student, dependent: :destroy has_many :competencies, -&gt; { includes :u</text>
	<text fill="#FFFFFFFF" x="0.0" y="345">ser_competencies }, through: :user_competencies # User has lots of LOs has_many :user_objectives, foreign_key: 'student_id', inverse_of: :student, dependent: :destroy has_many :learning_objectives, -&gt; { includes :user_objectives }, through: :user_objectives # User has lots of LAs has_many :user_activities, foreign_key: 'student_id', inverse_of: :student, dependent: :destroy has_many :learning_acti</text>
	<text fill="#FFFFFFFF" x="0.0" y="346">vities, -&gt; { includes :user_activities }, :through =&gt; :user_activities has_many :user_activity_attempts, -&gt; { includes :user_activities }, :through =&gt; :user_activities # User is in lots of Cohorts has_many :cohort_users, dependent: :destroy has_many :cohorts, -&gt; { includes :cohort_users }, through: :cohort_users # User has bunchec of learning plan contexts has_many :learning_plan_contexts, -&gt; { or</text>
	<text fill="#FFFFFFFF" x="0.0" y="347">der(:cohort_id, :position) }, inverse_of: :user, dependent: :destroy # User has a bunch of notes about him/her has_many :notes, foreign_key: 'student_id' has_many :authored_notes, class_name: 'Note', foreign_key: 'user_id' has_many :edited_notes, class_name: 'Note', foreign_key: 'editor_id' # stats has_many :user_stats, dependent: :delete_all has_many :webex_meeting_participants, dependent: :destr</text>
	<text fill="#FFFFFFFF" x="0.0" y="348">oy has_many :webex_meetings, through: :webex_meeting_participants belongs_to :address, autosave: true # User has some notifications, maybe has_many :notification_subscriptions has_many :notifications, -&gt; { order 'id desc' } # Events has_many :events_for_me, class_name: Event.name, foreign_key: 'user_id', dependent: :delete_all has_many :events_by_me,  class_name: Event.name, foreign_key: 'whodunni</text>
	<text fill="#FFFFFFFF" x="0.0" y="349">t_id', dependent: :delete_all has_many :page_views validates_with ZxcvbnPasswordValidator before_validation :generate_username, :on =&gt; :create # Email is required and must be an email validates :email, email: true, presence: true # Username can be alphanumeric, but not purely numeric. validates :username, length: { in: 3..50 }, uniqueness: true, format: { with: /\A(?=.*[a-z])[a-z\d]+\Z/i }, :allow</text>
	<text fill="#FFFFFFFF" x="0.0" y="350">_blank =&gt; false validates :first_name, :last_name, :email, presence: true validates :eula_accepted, inclusion: { in: [true, false] } validates :first_name, length: { in: 2..50 }, format: { with: /\A[a-zA-z\s\-']+\z/ }, allow_blank: false validates :middle_name, length: { maximum: 50 }, format: { with: /\A[a-zA-z\s\-']+\z/ }, allow_blank: true validates :last_name, length: { in: 2..50 }, format: { </text>
	<text fill="#FFFFFFFF" x="0.0" y="351">with: /\A[a-zA-z\s\-']+\z/ }, allow_blank: false validates :phone, phone: true, allow_blank: true validates :alternate_phone, phone: true, allow_blank: true validates_presence_of     :password, :if =&gt; :password_required? validates_confirmation_of :password validates_length_of       :password, :within =&gt; Devise.password_length , :allow_blank =&gt; true validates_presence_of     :password_confirmation,</text>
	<text fill="#FFFFFFFF" x="0.0" y="352"> :if =&gt; :encrypted_password_changed? belongs_to :institution validates :institution, presence: true has_one :preference has_one :webex_credential, foreign_key: 'instructor_id', inverse_of: :instructor accepts_nested_attributes_for :webex_credential, allow_destroy: true, reject_if: :reject_webex_credentials # Access control. Assignments is not schoolwork. :-) has_many :assignments, :inverse_of =&gt; :</text>
	<text fill="#FFFFFFFF" x="0.0" y="353">user, :dependent =&gt; :destroy has_many :roles, :through =&gt; :assignments has_many :grants, :through =&gt; :roles has_many :rights, :through =&gt; :grants # Default scope to limit user access to institution tree default_scope { default_scope_relation } # Scopes to handle active and inactive users, etc. scope :active,       -&gt; { where(active: true) } scope :inactive,     -&gt; { where(active: false) } scope :u</text>
	<text fill="#FFFFFFFF" x="0.0" y="354">nregistered, -&gt; { where(sign_in_count: 0) } scope :admins,      -&gt; { joins(:roles).where(roles: { title: Role::ADMIN } ) } scope :roots,       -&gt; { joins(:roles).where(roles: { title: Role::ROOT } ) } scope :supports,    -&gt; { joins(:roles).where(roles: { title: Role::SUPPORT } ) } scope :students,    -&gt; { joins(:roles).where(roles: { title: Role::STUDENT } ) } scope :instructors, -&gt; { joins(:roles</text>
	<text fill="#FFFFFFFF" x="0.0" y="355">).where(roles: { title: Role::INSTRUCTOR } ) } scope :recently_logged_in, proc { |ts| where('users.current_sign_in_at &gt; ?', (DateTime.current - (ts || 2.weeks))) } scope :with_institution, -&gt;(institution_id) { where(:institution_id =&gt; institution_id) } scope :with_roles,       -&gt;(roles) { joins(:roles).where("roles.id IN (?)", roles) } before_create :construct_preference before_create :set_change_</text>
	<text fill="#FFFFFFFF" x="0.0" y="356">password_required before_save :check_for_activation_change after_commit :send_pending_notifications, :if =&gt; :persisted? delegate :time_zone, to: :institution, prefix: false, allow_nil: true delegate :webex, to: :institution, prefix: false, allow_nil: true delegate :help_desk_email, to: :institution, prefix: false, allow_nil: true delegate :help_desk_phone_number, to: :institution, prefix: false, a</text>
	<text fill="#FFFFFFFF" x="0.0" y="357">llow_nil: true # --------------------------------------------------------------------------- def ransackable_attributes(auth_object = nil) [:first_name, :last_name, :username] end # Prakash Teli: With Arel 6.0 empty spaces in query string MUST be wrapped in Arel::Nodes.build_quoted # See: https://github.com/activerecord-hackery/ransack/issues/490. ransacker :name_i, formatter: proc { |v| v.mb_char</text>
	<text fill="#FFFFFFFF" x="0.0" y="358">s.downcase.to_s } do |parent| Arel::Nodes::NamedFunction.new('LOWER', [ Arel::Nodes::NamedFunction.new('concat_ws', [Arel::Nodes.build_quoted(' '), parent.table[:last_name], parent.table[:first_name]]) ]) end ransacker :name, formatter: proc { |v| v.mb_chars.downcase.to_s } do |parent| Arel::Nodes::NamedFunction.new('LOWER', [ Arel::Nodes::NamedFunction.new('concat_ws', [Arel::Nodes.build_quoted('</text>
	<text fill="#FFFFFFFF" x="0.0" y="359"> '), parent.table[:first_name], parent.table[:last_name]]) ]) end # Returns true if user is authorized to perform action on subject. # Throws SecurityTransgression if not. # # subject can be: #   String - interpreted as a resource name #   Class - resource name is inferred from the class name #   model - An actual instance of a model. When an item is provide, the permitted? method on the item is c</text>
	<text fill="#FFFFFFFF" x="0.0" y="360">alled. # def authorized!(action, subject = nil) unless subject.nil? # Set the klass and item item = nil resource = nil klass = subject.class if klass == Class # subject was a class name klass = subject else # Subject was a resource name or an item instance if klass == String resource = subject klass = Object.const_get(resource.singularize.classify) rescue nil else item = subject end end # If resou</text>
	<text fill="#FFFFFFFF" x="0.0" y="361">rce not defined, then default to convention from klass resource ||= klass.name.underscore.pluralize # Special case that I should be able to view and edit myself regardless of rights. its_me = self.is_me?(subject) &amp;&amp; [Right::READ, Right::UPDATE].include?(Right.operation_mapping(action)) # Check the global permissions on the resource raise SecurityTransgression.new("#{self.username} DENIED #{action}</text>
	<text fill="#FFFFFFFF" x="0.0" y="362"> on #{resource}") unless (its_me || self.has_rights?(action, resource)) # Now check the permissions on the item if possible if !item.nil? &amp;&amp; item.respond_to?(:permitted?) item.permitted?(self, Right.operation_mapping(action))  # Throws exception if denied end end # No exceptions means we are all good logger.debug "User#authorized AUTHORIZED: User(#{self.username}) -&gt; resource: #{resource}, action:</text>
	<text fill="#FFFFFFFF" x="0.0" y="363"> #{action}, item: #{item.try(:id) rescue nil}" true rescue =&gt; err # Logging a warning so we can track how many of these we get logger.debug "User#authorized DENIED: #{err.class.name} -&gt; #{err.message}" raise err end # Returns true if user is authorized to perform action on subject. def authorized?(action, subject = nil) authorized!(action, subject) rescue false end # Is this me? def is_me?(subject</text>
	<text fill="#FFFFFFFF" x="0.0" y="364">) !subject.nil? &amp;&amp; subject.is_a?(User) &amp;&amp; subject == self end # Rememeber: By the time you get here, the global resource permission has already been passed. # Read this as user can perform action on self. def permitted?(user, action) allowed = case action when Right::UPDATE self.can_edit?(user)                         # Only a root can update another admin or root when Right::MANAGE_ACTIVATION !se</text>
	<text fill="#FFFFFFFF" x="0.0" y="365">lf.is_me?(user) &amp;&amp; self.can_edit?(user)   # You can't activate/deactivate yourself when Right::READGRAPHS self.can_read_graphs?(user) when Right::RESET_PASSWORD user.root? &amp;&amp; self.can_edit?(user) when Right::MASQUERADE user.has_student_enrolled?(self) || ( user.academic_coach? &amp;&amp; user.institution_id == self.institution_id ) else true end raise PermittedError.new("#{self.class.name}(#{self.username</text>
	<text fill="#FFFFFFFF" x="0.0" y="366">}): #{user.username} DENIED #{action}") unless allowed allowed end # Can user edit me? def can_edit?(user) allowed = if self.is_me?(user) true                            # Can edit myself elsif self.root? user.root?                      # Must be root to edit other roots elsif self.admin? user.admin_manager?             # Must be an admin manager to edit another admin else true                    </text>
	<text fill="#FFFFFFFF" x="0.0" y="367">        # Go by the global permissions end end def has_rights?(operation, resource) return true if self.root? operation = Right.operation_mapping(operation) Grant.has_permission?(self.assignments.map(&amp;:role_id), operation, resource) end def reset_rights_cache @rights_hash = nil @my_role_titles = nil @rights_collection = nil end # Special case for root users. Return all available rights for the roo</text>
	<text fill="#FFFFFFFF" x="0.0" y="368">ts. # TODO: This may have an issue if there is ever a Right not given to any other role. If that was the case, #       then root would not get the right returned. def rights @rights_collection ||= ((self.root?) ? Right.uniq : super) end def rights_hash @rights_hash ||= Grant.rights_hash(self.assignments.map(&amp;:role_id)) end def add_role(title) raise ArgumentError, "Role should be the title of the r</text>
	<text fill="#FFFFFFFF" x="0.0" y="369">ole not a role object." if title.is_a?(::Role) unless has_role?(title) self.roles &lt;&lt; ::Role[title] reset_rights_cache end end def drop_role(title) raise ArgumentError, "Role should be the title of the role not a role object." if title.is_a?(::Role) self.assignments.joins(:role).where(roles: {title: title}).delete_all self.reload reset_rights_cache end def has_role?(title) raise ArgumentError, "Rol</text>
	<text fill="#FFFFFFFF" x="0.0" y="370">e should be the title of the role not a role object." if title.is_a?(::Role) !(self.my_role_titles.index { |r| r == title.to_s.camelize }).nil? end def my_role_titles @my_role_titles ||= self.roles.pluck(:title) end def curriculum_names self.cohorts.includes(:curriculum).map do |next_cohort| next_cohort.curriculum.name end.uniq.join(', ') end def root? self.has_role?(::Role::ROOT) end def support?</text>
	<text fill="#FFFFFFFF" x="0.0" y="371"> self.has_role?(::Role::SUPPORT) end # An admin is another that has more than just student or instructor def admin? self.has_role?(::Role::ADMIN) end def program_manager? self.has_role?(::Role::PROGRAM_MANAGER) end def curriculum_developer? self.has_role?(::Role::CURRICULUM_DEVELOPER) end # This will return true if user includes any role that is not student or instructor. def administrator? !self.</text>
	<text fill="#FFFFFFFF" x="0.0" y="372">roles.pluck(:title).reject { |t| t == Role::STUDENT || t == Role::INSTRUCTOR }.empty? end def academic_registrar? self.has_role?(::Role::ACADEMIC_REGISTRAR) end def student? self.has_role?(::Role::STUDENT) end def instructor? self.has_role?(::Role::INSTRUCTOR) end def academic_coach? self.has_role?(::Role::ACADEMIC_COACH) end def admin_manager? self.has_rights?(Right::MANAGE_ADMIN, 'users') end de</text>
	<text fill="#FFFFFFFF" x="0.0" y="373">f address super || build_address end def email=(val) # Stripping whitespace here rather than using a complicated regex validator write_attribute(:email, val.nil? ? nil : val.gsub(/\s+/, '')) end def get_webex_email $config[:smtp_settings]["send_to_address_dev"] || self.email end # Checks whether a password is needed or not. For validations only. # Passwords are always required if it's a new record</text>
	<text fill="#FFFFFFFF" x="0.0" y="374"> without reset_password, or if the password # or confirmation are being set somewhere. def password_required? self.require_password &amp;&amp; self.active? &amp;&amp; (self.change_password_required || !self.password.to_s.empty? || !self.password_confirmation.to_s.empty?) end # Devise will call this to ensure active def active_for_authentication? super &amp;&amp; self.active? &amp;&amp; self.institution.enabled? end # Devise to c</text>
	<text fill="#FFFFFFFF" x="0.0" y="375">all this to get an inactive message def inactive_message I18n.t('devise.failure.deactivated', :support_number =&gt; ApplicationHelper::support_contact_info_phone(self)) end # Activate the user def activate! unless self.active? self.active = true self.save! end end # Deactivate the user def deactivate! if self.active? self.active = false self.save! end end def activities_for_objective(learning_objecti</text>
	<text fill="#FFFFFFFF" x="0.0" y="376">ve_id) # TODO Figure out how to do this with active record queries.  Weird stuff happens when sorting via nested association columns. self.user_activities .includes(:learning_activity) .joins('inner join learning_activity_learning_objectives as lalos on lalos.learning_activity_id = user_activities.learning_activity_id') .where('lalos.learning_objective_id = ?', learning_objective_id) .order('lalos</text>
	<text fill="#FFFFFFFF" x="0.0" y="377">.position asc') end # Ensure type gets sent down as json def as_json(options={}) super(options.merge({:methods =&gt; :type})) end def full_name(last_first = false) (last_first) ? "#{last_name}, #{first_name}" : "#{first_name} #{last_name}" end def get_token_string Sherlock.access_token end def revoke_all_tokens Doorkeeper::AccessToken.revoke_all_for(nil, self) end def reset_authentication_token! self</text>
	<text fill="#FFFFFFFF" x="0.0" y="378">.authentication_token = self.generate_authentication_token self.save! self.authentication_token end def temp_password_from_reset_token # TAKE NOTICE!!!! # Any changes to this logic may result in a different temp password displaying in AA after a production deploy. # Ensure that QA/Prod is notified of any change before checking in. (self.change_password_required? &amp;&amp; !self.reset_password_token.nil? </text>
	<text fill="#FFFFFFFF" x="0.0" y="379">&amp;&amp; reset_password_period_valid?) ? "T#{self.reset_password_token[0,8]}1" : '' end def update_password!(pwd, pwd_confirmation) self.update_password(pwd, pwd_confirmation) self.save! end def update_password(pwd, pwd_confirmation) self.clear_reset_password_token self.change_password_required = false self.password_confirmation = pwd_confirmation self.password = pwd end def generate_reset_token! raw, e</text>
	<text fill="#FFFFFFFF" x="0.0" y="380">nc = Devise.token_generator.generate(self.class, :reset_password_token) self.reset_password_token = enc self.reset_password_sent_at = Time.current [raw, enc] end def process_password_reset(&amp;block) raw, enc = generate_reset_token! # What we do depends on the email if self.email.nil? || self.email.to_s.blank? # No email. Mark that user needs to change their password the next time they login. self.ch</text>
	<text fill="#FFFFFFFF" x="0.0" y="381">ange_password_required = true self.password = self.password_confirmation = self.temp_password_from_reset_token else # Have an email. Send enrollment email. self.change_password_required = false yield raw end end def send_enrollment_info(options = {}) return if self.external_id unless self.skip_enrollment process_password_reset do |raw| self.send_notification(:enrollment_instructions, options.merge</text>
	<text fill="#FFFFFFFF" x="0.0" y="382">(:token =&gt; raw)) end end true end def send_reset_password_instructions(do_save = true, options = {}) raise ActiveRecord::RecordNotFound unless self.active_for_authentication? process_password_reset do |raw| send_devise_notification(:reset_password_instructions, raw, options) end do_save ? self.save(validate: false) : true end def reset_password!(pwd, confirm_pwd) self.require_password = true # For</text>
	<text fill="#C5C8C9FF" x="0.0" y="383">ces valid</text>
	<text fill="#BABFBFFF" x="5.3999999999999995" y="383">a</text>
	<text fill="#C5CDCAFF" x="6.0" y="383">tor to requi</text>
	<text fill="#C1D1C7FF" x="13.2" y="383">r</text>
	<text fill="#CBDCD1FF" x="13.799999999999999" y="383">e password f</text>
	<text fill="#D7DFCCFF" x="21.0" y="383">i</text>
	<text fill="#E1E6D5FF" x="21.599999999999998" y="383">elds self.c</text>
	<text fill="#E2E1CCFF" x="28.2" y="383">h</text>
	<text fill="#EBE3CFFF" x="28.799999999999997" y="383">ange_passwor</text>
	<text fill="#E9D4C5FF" x="36.0" y="383">d</text>
	<text fill="#ECD9CEFF" x="36.6" y="383">_required =</text>
	<text fill="#E8D0C5FF" x="43.199999999999996" y="383"> </text>
	<text fill="#E9CED0FF" x="43.8" y="383">true # Force</text>
	<text fill="#E3C4CCFF" x="51.0" y="383">s</text>
	<text fill="#E6CAD4FF" x="51.6" y="383"> validator </text>
	<text fill="#E4C1CDFF" x="58.199999999999996" y="383">t</text>
	<text fill="#EED0DAFF" x="58.8" y="383">o require pa</text>
	<text fill="#E5C6D2FF" x="66.0" y="383">s</text>
	<text fill="#E2CBD6FF" x="66.6" y="383">sword fields</text>
	<text fill="#D6C6D3FF" x="73.8" y="383"> </text>
	<text fill="#DBD0DBFF" x="74.39999999999999" y="383">super pwd, </text>
	<text fill="#CFC6D3FF" x="81.0" y="383">c</text>
	<text fill="#CFCCD8FF" x="81.6" y="383">onfirm_pwd e</text>
	<text fill="#C4C7D4FF" x="88.8" y="383">n</text>
	<text fill="#C9D0DBFF" x="89.39999999999999" y="383">d def send_</text>
	<text fill="#BFCBD6FF" x="96.0" y="383">n</text>
	<text fill="#C9E0E7FF" x="96.6" y="383">otification(</text>
	<text fill="#C0D6DEFF" x="103.8" y="383">t</text>
	<text fill="#C9D9E1FF" x="104.39999999999999" y="383">emplate, opt</text>
	<text fill="#BDC2C9FF" x="111.6" y="383">i</text>
	<text fill="#C7CACFFF" x="112.2" y="383">ons = {}) #</text>
	<text fill="#BEC1C5FF" x="118.8" y="383"> </text>
	<text fill="#C5C8C9FF" x="119.39999999999999" y="383">If the recor</text>
	<text fill="#BAC3C0FF" x="126.6" y="383">d</text>
	<text fill="#C5CDCAFF" x="127.19999999999999" y="383"> is new or </text>
	<text fill="#BCC8C2FF" x="133.79999999999998" y="383">c</text>
	<text fill="#CBDCD1FF" x="134.4" y="383">hanged then </text>
	<text fill="#D3DDCCFF" x="141.6" y="383">d</text>
	<text fill="#E1E6D5FF" x="142.2" y="383">elay the de</text>
	<text fill="#DFE0CBFF" x="148.79999999999998" y="383">l</text>
	<text fill="#EBE3CFFF" x="149.4" y="383">ivery until </text>
	<text fill="#E9DAC7FF" x="156.6" y="383">t</text>
	<text fill="#ECD9CEFF" x="157.2" y="383">he after_com</text>
	<text fill="#E5C7C7FF" x="164.4" y="383">m</text>
	<text fill="#E9CED0FF" x="165.0" y="383">it callback</text>
	<text fill="#E4C4CAFF" x="171.6" y="383"> </text>
	<text fill="#E6CAD4FF" x="172.2" y="383">otherwise # </text>
	<text fill="#E8C6D1FF" x="179.4" y="383">s</text>
	<text fill="#EED0DAFF" x="180.0" y="383">end now bec</text>
	<text fill="#E8C5D2FF" x="186.6" y="383">a</text>
	<text fill="#E2CBD6FF" x="187.2" y="383">use after_co</text>
	<text fill="#D8C7D3FF" x="194.4" y="383">m</text>
	<text fill="#DBD0DBFF" x="195.0" y="383">mit will not</text>
	<text fill="#C8C3D1FF" x="202.2" y="383"> </text>
	<text fill="#CFCCD8FF" x="202.79999999999998" y="383">be called. </text>
	<text fill="#C5C6D3FF" x="209.4" y="383">i</text>
	<text fill="#C9D0DBFF" x="210.0" y="383">f self.new_r</text>
	<text fill="#C0D7E0FF" x="217.2" y="383">e</text>
	<text fill="#C9E0E7FF" x="217.79999999999998" y="383">cord? || se</text>
	<text fill="#BFD9E1FF" x="224.4" y="383">l</text>
	<text fill="#C9D9E1FF" x="225.0" y="383">f.changed? p</text>
	<text fill="#BFC7CEFF" x="232.2" y="383">e</text>
	<text fill="#C7CACFFF" x="232.79999999999998" y="383">nding_notifi</text>
	<text fill="#172428FF" x="0.0" y="384">cations[t</text>
	<text fill="#182929FF" x="5.3999999999999995" y="384">e</text>
	<text fill="#17382DFF" x="6.0" y="384">mplate] = [t</text>
	<text fill="#487D5BFF" x="13.2" y="384">e</text>
	<text fill="#317446FF" x="13.799999999999999" y="384">mplate, opti</text>
	<text fill="#879A57FF" x="21.0" y="384">ons] else MN</text>
	<text fill="#ACA261FF" x="28.2" y="384">A</text>
	<text fill="#B19041FF" x="28.799999999999997" y="384">.notify(self</text>
	<text fill="#B5693BFF" x="36.0" y="384">, template, </text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="384">o</text>
	<text fill="#A63A42FF" x="43.8" y="384">ptions) end </text>
	<text fill="#AA4766FF" x="51.0" y="384">e</text>
	<text fill="#9D2C53FF" x="51.6" y="384">nd def user</text>
	<text fill="#A53159FF" x="58.199999999999996" y="384">n</text>
	<text fill="#BC426BFF" x="58.8" y="384">ame_candidat</text>
	<text fill="#AC4F76FF" x="66.0" y="384">e</text>
	<text fill="#8C305DFF" x="66.6" y="384"> fname = sel</text>
	<text fill="#6F436EFF" x="73.8" y="384">f.first_name</text>
	<text fill="#69517AFF" x="81.0" y="384"> </text>
	<text fill="#413364FF" x="81.6" y="384">|| 'none' ln</text>
	<text fill="#47577FFF" x="88.8" y="384">a</text>
	<text fill="#29426EFF" x="89.39999999999999" y="384">me = self.l</text>
	<text fill="#295279FF" x="96.0" y="384">a</text>
	<text fill="#28859EFF" x="96.6" y="384">st_name  || </text>
	<text fill="#407D98FF" x="103.8" y="384">'</text>
	<text fill="#266787FF" x="104.39999999999999" y="384">none' "#{fna</text>
	<text fill="#202C41FF" x="111.6" y="384">me.gsub(/[^a</text>
	<text fill="#38434DFF" x="118.8" y="384">-</text>
	<text fill="#172428FF" x="119.39999999999999" y="384">zA-Z]/, '').</text>
	<text fill="#17382DFF" x="126.6" y="384">first}#{lnam</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="384">e</text>
	<text fill="#317446FF" x="134.4" y="384">.gsub(/[^a-z</text>
	<text fill="#8BA169FF" x="141.6" y="384">A</text>
	<text fill="#879A57FF" x="142.2" y="384">-Z]/, '')}"</text>
	<text fill="#939852FF" x="148.79999999999998" y="384">.</text>
	<text fill="#B19041FF" x="149.4" y="384">downcase end</text>
	<text fill="#BC8B56FF" x="156.6" y="384"> </text>
	<text fill="#B5693BFF" x="157.2" y="384">def institut</text>
	<text fill="#A63A42FF" x="164.4" y="384">ion_subtree_</text>
	<text fill="#AC4C62FF" x="171.6" y="384">i</text>
	<text fill="#9D2C53FF" x="172.2" y="384">ds(force_ref</text>
	<text fill="#C05579FF" x="179.4" y="384">r</text>
	<text fill="#BC426BFF" x="180.0" y="384">esh = false</text>
	<text fill="#AF3C68FF" x="186.6" y="384">)</text>
	<text fill="#8C305DFF" x="187.2" y="384"> # lets cach</text>
	<text fill="#84577EFF" x="194.4" y="384">e</text>
	<text fill="#6F436EFF" x="195.0" y="384"> this at the</text>
	<text fill="#413364FF" x="202.2" y="384"> instance le</text>
	<text fill="#4E547BFF" x="209.4" y="384">v</text>
	<text fill="#29426EFF" x="210.0" y="384">el, so we on</text>
	<text fill="#28859EFF" x="217.2" y="384">ly need to h</text>
	<text fill="#287D98FF" x="224.4" y="384">i</text>
	<text fill="#266787FF" x="225.0" y="384">t the db # f</text>
	<text fill="#3D4C5FFF" x="232.2" y="384">o</text>
	<text fill="#202C41FF" x="232.79999999999998" y="384">r this info </text>
	<text fill="#172428FF" x="0.0" y="385">once per </text>
	<text fill="#182929FF" x="5.3999999999999995" y="385">r</text>
	<text fill="#17382DFF" x="6.0" y="385">equest if @i</text>
	<text fill="#487D5BFF" x="13.2" y="385">n</text>
	<text fill="#317446FF" x="13.799999999999999" y="385">stitution_su</text>
	<text fill="#879A57FF" x="21.0" y="385">btree_ids.ni</text>
	<text fill="#ACA261FF" x="28.2" y="385">l</text>
	<text fill="#B19041FF" x="28.799999999999997" y="385">? &amp;&amp; !force_</text>
	<text fill="#B5693BFF" x="36.0" y="385">refresh @ins</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="385">t</text>
	<text fill="#A63A42FF" x="43.8" y="385">itution_subt</text>
	<text fill="#AA4766FF" x="51.0" y="385">r</text>
	<text fill="#9D2C53FF" x="51.6" y="385">ee_ids = se</text>
	<text fill="#A53159FF" x="58.199999999999996" y="385">l</text>
	<text fill="#BC426BFF" x="58.8" y="385">f.institutio</text>
	<text fill="#AC4F76FF" x="66.0" y="385">n</text>
	<text fill="#8C305DFF" x="66.6" y="385">.subtree_ids</text>
	<text fill="#6F436EFF" x="73.8" y="385"> end @instit</text>
	<text fill="#69517AFF" x="81.0" y="385">u</text>
	<text fill="#413364FF" x="81.6" y="385">tion_subtree</text>
	<text fill="#47577FFF" x="88.8" y="385">_</text>
	<text fill="#29426EFF" x="89.39999999999999" y="385">ids end def</text>
	<text fill="#295279FF" x="96.0" y="385"> </text>
	<text fill="#28859EFF" x="96.6" y="385">invalidate_c</text>
	<text fill="#407D98FF" x="103.8" y="385">a</text>
	<text fill="#266787FF" x="104.39999999999999" y="385">ched_institu</text>
	<text fill="#202C41FF" x="111.6" y="385">tion_ancestr</text>
	<text fill="#38434DFF" x="118.8" y="385">y</text>
	<text fill="#172428FF" x="119.39999999999999" y="385">! @instituti</text>
	<text fill="#17382DFF" x="126.6" y="385">on_subtree_i</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="385">d</text>
	<text fill="#317446FF" x="134.4" y="385">s = nil end </text>
	<text fill="#8BA169FF" x="141.6" y="385">d</text>
	<text fill="#879A57FF" x="142.2" y="385">ef lti_role</text>
	<text fill="#939852FF" x="148.79999999999998" y="385">_</text>
	<text fill="#B19041FF" x="149.4" y="385">list arr = [</text>
	<text fill="#BC8B56FF" x="156.6" y="385">]</text>
	<text fill="#B5693BFF" x="157.2" y="385"> self.my_rol</text>
	<text fill="#A63A42FF" x="164.4" y="385">e_titles.eac</text>
	<text fill="#AC4C62FF" x="171.6" y="385">h</text>
	<text fill="#9D2C53FF" x="172.2" y="385"> do |role| a</text>
	<text fill="#C05579FF" x="179.4" y="385">r</text>
	<text fill="#BC426BFF" x="180.0" y="385">r &lt;&lt; "urn:l</text>
	<text fill="#AF3C68FF" x="186.6" y="385">t</text>
	<text fill="#8C305DFF" x="187.2" y="385">i:sysrole:im</text>
	<text fill="#84577EFF" x="194.4" y="385">s</text>
	<text fill="#6F436EFF" x="195.0" y="385">/lis/#{role}</text>
	<text fill="#413364FF" x="202.2" y="385">" end arr.jo</text>
	<text fill="#4E547BFF" x="209.4" y="385">i</text>
	<text fill="#29426EFF" x="210.0" y="385">n(",") end d</text>
	<text fill="#28859EFF" x="217.2" y="385">ef role_list</text>
	<text fill="#287D98FF" x="224.4" y="385"> </text>
	<text fill="#266787FF" x="225.0" y="385">self.my_role</text>
	<text fill="#3D4C5FFF" x="232.2" y="385">_</text>
	<text fill="#202C41FF" x="232.79999999999998" y="385">titles.join(</text>
	<text fill="#172428FF" x="0.0" y="386">",") end </text>
	<text fill="#182929FF" x="5.3999999999999995" y="386">#</text>
	<text fill="#17382DFF" x="6.0" y="386"> Returns the</text>
	<text fill="#487D5BFF" x="13.2" y="386"> </text>
	<text fill="#317446FF" x="13.799999999999999" y="386">UserObjectiv</text>
	<text fill="#879A57FF" x="21.0" y="386">e records fo</text>
	<text fill="#ACA261FF" x="28.2" y="386">r</text>
	<text fill="#B19041FF" x="28.799999999999997" y="386"> the provide</text>
	<text fill="#B5693BFF" x="36.0" y="386">d cohort. Qu</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="386">e</text>
	<text fill="#A63A42FF" x="43.8" y="386">ry will incl</text>
	<text fill="#AA4766FF" x="51.0" y="386">u</text>
	<text fill="#9D2C53FF" x="51.6" y="386">de the lear</text>
	<text fill="#A53159FF" x="58.199999999999996" y="386">n</text>
	<text fill="#BC426BFF" x="58.8" y="386">ing objectiv</text>
	<text fill="#AC4F76FF" x="66.0" y="386">e</text>
	<text fill="#8C305DFF" x="66.6" y="386">. def learni</text>
	<text fill="#6F436EFF" x="73.8" y="386">ng_plan(coho</text>
	<text fill="#69517AFF" x="81.0" y="386">r</text>
	<text fill="#413364FF" x="81.6" y="386">t) cohort.le</text>
	<text fill="#47577FFF" x="88.8" y="386">a</text>
	<text fill="#29426EFF" x="89.39999999999999" y="386">rning_plan(</text>
	<text fill="#295279FF" x="96.0" y="386">s</text>
	<text fill="#28859EFF" x="96.6" y="386">elf) end # R</text>
	<text fill="#407D98FF" x="103.8" y="386">e</text>
	<text fill="#266787FF" x="104.39999999999999" y="386">turns true i</text>
	<text fill="#202C41FF" x="111.6" y="386">f the activi</text>
	<text fill="#38434DFF" x="118.8" y="386">t</text>
	<text fill="#172428FF" x="119.39999999999999" y="386">y exists in </text>
	<text fill="#17382DFF" x="126.6" y="386">a cohort for</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="386"> </text>
	<text fill="#317446FF" x="134.4" y="386">which the us</text>
	<text fill="#8BA169FF" x="141.6" y="386">e</text>
	<text fill="#879A57FF" x="142.2" y="386">r has a non</text>
	<text fill="#939852FF" x="148.79999999999998" y="386">-</text>
	<text fill="#B19041FF" x="149.4" y="386">student role</text>
	<text fill="#BC8B56FF" x="156.6" y="386"> </text>
	<text fill="#B5693BFF" x="157.2" y="386">def is_nonle</text>
	<text fill="#A63A42FF" x="164.4" y="386">arner_for_ac</text>
	<text fill="#AC4C62FF" x="171.6" y="386">t</text>
	<text fill="#9D2C53FF" x="172.2" y="386">ivity?(learn</text>
	<text fill="#C05579FF" x="179.4" y="386">i</text>
	<text fill="#BC426BFF" x="180.0" y="386">ng_activity</text>
	<text fill="#AF3C68FF" x="186.6" y="386">_</text>
	<text fill="#8C305DFF" x="187.2" y="386">id) CohortUs</text>
	<text fill="#84577EFF" x="194.4" y="386">e</text>
	<text fill="#6F436EFF" x="195.0" y="386">r.select("id</text>
	<text fill="#413364FF" x="202.2" y="386">") .joins( c</text>
	<text fill="#4E547BFF" x="209.4" y="386">o</text>
	<text fill="#29426EFF" x="210.0" y="386">hort: {learn</text>
	<text fill="#28859EFF" x="217.2" y="386">ing_plan_con</text>
	<text fill="#287D98FF" x="224.4" y="386">t</text>
	<text fill="#266787FF" x="225.0" y="386">exts: {user_</text>
	<text fill="#3D4C5FFF" x="232.2" y="386">o</text>
	<text fill="#202C41FF" x="232.79999999999998" y="386">bjective: {l</text>
	<text fill="#172428FF" x="0.0" y="387">earning_o</text>
	<text fill="#182929FF" x="5.3999999999999995" y="387">b</text>
	<text fill="#17382DFF" x="6.0" y="387">jective: :le</text>
	<text fill="#487D5BFF" x="13.2" y="387">a</text>
	<text fill="#317446FF" x="13.799999999999999" y="387">rning_activi</text>
	<text fill="#879A57FF" x="21.0" y="387">ty_learning_</text>
	<text fill="#ACA261FF" x="28.2" y="387">o</text>
	<text fill="#B19041FF" x="28.799999999999997" y="387">bjectives} }</text>
	<text fill="#B5693BFF" x="36.0" y="387"> } ) .where(</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="387">l</text>
	<text fill="#A63A42FF" x="43.8" y="387">earning_acti</text>
	<text fill="#AA4766FF" x="51.0" y="387">v</text>
	<text fill="#9D2C53FF" x="51.6" y="387">ity_learnin</text>
	<text fill="#A53159FF" x="58.199999999999996" y="387">g</text>
	<text fill="#BC426BFF" x="58.8" y="387">_objectives:</text>
	<text fill="#AC4F76FF" x="66.0" y="387"> </text>
	<text fill="#8C305DFF" x="66.6" y="387">{learning_ac</text>
	<text fill="#6F436EFF" x="73.8" y="387">tivity_id: l</text>
	<text fill="#69517AFF" x="81.0" y="387">e</text>
	<text fill="#413364FF" x="81.6" y="387">arning_activ</text>
	<text fill="#47577FFF" x="88.8" y="387">i</text>
	<text fill="#29426EFF" x="89.39999999999999" y="387">ty_id}) .wh</text>
	<text fill="#295279FF" x="96.0" y="387">e</text>
	<text fill="#28859EFF" x="96.6" y="387">re( active: </text>
	<text fill="#407D98FF" x="103.8" y="387">t</text>
	<text fill="#266787FF" x="104.39999999999999" y="387">rue, user_id</text>
	<text fill="#202C41FF" x="111.6" y="387">: self.id ) </text>
	<text fill="#38434DFF" x="118.8" y="387">.</text>
	<text fill="#172428FF" x="119.39999999999999" y="387">where.not( r</text>
	<text fill="#17382DFF" x="126.6" y="387">ole: CohortU</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="387">s</text>
	<text fill="#317446FF" x="134.4" y="387">er::COHORT_R</text>
	<text fill="#8BA169FF" x="141.6" y="387">O</text>
	<text fill="#879A57FF" x="142.2" y="387">LES[:studen</text>
	<text fill="#939852FF" x="148.79999999999998" y="387">t</text>
	<text fill="#B19041FF" x="149.4" y="387">] ) .count &gt;</text>
	<text fill="#BC8B56FF" x="156.6" y="387"> </text>
	<text fill="#B5693BFF" x="157.2" y="387">0 end # Retu</text>
	<text fill="#A63A42FF" x="164.4" y="387">rns true if </text>
	<text fill="#AC4C62FF" x="171.6" y="387">t</text>
	<text fill="#9D2C53FF" x="172.2" y="387">he objective</text>
	<text fill="#C05579FF" x="179.4" y="387"> </text>
	<text fill="#BC426BFF" x="180.0" y="387">exists in a</text>
	<text fill="#AF3C68FF" x="186.6" y="387"> </text>
	<text fill="#8C305DFF" x="187.2" y="387">cohort for w</text>
	<text fill="#84577EFF" x="194.4" y="387">h</text>
	<text fill="#6F436EFF" x="195.0" y="387">ich the user</text>
	<text fill="#413364FF" x="202.2" y="387"> has a non-s</text>
	<text fill="#4E547BFF" x="209.4" y="387">t</text>
	<text fill="#29426EFF" x="210.0" y="387">udent role d</text>
	<text fill="#28859EFF" x="217.2" y="387">ef is_nonlea</text>
	<text fill="#287D98FF" x="224.4" y="387">r</text>
	<text fill="#266787FF" x="225.0" y="387">ner_for_obje</text>
	<text fill="#3D4C5FFF" x="232.2" y="387">c</text>
	<text fill="#202C41FF" x="232.79999999999998" y="387">tive?(learni</text>
	<text fill="#172428FF" x="0.0" y="388">ng_object</text>
	<text fill="#182929FF" x="5.3999999999999995" y="388">i</text>
	<text fill="#17382DFF" x="6.0" y="388">ve_id) currs</text>
	<text fill="#487D5BFF" x="13.2" y="388"> </text>
	<text fill="#317446FF" x="13.799999999999999" y="388">= Curriculum</text>
	<text fill="#879A57FF" x="21.0" y="388">.all.joins(c</text>
	<text fill="#ACA261FF" x="28.2" y="388">o</text>
	<text fill="#B19041FF" x="28.799999999999997" y="388">horts: :coho</text>
	<text fill="#B5693BFF" x="36.0" y="388">rt_users) .w</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="388">h</text>
	<text fill="#A63A42FF" x="43.8" y="388">ere.not(coho</text>
	<text fill="#AA4766FF" x="51.0" y="388">r</text>
	<text fill="#9D2C53FF" x="51.6" y="388">t_users: { </text>
	<text fill="#A53159FF" x="58.199999999999996" y="388">r</text>
	<text fill="#BC426BFF" x="58.8" y="388">ole: CohortU</text>
	<text fill="#AC4F76FF" x="66.0" y="388">s</text>
	<text fill="#8C305DFF" x="66.6" y="388">er::COHORT_R</text>
	<text fill="#6F436EFF" x="73.8" y="388">OLES[:studen</text>
	<text fill="#69517AFF" x="81.0" y="388">t</text>
	<text fill="#413364FF" x="81.6" y="388">] }) .where(</text>
	<text fill="#47577FFF" x="88.8" y="388">c</text>
	<text fill="#29426EFF" x="89.39999999999999" y="388">ohort_users</text>
	<text fill="#295279FF" x="96.0" y="388">:</text>
	<text fill="#28859EFF" x="96.6" y="388">     { activ</text>
	<text fill="#407D98FF" x="103.8" y="388">e</text>
	<text fill="#266787FF" x="104.39999999999999" y="388">: true }) .w</text>
	<text fill="#202C41FF" x="111.6" y="388">here(cohort_</text>
	<text fill="#38434DFF" x="118.8" y="388">u</text>
	<text fill="#172428FF" x="119.39999999999999" y="388">sers:     { </text>
	<text fill="#17382DFF" x="126.6" y="388">id: self.coh</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="388">o</text>
	<text fill="#317446FF" x="134.4" y="388">rt_user_ids </text>
	<text fill="#8BA169FF" x="141.6" y="388">}</text>
	<text fill="#879A57FF" x="142.2" y="388">) .any? { |</text>
	<text fill="#939852FF" x="148.79999999999998" y="388">c</text>
	<text fill="#B19041FF" x="149.4" y="388">u| cu.includ</text>
	<text fill="#BC8B56FF" x="156.6" y="388">e</text>
	<text fill="#B5693BFF" x="157.2" y="388">s_objective?</text>
	<text fill="#A63A42FF" x="164.4" y="388">(learning_ob</text>
	<text fill="#AC4C62FF" x="171.6" y="388">j</text>
	<text fill="#9D2C53FF" x="172.2" y="388">ective_id) }</text>
	<text fill="#C05579FF" x="179.4" y="388"> </text>
	<text fill="#BC426BFF" x="180.0" y="388">end def is_</text>
	<text fill="#AF3C68FF" x="186.6" y="388">n</text>
	<text fill="#8C305DFF" x="187.2" y="388">onlearner_fo</text>
	<text fill="#84577EFF" x="194.4" y="388">r</text>
	<text fill="#6F436EFF" x="195.0" y="388">_competency?</text>
	<text fill="#413364FF" x="202.2" y="388">(competency_</text>
	<text fill="#4E547BFF" x="209.4" y="388">i</text>
	<text fill="#29426EFF" x="210.0" y="388">d) Curriculu</text>
	<text fill="#28859EFF" x="217.2" y="388">m.all.joins(</text>
	<text fill="#287D98FF" x="224.4" y="388">c</text>
	<text fill="#266787FF" x="225.0" y="388">ohorts: :coh</text>
	<text fill="#3D4C5FFF" x="232.2" y="388">o</text>
	<text fill="#202C41FF" x="232.79999999999998" y="388">rt_users) .w</text>
	<text fill="#172428FF" x="0.0" y="389">here.not(</text>
	<text fill="#182929FF" x="5.3999999999999995" y="389">c</text>
	<text fill="#17382DFF" x="6.0" y="389">ohort_users:</text>
	<text fill="#487D5BFF" x="13.2" y="389"> </text>
	<text fill="#317446FF" x="13.799999999999999" y="389">{ role: Coho</text>
	<text fill="#879A57FF" x="21.0" y="389">rtUser::COHO</text>
	<text fill="#ACA261FF" x="28.2" y="389">R</text>
	<text fill="#B19041FF" x="28.799999999999997" y="389">T_ROLES[:stu</text>
	<text fill="#B5693BFF" x="36.0" y="389">dent] }) .wh</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="389">e</text>
	<text fill="#A63A42FF" x="43.8" y="389">re(cohort_us</text>
	<text fill="#AA4766FF" x="51.0" y="389">e</text>
	<text fill="#9D2C53FF" x="51.6" y="389">rs:     { a</text>
	<text fill="#A53159FF" x="58.199999999999996" y="389">c</text>
	<text fill="#BC426BFF" x="58.8" y="389">tive: true }</text>
	<text fill="#AC4F76FF" x="66.0" y="389">)</text>
	<text fill="#8C305DFF" x="66.6" y="389"> .where(coho</text>
	<text fill="#6F436EFF" x="73.8" y="389">rt_users: {i</text>
	<text fill="#69517AFF" x="81.0" y="389">d</text>
	<text fill="#413364FF" x="81.6" y="389">: self.cohor</text>
	<text fill="#47577FFF" x="88.8" y="389">t</text>
	<text fill="#29426EFF" x="89.39999999999999" y="389">_user_ids }</text>
	<text fill="#295279FF" x="96.0" y="389">)</text>
	<text fill="#28859EFF" x="96.6" y="389"> .any? { |cu</text>
	<text fill="#407D98FF" x="103.8" y="389">|</text>
	<text fill="#266787FF" x="104.39999999999999" y="389"> cu.includes</text>
	<text fill="#202C41FF" x="111.6" y="389">_competency?</text>
	<text fill="#38434DFF" x="118.8" y="389">(</text>
	<text fill="#172428FF" x="119.39999999999999" y="389">competency_i</text>
	<text fill="#17382DFF" x="126.6" y="389">d) } end def</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="389"> </text>
	<text fill="#317446FF" x="134.4" y="389">cohorts_taug</text>
	<text fill="#8BA169FF" x="141.6" y="389">h</text>
	<text fill="#879A57FF" x="142.2" y="389">t_by_instru</text>
	<text fill="#939852FF" x="148.79999999999998" y="389">c</text>
	<text fill="#B19041FF" x="149.4" y="389">tor cohort_u</text>
	<text fill="#BC8B56FF" x="156.6" y="389">s</text>
	<text fill="#B5693BFF" x="157.2" y="389">ers.where(ro</text>
	<text fill="#A63A42FF" x="164.4" y="389">le: CohortUs</text>
	<text fill="#AC4C62FF" x="171.6" y="389">e</text>
	<text fill="#9D2C53FF" x="172.2" y="389">r::COHORT_RO</text>
	<text fill="#C05579FF" x="179.4" y="389">L</text>
	<text fill="#BC426BFF" x="180.0" y="389">ES[:instruc</text>
	<text fill="#AF3C68FF" x="186.6" y="389">t</text>
	<text fill="#8C305DFF" x="187.2" y="389">or]).map(&amp;:c</text>
	<text fill="#84577EFF" x="194.4" y="389">o</text>
	<text fill="#6F436EFF" x="195.0" y="389">hort) end de</text>
	<text fill="#413364FF" x="202.2" y="389">f has_studen</text>
	<text fill="#4E547BFF" x="209.4" y="389">t</text>
	<text fill="#29426EFF" x="210.0" y="389">_enrolled?(s</text>
	<text fill="#28859EFF" x="217.2" y="389">tudent) coho</text>
	<text fill="#287D98FF" x="224.4" y="389">r</text>
	<text fill="#266787FF" x="225.0" y="389">ts_taught_by</text>
	<text fill="#3D4C5FFF" x="232.2" y="389">_</text>
	<text fill="#202C41FF" x="232.79999999999998" y="389">instructor.a</text>
	<text fill="#172428FF" x="0.0" y="390">ny?{|coho</text>
	<text fill="#182929FF" x="5.3999999999999995" y="390">r</text>
	<text fill="#17382DFF" x="6.0" y="390">t| cohort.en</text>
	<text fill="#487D5BFF" x="13.2" y="390">r</text>
	<text fill="#317446FF" x="13.799999999999999" y="390">olled_as_stu</text>
	<text fill="#879A57FF" x="21.0" y="390">dent?(studen</text>
	<text fill="#ACA261FF" x="28.2" y="390">t</text>
	<text fill="#B19041FF" x="28.799999999999997" y="390">)} end # Ret</text>
	<text fill="#B5693BFF" x="36.0" y="390">urn a list o</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="390">f</text>
	<text fill="#A63A42FF" x="43.8" y="390"> institution</text>
	<text fill="#AA4766FF" x="51.0" y="390">s</text>
	<text fill="#9D2C53FF" x="51.6" y="390"> that this </text>
	<text fill="#A53159FF" x="58.199999999999996" y="390">u</text>
	<text fill="#BC426BFF" x="58.8" y="390">ser can acce</text>
	<text fill="#AC4F76FF" x="66.0" y="390">s</text>
	<text fill="#8C305DFF" x="66.6" y="390">s def access</text>
	<text fill="#6F436EFF" x="73.8" y="390">ible_institu</text>
	<text fill="#69517AFF" x="81.0" y="390">t</text>
	<text fill="#413364FF" x="81.6" y="390">ions Institu</text>
	<text fill="#47577FFF" x="88.8" y="390">t</text>
	<text fill="#29426EFF" x="89.39999999999999" y="390">ion.where(i</text>
	<text fill="#295279FF" x="96.0" y="390">d</text>
	<text fill="#28859EFF" x="96.6" y="390">: self.insti</text>
	<text fill="#407D98FF" x="103.8" y="390">t</text>
	<text fill="#266787FF" x="104.39999999999999" y="390">ution_subtre</text>
	<text fill="#202C41FF" x="111.6" y="390">e_ids) end d</text>
	<text fill="#38434DFF" x="118.8" y="390">e</text>
	<text fill="#172428FF" x="119.39999999999999" y="390">f active_and</text>
	<text fill="#17382DFF" x="126.6" y="390">_started_coh</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="390">o</text>
	<text fill="#317446FF" x="134.4" y="390">rts Cohort.s</text>
	<text fill="#8BA169FF" x="141.6" y="390">t</text>
	<text fill="#879A57FF" x="142.2" y="390">arted.joins</text>
	<text fill="#939852FF" x="148.79999999999998" y="390">(</text>
	<text fill="#B19041FF" x="149.4" y="390">:cohort_user</text>
	<text fill="#BC8B56FF" x="156.6" y="390">s</text>
	<text fill="#B5693BFF" x="157.2" y="390">).where(coho</text>
	<text fill="#A63A42FF" x="164.4" y="390">rt_users: { </text>
	<text fill="#AC4C62FF" x="171.6" y="390">u</text>
	<text fill="#9D2C53FF" x="172.2" y="390">ser_id: self</text>
	<text fill="#C05579FF" x="179.4" y="390">.</text>
	<text fill="#BC426BFF" x="180.0" y="390">id }).where</text>
	<text fill="#AF3C68FF" x="186.6" y="390">(</text>
	<text fill="#8C305DFF" x="187.2" y="390">cohort_users</text>
	<text fill="#84577EFF" x="194.4" y="390">:</text>
	<text fill="#6F436EFF" x="195.0" y="390"> { active: t</text>
	<text fill="#413364FF" x="202.2" y="390">rue }) end d</text>
	<text fill="#4E547BFF" x="209.4" y="390">e</text>
	<text fill="#29426EFF" x="210.0" y="390">f active_coh</text>
	<text fill="#28859EFF" x="217.2" y="390">orts_for(rol</text>
	<text fill="#287D98FF" x="224.4" y="390">e</text>
	<text fill="#266787FF" x="225.0" y="390">) raise Secu</text>
	<text fill="#3D4C5FFF" x="232.2" y="390">r</text>
	<text fill="#202C41FF" x="232.79999999999998" y="390">ityTransgres</text>
	<text fill="#172428FF" x="0.0" y="391">sion.new(</text>
	<text fill="#182929FF" x="5.3999999999999995" y="391">"</text>
	<text fill="#17382DFF" x="6.0" y="391">#{role} is n</text>
	<text fill="#487D5BFF" x="13.2" y="391">o</text>
	<text fill="#317446FF" x="13.799999999999999" y="391">t a permitte</text>
	<text fill="#879A57FF" x="21.0" y="391">d role for t</text>
	<text fill="#ACA261FF" x="28.2" y="391">h</text>
	<text fill="#B19041FF" x="28.799999999999997" y="391">e system") u</text>
	<text fill="#B5693BFF" x="36.0" y="391">nless Role::</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="391">R</text>
	<text fill="#A63A42FF" x="43.8" y="391">OLE_LIST.inc</text>
	<text fill="#AA4766FF" x="51.0" y="391">l</text>
	<text fill="#9D2C53FF" x="51.6" y="391">ude?(role) </text>
	<text fill="#A53159FF" x="58.199999999999996" y="391">i</text>
	<text fill="#BC426BFF" x="58.8" y="391">f role == Ro</text>
	<text fill="#AC4F76FF" x="66.0" y="391">l</text>
	<text fill="#8C305DFF" x="66.6" y="391">e::ACADEMIC_</text>
	<text fill="#6F436EFF" x="73.8" y="391">COACH self.i</text>
	<text fill="#69517AFF" x="81.0" y="391">n</text>
	<text fill="#413364FF" x="81.6" y="391">stitution.co</text>
	<text fill="#47577FFF" x="88.8" y="391">h</text>
	<text fill="#29426EFF" x="89.39999999999999" y="391">orts.curren</text>
	<text fill="#295279FF" x="96.0" y="391">t</text>
	<text fill="#28859EFF" x="96.6" y="391">_for_only_co</text>
	<text fill="#407D98FF" x="103.8" y="391">h</text>
	<text fill="#266787FF" x="104.39999999999999" y="391">ort.order(na</text>
	<text fill="#202C41FF" x="111.6" y="391">me: :asc).di</text>
	<text fill="#38434DFF" x="118.8" y="391">s</text>
	<text fill="#172428FF" x="119.39999999999999" y="391">tinct else s</text>
	<text fill="#17382DFF" x="126.6" y="391">elf.cohorts.</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="391">i</text>
	<text fill="#317446FF" x="134.4" y="391">ncludes(:coh</text>
	<text fill="#8BA169FF" x="141.6" y="391">o</text>
	<text fill="#879A57FF" x="142.2" y="391">rt_users).w</text>
	<text fill="#939852FF" x="148.79999999999998" y="391">h</text>
	<text fill="#B19041FF" x="149.4" y="391">ere(cohort_u</text>
	<text fill="#BC8B56FF" x="156.6" y="391">s</text>
	<text fill="#B5693BFF" x="157.2" y="391">ers: {active</text>
	<text fill="#A63A42FF" x="164.4" y="391">: true, role</text>
	<text fill="#AC4C62FF" x="171.6" y="391">:</text>
	<text fill="#9D2C53FF" x="172.2" y="391"> role}).refe</text>
	<text fill="#C05579FF" x="179.4" y="391">r</text>
	<text fill="#BC426BFF" x="180.0" y="391">ences(:coho</text>
	<text fill="#AF3C68FF" x="186.6" y="391">r</text>
	<text fill="#8C305DFF" x="187.2" y="391">t_users) end</text>
	<text fill="#84577EFF" x="194.4" y="391"> </text>
	<text fill="#6F436EFF" x="195.0" y="391">end def days</text>
	<text fill="#413364FF" x="202.2" y="391">_expired_coh</text>
	<text fill="#4E547BFF" x="209.4" y="391">o</text>
	<text fill="#29426EFF" x="210.0" y="391">rts has_role</text>
	<text fill="#28859EFF" x="217.2" y="391">?(Role::INST</text>
	<text fill="#287D98FF" x="224.4" y="391">R</text>
	<text fill="#266787FF" x="225.0" y="391">UCTOR) ? ins</text>
	<text fill="#3D4C5FFF" x="232.2" y="391">t</text>
	<text fill="#202C41FF" x="232.79999999999998" y="391">itution.days</text>
	<text fill="#172428FF" x="0.0" y="392">_to_displ</text>
	<text fill="#182929FF" x="5.3999999999999995" y="392">a</text>
	<text fill="#17382DFF" x="6.0" y="392">y_expired_co</text>
	<text fill="#487D5BFF" x="13.2" y="392">h</text>
	<text fill="#317446FF" x="13.799999999999999" y="392">orts : 0 end</text>
	<text fill="#879A57FF" x="21.0" y="392"> def active_</text>
	<text fill="#ACA261FF" x="28.2" y="392">c</text>
	<text fill="#B19041FF" x="28.799999999999997" y="392">ohorts self.</text>
	<text fill="#B5693BFF" x="36.0" y="392">cohorts.refe</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="392">r</text>
	<text fill="#A63A42FF" x="43.8" y="392">ences(:cohor</text>
	<text fill="#AA4766FF" x="51.0" y="392">t</text>
	<text fill="#9D2C53FF" x="51.6" y="392">_users).whe</text>
	<text fill="#A53159FF" x="58.199999999999996" y="392">r</text>
	<text fill="#BC426BFF" x="58.8" y="392">e(cohort_use</text>
	<text fill="#AC4F76FF" x="66.0" y="392">r</text>
	<text fill="#8C305DFF" x="66.6" y="392">s: {active: </text>
	<text fill="#6F436EFF" x="73.8" y="392">true}) end d</text>
	<text fill="#69517AFF" x="81.0" y="392">e</text>
	<text fill="#413364FF" x="81.6" y="392">f active_pro</text>
	<text fill="#47577FFF" x="88.8" y="392">g</text>
	<text fill="#29426EFF" x="89.39999999999999" y="392">rams self.p</text>
	<text fill="#295279FF" x="96.0" y="392">r</text>
	<text fill="#28859EFF" x="96.6" y="392">ograms.refer</text>
	<text fill="#407D98FF" x="103.8" y="392">e</text>
	<text fill="#266787FF" x="104.39999999999999" y="392">nces(:user_p</text>
	<text fill="#202C41FF" x="111.6" y="392">rograms).whe</text>
	<text fill="#38434DFF" x="118.8" y="392">r</text>
	<text fill="#172428FF" x="119.39999999999999" y="392">e(user_progr</text>
	<text fill="#17382DFF" x="126.6" y="392">ams: {active</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="392">:</text>
	<text fill="#317446FF" x="134.4" y="392"> true}) end </text>
	<text fill="#8BA169FF" x="141.6" y="392">d</text>
	<text fill="#879A57FF" x="142.2" y="392">ef clone_us</text>
	<text fill="#939852FF" x="148.79999999999998" y="392">e</text>
	<text fill="#B19041FF" x="149.4" y="392">r(params) Us</text>
	<text fill="#BC8B56FF" x="156.6" y="392">e</text>
	<text fill="#B5693BFF" x="157.2" y="392">r.transactio</text>
	<text fill="#A63A42FF" x="164.4" y="392">n do old_use</text>
	<text fill="#AC4C62FF" x="171.6" y="392">r</text>
	<text fill="#9D2C53FF" x="172.2" y="392"> = self new_</text>
	<text fill="#C05579FF" x="179.4" y="392">u</text>
	<text fill="#BC426BFF" x="180.0" y="392">ser = old_u</text>
	<text fill="#AF3C68FF" x="186.6" y="392">s</text>
	<text fill="#8C305DFF" x="187.2" y="392">er.dup old_u</text>
	<text fill="#84577EFF" x="194.4" y="392">s</text>
	<text fill="#6F436EFF" x="195.0" y="392">er.username </text>
	<text fill="#413364FF" x="202.2" y="392">= nil old_us</text>
	<text fill="#4E547BFF" x="209.4" y="392">e</text>
	<text fill="#29426EFF" x="210.0" y="392">r.username =</text>
	<text fill="#28859EFF" x="217.2" y="392"> old_user.se</text>
	<text fill="#287D98FF" x="224.4" y="392">n</text>
	<text fill="#266787FF" x="225.0" y="392">d(:generate_</text>
	<text fill="#3D4C5FFF" x="232.2" y="392">u</text>
	<text fill="#202C41FF" x="232.79999999999998" y="392">sername) + "</text>
	<text fill="#172428FF" x="0.0" y="393">OldRecord</text>
	<text fill="#182929FF" x="5.3999999999999995" y="393">"</text>
	<text fill="#17382DFF" x="6.0" y="393"> old_user.ex</text>
	<text fill="#487D5BFF" x="13.2" y="393">t</text>
	<text fill="#317446FF" x="13.799999999999999" y="393">ernal_id = o</text>
	<text fill="#879A57FF" x="21.0" y="393">ld_user.exte</text>
	<text fill="#ACA261FF" x="28.2" y="393">r</text>
	<text fill="#B19041FF" x="28.799999999999997" y="393">nal_id.to_s </text>
	<text fill="#B5693BFF" x="36.0" y="393">+ "OldRecord</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="393">"</text>
	<text fill="#A63A42FF" x="43.8" y="393"> old_user.ac</text>
	<text fill="#AA4766FF" x="51.0" y="393">t</text>
	<text fill="#9D2C53FF" x="51.6" y="393">ive = false</text>
	<text fill="#A53159FF" x="58.199999999999996" y="393"> </text>
	<text fill="#BC426BFF" x="58.8" y="393">old_user.sav</text>
	<text fill="#AC4F76FF" x="66.0" y="393">e</text>
	<text fill="#8C305DFF" x="66.6" y="393">! new_user.p</text>
	<text fill="#6F436EFF" x="73.8" y="393">assword = pa</text>
	<text fill="#69517AFF" x="81.0" y="393">r</text>
	<text fill="#413364FF" x="81.6" y="393">ams[:passwor</text>
	<text fill="#47577FFF" x="88.8" y="393">d</text>
	<text fill="#29426EFF" x="89.39999999999999" y="393">] new_user.</text>
	<text fill="#295279FF" x="96.0" y="393">p</text>
	<text fill="#28859EFF" x="96.6" y="393">assword_conf</text>
	<text fill="#407D98FF" x="103.8" y="393">i</text>
	<text fill="#266787FF" x="104.39999999999999" y="393">rmation = pa</text>
	<text fill="#202C41FF" x="111.6" y="393">rams[:passwo</text>
	<text fill="#38434DFF" x="118.8" y="393">r</text>
	<text fill="#172428FF" x="119.39999999999999" y="393">d] new_user.</text>
	<text fill="#17382DFF" x="126.6" y="393">roles &lt;&lt; old</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="393">_</text>
	<text fill="#317446FF" x="134.4" y="393">user.roles n</text>
	<text fill="#8BA169FF" x="141.6" y="393">e</text>
	<text fill="#879A57FF" x="142.2" y="393">w_user.sign</text>
	<text fill="#939852FF" x="148.79999999999998" y="393">_</text>
	<text fill="#B19041FF" x="149.4" y="393">in_count = 0</text>
	<text fill="#BC8B56FF" x="156.6" y="393"> </text>
	<text fill="#B5693BFF" x="157.2" y="393">new_user.cur</text>
	<text fill="#A63A42FF" x="164.4" y="393">rent_sign_in</text>
	<text fill="#AC4C62FF" x="171.6" y="393">_</text>
	<text fill="#9D2C53FF" x="172.2" y="393">at = nil new</text>
	<text fill="#C05579FF" x="179.4" y="393">_</text>
	<text fill="#BC426BFF" x="180.0" y="393">user.last_s</text>
	<text fill="#AF3C68FF" x="186.6" y="393">i</text>
	<text fill="#8C305DFF" x="187.2" y="393">gn_in_at = n</text>
	<text fill="#84577EFF" x="194.4" y="393">i</text>
	<text fill="#6F436EFF" x="195.0" y="393">l new_user.s</text>
	<text fill="#413364FF" x="202.2" y="393">ave! old_use</text>
	<text fill="#4E547BFF" x="209.4" y="393">r</text>
	<text fill="#29426EFF" x="210.0" y="393">.cohorts.eac</text>
	<text fill="#28859EFF" x="217.2" y="393">h do |cohort</text>
	<text fill="#287D98FF" x="224.4" y="393">|</text>
	<text fill="#266787FF" x="225.0" y="393"> cohort.unen</text>
	<text fill="#3D4C5FFF" x="232.2" y="393">r</text>
	<text fill="#202C41FF" x="232.79999999999998" y="393">oll_user(old</text>
	<text fill="#172428FF" x="0.0" y="394">_user) co</text>
	<text fill="#182929FF" x="5.3999999999999995" y="394">h</text>
	<text fill="#17382DFF" x="6.0" y="394">ort.enroll_u</text>
	<text fill="#487D5BFF" x="13.2" y="394">s</text>
	<text fill="#317446FF" x="13.799999999999999" y="394">er(new_user,</text>
	<text fill="#879A57FF" x="21.0" y="394"> :student) e</text>
	<text fill="#ACA261FF" x="28.2" y="394">n</text>
	<text fill="#B19041FF" x="28.799999999999997" y="394">d old_user.p</text>
	<text fill="#B5693BFF" x="36.0" y="394">rograms.each</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="394"> </text>
	<text fill="#A63A42FF" x="43.8" y="394">do |program|</text>
	<text fill="#AA4766FF" x="51.0" y="394"> </text>
	<text fill="#9D2C53FF" x="51.6" y="394">program.une</text>
	<text fill="#A53159FF" x="58.199999999999996" y="394">n</text>
	<text fill="#BC426BFF" x="58.8" y="394">roll_user(ol</text>
	<text fill="#AC4F76FF" x="66.0" y="394">d</text>
	<text fill="#8C305DFF" x="66.6" y="394">_user) progr</text>
	<text fill="#6F436EFF" x="73.8" y="394">am.enroll_us</text>
	<text fill="#69517AFF" x="81.0" y="394">e</text>
	<text fill="#413364FF" x="81.6" y="394">r(new_user) </text>
	<text fill="#47577FFF" x="88.8" y="394">e</text>
	<text fill="#29426EFF" x="89.39999999999999" y="394">nd new_user</text>
	<text fill="#295279FF" x="96.0" y="394"> </text>
	<text fill="#28859EFF" x="96.6" y="394">end end # Cr</text>
	<text fill="#407D98FF" x="103.8" y="394">e</text>
	<text fill="#266787FF" x="104.39999999999999" y="394">ates an acce</text>
	<text fill="#202C41FF" x="111.6" y="394">ss token for</text>
	<text fill="#38434DFF" x="118.8" y="394"> </text>
	<text fill="#172428FF" x="119.39999999999999" y="394">this user (w</text>
	<text fill="#17382DFF" x="126.6" y="394">hich effecti</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="394">v</text>
	<text fill="#317446FF" x="134.4" y="394">ely signs th</text>
	<text fill="#8BA169FF" x="141.6" y="394">e</text>
	<text fill="#879A57FF" x="142.2" y="394">m in) # Thi</text>
	<text fill="#939852FF" x="148.79999999999998" y="394">s</text>
	<text fill="#B19041FF" x="149.4" y="394"> will cause </text>
	<text fill="#BC8B56FF" x="156.6" y="394">t</text>
	<text fill="#B5693BFF" x="157.2" y="394">he user to b</text>
	<text fill="#A63A42FF" x="164.4" y="394">e saved. def</text>
	<text fill="#AC4C62FF" x="171.6" y="394"> </text>
	<text fill="#9D2C53FF" x="172.2" y="394">create_acces</text>
	<text fill="#C05579FF" x="179.4" y="394">s</text>
	<text fill="#BC426BFF" x="180.0" y="394">_token!(tok</text>
	<text fill="#AF3C68FF" x="186.6" y="394">e</text>
	<text fill="#8C305DFF" x="187.2" y="394">n_masked = f</text>
	<text fill="#84577EFF" x="194.4" y="394">a</text>
	<text fill="#6F436EFF" x="195.0" y="394">lse) access_</text>
	<text fill="#413364FF" x="202.2" y="394">token = Door</text>
	<text fill="#4E547BFF" x="209.4" y="394">k</text>
	<text fill="#29426EFF" x="210.0" y="394">eeper::Acces</text>
	<text fill="#28859EFF" x="217.2" y="394">sToken.creat</text>
	<text fill="#287D98FF" x="224.4" y="394">e</text>
	<text fill="#266787FF" x="225.0" y="394">!( applicati</text>
	<text fill="#3D4C5FFF" x="232.2" y="394">o</text>
	<text fill="#202C41FF" x="232.79999999999998" y="394">n_id:    nil</text>
	<text fill="#172428FF" x="0.0" y="395">, resourc</text>
	<text fill="#182929FF" x="5.3999999999999995" y="395">e</text>
	<text fill="#17382DFF" x="6.0" y="395">_owner_id: s</text>
	<text fill="#487D5BFF" x="13.2" y="395">e</text>
	<text fill="#317446FF" x="13.799999999999999" y="395">lf.id, scope</text>
	<text fill="#879A57FF" x="21.0" y="395">s:          </text>
	<text fill="#ACA261FF" x="28.2" y="395"> </text>
	<text fill="#B19041FF" x="28.799999999999997" y="395"> {}.to_s, ex</text>
	<text fill="#B5693BFF" x="36.0" y="395">pires_in:   </text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="395"> </text>
	<text fill="#A63A42FF" x="43.8" y="395">    Doorkeep</text>
	<text fill="#AA4766FF" x="51.0" y="395">e</text>
	<text fill="#9D2C53FF" x="51.6" y="395">r.configura</text>
	<text fill="#A53159FF" x="58.199999999999996" y="395">t</text>
	<text fill="#BC426BFF" x="58.8" y="395">ion.access_t</text>
	<text fill="#AC4F76FF" x="66.0" y="395">o</text>
	<text fill="#8C305DFF" x="66.6" y="395">ken_expires_</text>
	<text fill="#6F436EFF" x="73.8" y="395">in, use_refr</text>
	<text fill="#69517AFF" x="81.0" y="395">e</text>
	<text fill="#413364FF" x="81.6" y="395">sh_token: tr</text>
	<text fill="#47577FFF" x="88.8" y="395">u</text>
	<text fill="#29426EFF" x="89.39999999999999" y="395">e ) # Updat</text>
	<text fill="#295279FF" x="96.0" y="395">e</text>
	<text fill="#28859EFF" x="96.6" y="395"> current sig</text>
	<text fill="#407D98FF" x="103.8" y="395">n</text>
	<text fill="#266787FF" x="104.39999999999999" y="395">in date and </text>
	<text fill="#202C41FF" x="111.6" y="395">count self.u</text>
	<text fill="#38434DFF" x="118.8" y="395">p</text>
	<text fill="#172428FF" x="119.39999999999999" y="395">date_current</text>
	<text fill="#17382DFF" x="126.6" y="395">_signin! unl</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="395">e</text>
	<text fill="#317446FF" x="134.4" y="395">ss token_mas</text>
	<text fill="#8BA169FF" x="141.6" y="395">k</text>
	<text fill="#879A57FF" x="142.2" y="395">ed # Return</text>
	<text fill="#939852FF" x="148.79999999999998" y="395"> </text>
	<text fill="#B19041FF" x="149.4" y="395">the access t</text>
	<text fill="#BC8B56FF" x="156.6" y="395">o</text>
	<text fill="#B5693BFF" x="157.2" y="395">ken access_t</text>
	<text fill="#A63A42FF" x="164.4" y="395">oken end def</text>
	<text fill="#AC4C62FF" x="171.6" y="395"> </text>
	<text fill="#9D2C53FF" x="172.2" y="395">update_curre</text>
	<text fill="#C05579FF" x="179.4" y="395">n</text>
	<text fill="#BC426BFF" x="180.0" y="395">t_signin! s</text>
	<text fill="#AF3C68FF" x="186.6" y="395">e</text>
	<text fill="#8C305DFF" x="187.2" y="395">lf.sign_in_c</text>
	<text fill="#84577EFF" x="194.4" y="395">o</text>
	<text fill="#6F436EFF" x="195.0" y="395">unt += 1 sel</text>
	<text fill="#413364FF" x="202.2" y="395">f.last_sign_</text>
	<text fill="#4E547BFF" x="209.4" y="395">i</text>
	<text fill="#29426EFF" x="210.0" y="395">n_at = self.</text>
	<text fill="#28859EFF" x="217.2" y="395">current_sign</text>
	<text fill="#287D98FF" x="224.4" y="395">_</text>
	<text fill="#266787FF" x="225.0" y="395">in_at self.c</text>
	<text fill="#3D4C5FFF" x="232.2" y="395">u</text>
	<text fill="#202C41FF" x="232.79999999999998" y="395">rrent_sign_i</text>
	<text fill="#172428FF" x="0.0" y="396">n_at = Ti</text>
	<text fill="#182929FF" x="5.3999999999999995" y="396">m</text>
	<text fill="#17382DFF" x="6.0" y="396">e.current su</text>
	<text fill="#487D5BFF" x="13.2" y="396">c</text>
	<text fill="#317446FF" x="13.799999999999999" y="396">cess = self.</text>
	<text fill="#879A57FF" x="21.0" y="396">save! self.p</text>
	<text fill="#ACA261FF" x="28.2" y="396">r</text>
	<text fill="#B19041FF" x="28.799999999999997" y="396">ocess_on_sig</text>
	<text fill="#B5693BFF" x="36.0" y="396">nin_async(se</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="396">l</text>
	<text fill="#A63A42FF" x="43.8" y="396">f.current_si</text>
	<text fill="#AA4766FF" x="51.0" y="396">g</text>
	<text fill="#9D2C53FF" x="51.6" y="396">n_in_at) su</text>
	<text fill="#A53159FF" x="58.199999999999996" y="396">c</text>
	<text fill="#BC426BFF" x="58.8" y="396">cess end def</text>
	<text fill="#AC4F76FF" x="66.0" y="396"> </text>
	<text fill="#8C305DFF" x="66.6" y="396">process_on_s</text>
	<text fill="#6F436EFF" x="73.8" y="396">ignin(ts = n</text>
	<text fill="#69517AFF" x="81.0" y="396">i</text>
	<text fill="#413364FF" x="81.6" y="396">l) self.log_</text>
	<text fill="#47577FFF" x="88.8" y="396">e</text>
	<text fill="#29426EFF" x="89.39999999999999" y="396">vent(EventT</text>
	<text fill="#295279FF" x="96.0" y="396">e</text>
	<text fill="#28859EFF" x="96.6" y="396">mplate::SIGN</text>
	<text fill="#407D98FF" x="103.8" y="396">E</text>
	<text fill="#266787FF" x="104.39999999999999" y="396">D_IN, ts) se</text>
	<text fill="#202C41FF" x="111.6" y="396">lf.cohort_us</text>
	<text fill="#38434DFF" x="118.8" y="396">e</text>
	<text fill="#172428FF" x="119.39999999999999" y="396">rs.instructo</text>
	<text fill="#17382DFF" x="126.6" y="396">rs.active.ea</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="396">c</text>
	<text fill="#317446FF" x="134.4" y="396">h do |cu| ci</text>
	<text fill="#8BA169FF" x="141.6" y="396"> </text>
	<text fill="#879A57FF" x="142.2" y="396">= cu.become</text>
	<text fill="#939852FF" x="148.79999999999998" y="396">s</text>
	<text fill="#B19041FF" x="149.4" y="396">(CohortInstr</text>
	<text fill="#BC8B56FF" x="156.6" y="396">u</text>
	<text fill="#B5693BFF" x="157.2" y="396">ctor) ci.not</text>
	<text fill="#A63A42FF" x="164.4" y="396">ify_student_</text>
	<text fill="#AC4C62FF" x="171.6" y="396">i</text>
	<text fill="#9D2C53FF" x="172.2" y="396">nactivity(se</text>
	<text fill="#C05579FF" x="179.4" y="396">l</text>
	<text fill="#BC426BFF" x="180.0" y="396">f.instituti</text>
	<text fill="#AF3C68FF" x="186.6" y="396">o</text>
	<text fill="#8C305DFF" x="187.2" y="396">n.inactivity</text>
	<text fill="#84577EFF" x="194.4" y="396">_</text>
	<text fill="#6F436EFF" x="195.0" y="396">days.to_i)  </text>
	<text fill="#413364FF" x="202.2" y="396">            </text>
	<text fill="#4E547BFF" x="209.4" y="396"> </text>
	<text fill="#29426EFF" x="210.0" y="396">if self.inst</text>
	<text fill="#28859EFF" x="217.2" y="396">itution.inac</text>
	<text fill="#287D98FF" x="224.4" y="396">t</text>
	<text fill="#266787FF" x="225.0" y="396">ivity_days.t</text>
	<text fill="#3D4C5FFF" x="232.2" y="396">o</text>
	<text fill="#202C41FF" x="232.79999999999998" y="396">_i &gt; 0 ci.no</text>
	<text fill="#172428FF" x="0.0" y="397">tify_inst</text>
	<text fill="#182929FF" x="5.3999999999999995" y="397">r</text>
	<text fill="#17382DFF" x="6.0" y="397">uctor_inacti</text>
	<text fill="#487D5BFF" x="13.2" y="397">v</text>
	<text fill="#317446FF" x="13.799999999999999" y="397">ity(self.ins</text>
	<text fill="#879A57FF" x="21.0" y="397">titution.ins</text>
	<text fill="#ACA261FF" x="28.2" y="397">t</text>
	<text fill="#B19041FF" x="28.799999999999997" y="397">ructor_inact</text>
	<text fill="#B5693BFF" x="36.0" y="397">ivity_days.t</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="397">o</text>
	<text fill="#A63A42FF" x="43.8" y="397">_i) if self.</text>
	<text fill="#AA4766FF" x="51.0" y="397">i</text>
	<text fill="#9D2C53FF" x="51.6" y="397">nstitution.</text>
	<text fill="#A53159FF" x="58.199999999999996" y="397">i</text>
	<text fill="#BC426BFF" x="58.8" y="397">nstructor_in</text>
	<text fill="#AC4F76FF" x="66.0" y="397">a</text>
	<text fill="#8C305DFF" x="66.6" y="397">ctivity_days</text>
	<text fill="#6F436EFF" x="73.8" y="397">.to_i &gt; 0 en</text>
	<text fill="#69517AFF" x="81.0" y="397">d</text>
	<text fill="#413364FF" x="81.6" y="397"> UserStat.up</text>
	<text fill="#47577FFF" x="88.8" y="397">d</text>
	<text fill="#29426EFF" x="89.39999999999999" y="397">ate_stats_a</text>
	<text fill="#295279FF" x="96.0" y="397">s</text>
	<text fill="#28859EFF" x="96.6" y="397">ync(self) en</text>
	<text fill="#407D98FF" x="103.8" y="397">d</text>
	<text fill="#266787FF" x="104.39999999999999" y="397"> def process</text>
	<text fill="#202C41FF" x="111.6" y="397">_on_signout(</text>
	<text fill="#38434DFF" x="118.8" y="397">t</text>
	<text fill="#172428FF" x="119.39999999999999" y="397">s = nil) sel</text>
	<text fill="#17382DFF" x="126.6" y="397">f.log_event(</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="397">E</text>
	<text fill="#317446FF" x="134.4" y="397">ventTemplate</text>
	<text fill="#8BA169FF" x="141.6" y="397">:</text>
	<text fill="#879A57FF" x="142.2" y="397">:SIGNED_OUT</text>
	<text fill="#939852FF" x="148.79999999999998" y="397">,</text>
	<text fill="#B19041FF" x="149.4" y="397"> ts) UserSta</text>
	<text fill="#BC8B56FF" x="156.6" y="397">t</text>
	<text fill="#B5693BFF" x="157.2" y="397">.update_stat</text>
	<text fill="#A63A42FF" x="164.4" y="397">s_async(self</text>
	<text fill="#AC4C62FF" x="171.6" y="397">)</text>
	<text fill="#9D2C53FF" x="172.2" y="397">   # Even th</text>
	<text fill="#C05579FF" x="179.4" y="397">o</text>
	<text fill="#BC426BFF" x="180.0" y="397">ugh people </text>
	<text fill="#AF3C68FF" x="186.6" y="397">d</text>
	<text fill="#8C305DFF" x="187.2" y="397">o not often </text>
	<text fill="#84577EFF" x="194.4" y="397">s</text>
	<text fill="#6F436EFF" x="195.0" y="397">ign out, it </text>
	<text fill="#413364FF" x="202.2" y="397">doesn't hurt</text>
	<text fill="#4E547BFF" x="209.4" y="397">.</text>
	<text fill="#29426EFF" x="210.0" y="397"> end # Log a</text>
	<text fill="#28859EFF" x="217.2" y="397">n event rela</text>
	<text fill="#287D98FF" x="224.4" y="397">t</text>
	<text fill="#266787FF" x="225.0" y="397">ed to me def</text>
	<text fill="#3D4C5FFF" x="232.2" y="397"> </text>
	<text fill="#202C41FF" x="232.79999999999998" y="397">log_event(te</text>
	<text fill="#172428FF" x="0.0" y="398">mplate_id</text>
	<text fill="#182929FF" x="5.3999999999999995" y="398">,</text>
	<text fill="#17382DFF" x="6.0" y="398"> ts = nil) t</text>
	<text fill="#487D5BFF" x="13.2" y="398">s</text>
	<text fill="#317446FF" x="13.799999999999999" y="398"> ||= Time.cu</text>
	<text fill="#879A57FF" x="21.0" y="398">rrent attrs </text>
	<text fill="#ACA261FF" x="28.2" y="398">=</text>
	<text fill="#B19041FF" x="28.799999999999997" y="398"> { template_</text>
	<text fill="#B5693BFF" x="36.0" y="398">identifier: </text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="398">t</text>
	<text fill="#A63A42FF" x="43.8" y="398">emplate_id, </text>
	<text fill="#AA4766FF" x="51.0" y="398">g</text>
	<text fill="#9D2C53FF" x="51.6" y="398">rouping_id:</text>
	<text fill="#A53159FF" x="58.199999999999996" y="398"> </text>
	<text fill="#BC426BFF" x="58.8" y="398">self.usernam</text>
	<text fill="#AC4F76FF" x="66.0" y="398">e</text>
	<text fill="#8C305DFF" x="66.6" y="398">, whodunnit_</text>
	<text fill="#6F436EFF" x="73.8" y="398">id: self.id,</text>
	<text fill="#69517AFF" x="81.0" y="398"> </text>
	<text fill="#413364FF" x="81.6" y="398">subject_id: </text>
	<text fill="#47577FFF" x="88.8" y="398">s</text>
	<text fill="#29426EFF" x="89.39999999999999" y="398">elf.id, sub</text>
	<text fill="#295279FF" x="96.0" y="398">j</text>
	<text fill="#28859EFF" x="96.6" y="398">ect_type: se</text>
	<text fill="#407D98FF" x="103.8" y="398">l</text>
	<text fill="#266787FF" x="104.39999999999999" y="398">f.class.name</text>
	<text fill="#202C41FF" x="111.6" y="398">, user_id: s</text>
	<text fill="#38434DFF" x="118.8" y="398">e</text>
	<text fill="#172428FF" x="119.39999999999999" y="398">lf.id, creat</text>
	<text fill="#17382DFF" x="126.6" y="398">ed_at: ts, u</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="398">p</text>
	<text fill="#317446FF" x="134.4" y="398">dated_at: ts</text>
	<text fill="#8BA169FF" x="141.6" y="398"> </text>
	<text fill="#879A57FF" x="142.2" y="398">} Event.pub</text>
	<text fill="#939852FF" x="148.79999999999998" y="398">l</text>
	<text fill="#B19041FF" x="149.4" y="398">ish(attrs) e</text>
	<text fill="#BC8B56FF" x="156.6" y="398">n</text>
	<text fill="#B5693BFF" x="157.2" y="398">d def announ</text>
	<text fill="#A63A42FF" x="164.4" y="398">cements Anno</text>
	<text fill="#AC4C62FF" x="171.6" y="398">u</text>
	<text fill="#9D2C53FF" x="172.2" y="398">ncement.get_</text>
	<text fill="#C05579FF" x="179.4" y="398">f</text>
	<text fill="#BC426BFF" x="180.0" y="398">or_user(sel</text>
	<text fill="#AF3C68FF" x="186.6" y="398">f</text>
	<text fill="#8C305DFF" x="187.2" y="398">) end protec</text>
	<text fill="#84577EFF" x="194.4" y="398">t</text>
	<text fill="#6F436EFF" x="195.0" y="398">ed # OVERRID</text>
	<text fill="#413364FF" x="202.2" y="398">E for Audita</text>
	<text fill="#4E547BFF" x="209.4" y="398">b</text>
	<text fill="#29426EFF" x="210.0" y="398">le # Provide</text>
	<text fill="#28859EFF" x="217.2" y="398"> a list of a</text>
	<text fill="#287D98FF" x="224.4" y="398">t</text>
	<text fill="#266787FF" x="225.0" y="398">tribute name</text>
	<text fill="#3D4C5FFF" x="232.2" y="398"> </text>
	<text fill="#202C41FF" x="232.79999999999998" y="398">strings to i</text>
	<text fill="#172428FF" x="0.0" y="399">gnore def</text>
	<text fill="#182929FF" x="5.3999999999999995" y="399"> </text>
	<text fill="#17382DFF" x="6.0" y="399">audit_ignore</text>
	<text fill="#487D5BFF" x="13.2" y="399"> </text>
	<text fill="#317446FF" x="13.799999999999999" y="399">[ 'reset_pas</text>
	<text fill="#879A57FF" x="21.0" y="399">sword_token'</text>
	<text fill="#ACA261FF" x="28.2" y="399">,</text>
	<text fill="#B19041FF" x="28.799999999999997" y="399"> 'reset_pass</text>
	<text fill="#B5693BFF" x="36.0" y="399">word_sent_at</text>
	<text fill="#B15E3EFF" x="43.199999999999996" y="399">'</text>
	<text fill="#A63A42FF" x="43.8" y="399">, 'sign_in_c</text>
	<text fill="#AA4766FF" x="51.0" y="399">o</text>
	<text fill="#9D2C53FF" x="51.6" y="399">unt', 'curr</text>
	<text fill="#A53159FF" x="58.199999999999996" y="399">e</text>
	<text fill="#BC426BFF" x="58.8" y="399">nt_sign_in_a</text>
	<text fill="#AC4F76FF" x="66.0" y="399">t</text>
	<text fill="#8C305DFF" x="66.6" y="399">', 'last_sig</text>
	<text fill="#6F436EFF" x="73.8" y="399">n_in_at', 'a</text>
	<text fill="#69517AFF" x="81.0" y="399">u</text>
	<text fill="#413364FF" x="81.6" y="399">thentication</text>
	<text fill="#47577FFF" x="88.8" y="399">_</text>
	<text fill="#29426EFF" x="89.39999999999999" y="399">token', 'cu</text>
	<text fill="#295279FF" x="96.0" y="399">r</text>
	<text fill="#28859EFF" x="96.6" y="399">rent_sign_in</text>
	<text fill="#407D98FF" x="103.8" y="399">_</text>
	<text fill="#266787FF" x="104.39999999999999" y="399">token' ] end</text>
	<text fill="#202C41FF" x="111.6" y="399"> # This is c</text>
	<text fill="#38434DFF" x="118.8" y="399">a</text>
	<text fill="#172428FF" x="119.39999999999999" y="399">lled when ev</text>
	<text fill="#17382DFF" x="126.6" y="399">aluating Rig</text>
	<text fill="#1E4735FF" x="133.79999999999998" y="399">h</text>
	<text fill="#317446FF" x="134.4" y="399">t::READGRAPH</text>
	<text fill="#8BA169FF" x="141.6" y="399">S</text>
	<text fill="#879A57FF" x="142.2" y="399"> def can_re</text>
	<text fill="#939852FF" x="148.79999999999998" y="399">a</text>
	<text fill="#B19041FF" x="149.4" y="399">d_graphs?(us</text>
	<text fill="#BC8B56FF" x="156.6" y="399">e</text>
	<text fill="#B5693BFF" x="157.2" y="399">r) # WARNING</text>
	<text fill="#A63A42FF" x="164.4" y="399">, this will </text>
	<text fill="#AC4C62FF" x="171.6" y="399">l</text>
	<text fill="#9D2C53FF" x="172.2" y="399">et ANY instr</text>
	<text fill="#C05579FF" x="179.4" y="399">u</text>
	<text fill="#BC426BFF" x="180.0" y="399">ctor for th</text>
	<text fill="#AF3C68FF" x="186.6" y="399">e</text>
	<text fill="#8C305DFF" x="187.2" y="399"> user view a</text>
	<text fill="#84577EFF" x="194.4" y="399">l</text>
	<text fill="#6F436EFF" x="195.0" y="399">l graphs for</text>
	<text fill="#413364FF" x="202.2" y="399"> the user. #</text>
	<text fill="#4E547BFF" x="209.4" y="399"> </text>
	<text fill="#29426EFF" x="210.0" y="399">You really s</text>
	<text fill="#28859EFF" x="217.2" y="399">hould check </text>
	<text fill="#287D98FF" x="224.4" y="399">f</text>
	<text fill="#266787FF" x="225.0" y="399">or permitted</text>
	<text fill="#3D4C5FFF" x="232.2" y="399"> </text>
	<text fill="#202C41FF" x="232.79999999999998" y="399">on the cohor</text>
</svg>